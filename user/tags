!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Align	umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	sh.c	12;"	d	file:
BUFSZ	usertests.c	20;"	d	file:
Disassembly	cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	grind.asm	/^Disassembly of section .text:$/;"	l
Disassembly	init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	zombie.asm	/^Disassembly of section .text:$/;"	l
EXEC	sh.c	8;"	d	file:
Header	umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
LIST	sh.c	11;"	d	file:
MAXARGS	sh.c	14;"	d	file:
N	forktest.asm	/^#define N  1000$/;"	d
N	forktest.c	8;"	d	file:
PIPE	sh.c	10;"	d	file:
REDIR	sh.c	9;"	d	file:
a	cat.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	echo.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	forktest.asm	/^   a:	84aa                	mv	s1,a0$/;"	l
a	grep.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	init.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	kill.asm	/^   a:	1000                	addi	s0,sp,32$/;"	l
a	ln.asm	/^   a:	478d                	li	a5,3$/;"	l
a	ls.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	mkdir.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	rm.asm	/^   a:	e44e                	sd	s3,8(sp)$/;"	l
a	sh.asm	/^       a:	1000                	addi	s0,sp,32$/;"	l
a	usertests.asm	/^    a = b + 1;$/;"	d
a	usertests.asm	/^    a = sbrk(0);$/;"	d
a	usertests.asm	/^    a = sbrk(TOOMUCH);$/;"	d
a	usertests.asm	/^  a = sbrk(0);$/;"	d
a	usertests.asm	/^  a = sbrk(PGSIZE);$/;"	d
a	wc.asm	/^   a:	ecce                	sd	s3,88(sp)$/;"	l
a0	cat.asm	/^  a0:	00858913          	addi	s2,a1,8$/;"	l
a0	echo.asm	/^  a0:	1141                	addi	sp,sp,-16$/;"	l
a0	forktest.asm	/^  a0:	34fd                	addiw	s1,s1,-1$/;"	l
a0	grep.asm	/^  a0:	b7e5                	j	88 <matchhere+0x3a>$/;"	l
a0	ls.asm	/^  a0:	02000593          	li	a1,32$/;"	l
a0	mkdir.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	rm.asm	/^  a0:	0005c703          	lbu	a4,0(a1)$/;"	l
a0	sh.asm	/^      a0:	00000097          	auipc	ra,0x0$/;"	l
a0	stressfs.asm	/^  a0:	00000097          	auipc	ra,0x0$/;"	l
a0	usertests.asm	/^      a0:	e426                	sd	s1,8(sp)$/;"	l
a0	wc.asm	/^  a0:	02095913          	srli	s2,s2,0x20$/;"	l
a0	zombie.asm	/^  a0:	0800                	addi	s0,sp,16$/;"	l
a00	grep.asm	/^ a00:	6398                	ld	a4,0(a5)$/;"	l
a00	ls.asm	/^ a00:	97ba                	add	a5,a5,a4$/;"	l
a00	usertests.asm	/^     a00:	854e                	mv	a0,s3$/;"	l
a02	grep.asm	/^ a02:	e118                	sd	a4,0(a0)$/;"	l
a02	grind.asm	/^     a02:	7aa080e7          	jalr	1962(ra) # 11a8 <fprintf>$/;"	l
a02	ls.asm	/^ a02:	0137a423          	sw	s3,8(a5)$/;"	l
a02	sh.asm	/^     a02:	df6080e7          	jalr	-522(ra) # 7f4 <parseline>$/;"	l
a02	usertests.asm	/^     a02:	00005097          	auipc	ra,0x5$/;"	l
a04	grep.asm	/^ a04:	bff1                	j	9e0 <malloc+0x86>$/;"	l
a06	grep.asm	/^ a06:	01652423          	sw	s6,8(a0)$/;"	l
a06	grind.asm	/^     a06:	4511                	li	a0,4$/;"	l
a06	ls.asm	/^ a06:	00000717          	auipc	a4,0x0$/;"	l
a06	sh.asm	/^     a06:	892a                	mv	s2,a0$/;"	l
a06	usertests.asm	/^     a06:	996080e7          	jalr	-1642(ra) # 5398 <write>$/;"	l
a08	grind.asm	/^     a08:	00000097          	auipc	ra,0x0$/;"	l
a08	sh.asm	/^     a08:	00001617          	auipc	a2,0x1$/;"	l
a0a	grep.asm	/^ a0a:	0541                	addi	a0,a0,16$/;"	l
a0a	ls.asm	/^ a0a:	0ea73923          	sd	a0,242(a4) # af8 <freep>$/;"	l
a0a	usertests.asm	/^     a0a:	40000793          	li	a5,1024$/;"	l
a0c	grep.asm	/^ a0c:	00000097          	auipc	ra,0x0$/;"	l
a0c	grind.asm	/^     a0c:	456080e7          	jalr	1110(ra) # e5e <exit>$/;"	l
a0c	sh.asm	/^     a0c:	9c060613          	addi	a2,a2,-1600 # 13c8 <malloc+0x1c8>$/;"	l
a0e	ls.asm	/^ a0e:	01078513          	addi	a0,a5,16$/;"	l
a0e	usertests.asm	/^     a0e:	06f51c63          	bne	a0,a5,a86 <writebig+0xcc>$/;"	l
a10	grep.asm	/^ a10:	ec6080e7          	jalr	-314(ra) # 8d2 <free>$/;"	l
a10	grind.asm	/^     a10:	f9842503          	lw	a0,-104(s0)$/;"	l
a10	sh.asm	/^     a10:	85a6                	mv	a1,s1$/;"	l
a12	ls.asm	/^ a12:	70e2                	ld	ra,56(sp)$/;"	l
a12	sh.asm	/^     a12:	fd840513          	addi	a0,s0,-40$/;"	l
a12	usertests.asm	/^     a12:	2485                	addiw	s1,s1,1$/;"	l
a14	grep.asm	/^ a14:	00093503          	ld	a0,0(s2)$/;"	l
a14	grind.asm	/^     a14:	00000097          	auipc	ra,0x0$/;"	l
a14	ls.asm	/^ a14:	7442                	ld	s0,48(sp)$/;"	l
a14	usertests.asm	/^     a14:	ff4491e3          	bne	s1,s4,9f6 <writebig+0x3c>$/;"	l
a16	ls.asm	/^ a16:	74a2                	ld	s1,40(sp)$/;"	l
a16	sh.asm	/^     a16:	00000097          	auipc	ra,0x0$/;"	l
a18	grep.asm	/^ a18:	d971                	beqz	a0,9ec <malloc+0x92>$/;"	l
a18	grind.asm	/^     a18:	472080e7          	jalr	1138(ra) # e86 <close>$/;"	l
a18	ls.asm	/^ a18:	7902                	ld	s2,32(sp)$/;"	l
a18	usertests.asm	/^     a18:	854e                	mv	a0,s3$/;"	l
a1a	grep.asm	/^ a1a:	611c                	ld	a5,0(a0)$/;"	l
a1a	ls.asm	/^ a1a:	69e2                	ld	s3,24(sp)$/;"	l
a1a	sh.asm	/^     a1a:	b02080e7          	jalr	-1278(ra) # 518 <peek>$/;"	l
a1a	usertests.asm	/^     a1a:	00005097          	auipc	ra,0x5$/;"	l
a1c	grep.asm	/^ a1c:	4798                	lw	a4,8(a5)$/;"	l
a1c	grind.asm	/^     a1c:	4505                	li	a0,1$/;"	l
a1c	ls.asm	/^ a1c:	6a42                	ld	s4,16(sp)$/;"	l
a1e	grep.asm	/^ a1e:	fa9776e3          	bgeu	a4,s1,9ca <malloc+0x70>$/;"	l
a1e	grind.asm	/^     a1e:	00000097          	auipc	ra,0x0$/;"	l
a1e	ls.asm	/^ a1e:	6aa2                	ld	s5,8(sp)$/;"	l
a1e	sh.asm	/^     a1e:	fd843603          	ld	a2,-40(s0)$/;"	l
a1e	usertests.asm	/^     a1e:	986080e7          	jalr	-1658(ra) # 53a0 <close>$/;"	l
a2	echo.asm	/^  a2:	e422                	sd	s0,8(sp)$/;"	l
a2	forktest.asm	/^  a2:	f8e5                	bnez	s1,92 <forktest+0x64>$/;"	l
a2	grep.asm	/^  a2:	c691                	beqz	a3,ae <matchhere+0x60>$/;"	l
a2	grind.asm	/^      a2:	00001097          	auipc	ra,0x1$/;"	l
a2	init.asm	/^  a2:	00000097          	auipc	ra,0x0$/;"	l
a2	kill.asm	/^  a2:	40a7853b          	subw	a0,a5,a0$/;"	l
a2	ln.asm	/^  a2:	6422                	ld	s0,8(sp)$/;"	l
a2	usertests.asm	/^      a2:	1000                	addi	s0,sp,32$/;"	l
a2	zombie.asm	/^  a2:	ce09                	beqz	a2,bc <memset+0x20>$/;"	l
a20	ls.asm	/^ a20:	6b02                	ld	s6,0(sp)$/;"	l
a22	grep.asm	/^ a22:	00093703          	ld	a4,0(s2)$/;"	l
a22	grind.asm	/^     a22:	468080e7          	jalr	1128(ra) # e86 <close>$/;"	l
a22	ls.asm	/^ a22:	6121                	addi	sp,sp,64$/;"	l
a22	sh.asm	/^     a22:	00961e63          	bne	a2,s1,a3e <parsecmd+0x66>$/;"	l
a22	usertests.asm	/^     a22:	4581                	li	a1,0$/;"	l
a24	ls.asm	/^ a24:	8082                	ret$/;"	l
a24	usertests.asm	/^     a24:	00005517          	auipc	a0,0x5$/;"	l
a26	grep.asm	/^ a26:	853e                	mv	a0,a5$/;"	l
a26	grind.asm	/^     a26:	fa442503          	lw	a0,-92(s0)$/;"	l
a26	ls.asm	/^ a26:	6398                	ld	a4,0(a5)$/;"	l
a26	sh.asm	/^     a26:	854a                	mv	a0,s2$/;"	l
a28	grep.asm	/^ a28:	fef719e3          	bne	a4,a5,a1a <malloc+0xc0>$/;"	l
a28	ls.asm	/^ a28:	e118                	sd	a4,0(a0)$/;"	l
a28	sh.asm	/^     a28:	00000097          	auipc	ra,0x0$/;"	l
a28	usertests.asm	/^     a28:	57450513          	addi	a0,a0,1396 # 5f98 <malloc+0x7ea>$/;"	l
a2a	grind.asm	/^     a2a:	00000097          	auipc	ra,0x0$/;"	l
a2a	ls.asm	/^ a2a:	bff1                	j	a06 <malloc+0x86>$/;"	l
a2c	grep.asm	/^ a2c:	8552                	mv	a0,s4$/;"	l
a2c	ls.asm	/^ a2c:	01652423          	sw	s6,8(a0)$/;"	l
a2c	sh.asm	/^     a2c:	f18080e7          	jalr	-232(ra) # 940 <nulterminate>$/;"	l
a2c	usertests.asm	/^     a2c:	00005097          	auipc	ra,0x5$/;"	l
a2e	grep.asm	/^ a2e:	00000097          	auipc	ra,0x0$/;"	l
a2e	grind.asm	/^     a2e:	4ac080e7          	jalr	1196(ra) # ed6 <dup>$/;"	l
a30	ls.asm	/^ a30:	0541                	addi	a0,a0,16$/;"	l
a30	sh.asm	/^     a30:	854a                	mv	a0,s2$/;"	l
a30	usertests.asm	/^     a30:	98c080e7          	jalr	-1652(ra) # 53b8 <open>$/;"	l
a32	grep.asm	/^ a32:	b7e080e7          	jalr	-1154(ra) # 5ac <sbrk>$/;"	l
a32	grind.asm	/^     a32:	4785                	li	a5,1$/;"	l
a32	ls.asm	/^ a32:	00000097          	auipc	ra,0x0$/;"	l
a32	sh.asm	/^     a32:	70a2                	ld	ra,40(sp)$/;"	l
a34	grind.asm	/^     a34:	02f50063          	beq	a0,a5,a54 <go+0x9dc>$/;"	l
a34	sh.asm	/^     a34:	7402                	ld	s0,32(sp)$/;"	l
a34	usertests.asm	/^     a34:	89aa                	mv	s3,a0$/;"	l
a36	grep.asm	/^ a36:	fd5518e3          	bne	a0,s5,a06 <malloc+0xac>$/;"	l
a36	ls.asm	/^ a36:	ec6080e7          	jalr	-314(ra) # 8f8 <free>$/;"	l
a36	sh.asm	/^     a36:	64e2                	ld	s1,24(sp)$/;"	l
a36	usertests.asm	/^     a36:	4481                	li	s1,0$/;"	l
a38	grind.asm	/^     a38:	00001597          	auipc	a1,0x1$/;"	l
a38	sh.asm	/^     a38:	6942                	ld	s2,16(sp)$/;"	l
a38	usertests.asm	/^     a38:	0000b917          	auipc	s2,0xb$/;"	l
a3a	grep.asm	/^ a3a:	4501                	li	a0,0$/;"	l
a3a	ls.asm	/^ a3a:	00093503          	ld	a0,0(s2)$/;"	l
a3a	sh.asm	/^     a3a:	6145                	addi	sp,sp,48$/;"	l
a3c	grep.asm	/^ a3c:	bf45                	j	9ec <malloc+0x92>$/;"	l
a3c	grind.asm	/^     a3c:	b7858593          	addi	a1,a1,-1160 # 15b0 <malloc+0x31c>$/;"	l
a3c	sh.asm	/^     a3c:	8082                	ret$/;"	l
a3c	usertests.asm	/^     a3c:	d0090913          	addi	s2,s2,-768 # b738 <buf>$/;"	l
a3e	ls.asm	/^ a3e:	d971                	beqz	a0,a12 <malloc+0x92>$/;"	l
a3e	sh.asm	/^     a3e:	00001597          	auipc	a1,0x1$/;"	l
a4	cat.asm	/^  a4:	ffe5099b          	addiw	s3,a0,-2$/;"	l
a4	echo.asm	/^  a4:	0800                	addi	s0,sp,16$/;"	l
a4	forktest.asm	/^  a4:	4501                	li	a0,0$/;"	l
a4	grep.asm	/^  a4:	0005c683          	lbu	a3,0(a1)$/;"	l
a4	ln.asm	/^  a4:	0141                	addi	sp,sp,16$/;"	l
a4	ls.asm	/^  a4:	01298533          	add	a0,s3,s2$/;"	l
a4	mkdir.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	rm.asm	/^  a4:	00f71763          	bne	a4,a5,b2 <strcmp+0x1e>$/;"	l
a4	sh.asm	/^      a4:	fb4080e7          	jalr	-76(ra) # 54 <panic>$/;"	l
a4	stressfs.asm	/^  a4:	302080e7          	jalr	770(ra) # 3a2 <write>$/;"	l
a4	usertests.asm	/^      a4:	84aa                	mv	s1,a0$/;"	l
a4	wc.asm	/^  a4:	996e                	add	s2,s2,s11$/;"	l
a4	zombie.asm	/^  a4:	87aa                	mv	a5,a0$/;"	l
a40	grind.asm	/^     a40:	4509                	li	a0,2$/;"	l
a40	ls.asm	/^ a40:	611c                	ld	a5,0(a0)$/;"	l
a40	usertests.asm	/^     a40:	06054163          	bltz	a0,aa2 <writebig+0xe8>$/;"	l
a42	grind.asm	/^     a42:	00000097          	auipc	ra,0x0$/;"	l
a42	ls.asm	/^ a42:	4798                	lw	a4,8(a5)$/;"	l
a42	sh.asm	/^     a42:	99258593          	addi	a1,a1,-1646 # 13d0 <malloc+0x1d0>$/;"	l
a44	ls.asm	/^ a44:	fa9776e3          	bgeu	a4,s1,9f0 <malloc+0x70>$/;"	l
a44	usertests.asm	/^     a44:	40000613          	li	a2,1024$/;"	l
a46	grind.asm	/^     a46:	766080e7          	jalr	1894(ra) # 11a8 <fprintf>$/;"	l
a46	sh.asm	/^     a46:	4509                	li	a0,2$/;"	l
a48	ls.asm	/^ a48:	00093703          	ld	a4,0(s2)$/;"	l
a48	sh.asm	/^     a48:	00000097          	auipc	ra,0x0$/;"	l
a48	usertests.asm	/^     a48:	85ca                	mv	a1,s2$/;"	l
a4a	grind.asm	/^     a4a:	4515                	li	a0,5$/;"	l
a4a	usertests.asm	/^     a4a:	854e                	mv	a0,s3$/;"	l
a4c	grind.asm	/^     a4c:	00000097          	auipc	ra,0x0$/;"	l
a4c	ls.asm	/^ a4c:	853e                	mv	a0,a5$/;"	l
a4c	sh.asm	/^     a4c:	6cc080e7          	jalr	1740(ra) # 1114 <fprintf>$/;"	l
a4c	usertests.asm	/^     a4c:	00005097          	auipc	ra,0x5$/;"	l
a4e	ls.asm	/^ a4e:	fef719e3          	bne	a4,a5,a40 <malloc+0xc0>$/;"	l
a50	grind.asm	/^     a50:	412080e7          	jalr	1042(ra) # e5e <exit>$/;"	l
a50	sh.asm	/^     a50:	00001517          	auipc	a0,0x1$/;"	l
a50	usertests.asm	/^     a50:	944080e7          	jalr	-1724(ra) # 5390 <read>$/;"	l
a52	ls.asm	/^ a52:	8552                	mv	a0,s4$/;"	l
a54	grind.asm	/^     a54:	fa442503          	lw	a0,-92(s0)$/;"	l
a54	ls.asm	/^ a54:	00000097          	auipc	ra,0x0$/;"	l
a54	sh.asm	/^     a54:	91050513          	addi	a0,a0,-1776 # 1360 <malloc+0x160>$/;"	l
a54	usertests.asm	/^     a54:	c52d                	beqz	a0,abe <writebig+0x104>$/;"	l
a56	usertests.asm	/^     a56:	40000793          	li	a5,1024$/;"	l
a58	grind.asm	/^     a58:	00000097          	auipc	ra,0x0$/;"	l
a58	ls.asm	/^ a58:	b7e080e7          	jalr	-1154(ra) # 5d2 <sbrk>$/;"	l
a58	sh.asm	/^     a58:	fffff097          	auipc	ra,0xfffff$/;"	l
a5a	usertests.asm	/^     a5a:	0af51d63          	bne	a0,a5,b14 <writebig+0x15a>$/;"	l
a5c	grind.asm	/^     a5c:	42e080e7          	jalr	1070(ra) # e86 <close>$/;"	l
a5c	ls.asm	/^ a5c:	fd5518e3          	bne	a0,s5,a2c <malloc+0xac>$/;"	l
a5c	sh.asm	/^     a5c:	5fc080e7          	jalr	1532(ra) # 54 <panic>$/;"	l
a5e	usertests.asm	/^     a5e:	00092603          	lw	a2,0(s2)$/;"	l
a6	echo.asm	/^  a6:	00054783          	lbu	a5,0(a0)$/;"	l
a6	forktest.asm	/^  a6:	00000097          	auipc	ra,0x0$/;"	l
a6	grind.asm	/^      a6:	e24080e7          	jalr	-476(ra) # ec6 <mkdir>$/;"	l
a6	init.asm	/^  a6:	30c080e7          	jalr	780(ra) # 3ae <open>$/;"	l
a6	kill.asm	/^  a6:	6422                	ld	s0,8(sp)$/;"	l
a6	ln.asm	/^  a6:	8082                	ret$/;"	l
a6	usertests.asm	/^      a6:	4581                	li	a1,0$/;"	l
a6	wc.asm	/^  a6:	bf4d                	j	58 <wc+0x58>$/;"	l
a6	zombie.asm	/^  a6:	fff6071b          	addiw	a4,a2,-1$/;"	l
a60	grind.asm	/^     a60:	00001797          	auipc	a5,0x1$/;"	l
a60	ls.asm	/^ a60:	4501                	li	a0,0$/;"	l
a60	sh.asm	/^     a60:	7139                	addi	sp,sp,-64$/;"	l
a62	ls.asm	/^ a62:	bf45                	j	a12 <malloc+0x92>$/;"	l
a62	sh.asm	/^     a62:	fc06                	sd	ra,56(sp)$/;"	l
a62	usertests.asm	/^     a62:	0c961763          	bne	a2,s1,b30 <writebig+0x176>$/;"	l
a64	grind.asm	/^     a64:	b9878793          	addi	a5,a5,-1128 # 15f8 <malloc+0x364>$/;"	l
a64	sh.asm	/^     a64:	f822                	sd	s0,48(sp)$/;"	l
a66	sh.asm	/^     a66:	f426                	sd	s1,40(sp)$/;"	l
a66	usertests.asm	/^     a66:	2485                	addiw	s1,s1,1$/;"	l
a68	grind.asm	/^     a68:	faf43423          	sd	a5,-88(s0)$/;"	l
a68	sh.asm	/^     a68:	f04a                	sd	s2,32(sp)$/;"	l
a68	usertests.asm	/^     a68:	bff1                	j	a44 <writebig+0x8a>$/;"	l
a6a	sh.asm	/^     a6a:	ec4e                	sd	s3,24(sp)$/;"	l
a6a	usertests.asm	/^     a6a:	85d6                	mv	a1,s5$/;"	l
a6c	grind.asm	/^     a6c:	fa043823          	sd	zero,-80(s0)$/;"	l
a6c	sh.asm	/^     a6c:	e852                	sd	s4,16(sp)$/;"	l
a6c	usertests.asm	/^     a6c:	00005517          	auipc	a0,0x5$/;"	l
a6e	sh.asm	/^     a6e:	e456                	sd	s5,8(sp)$/;"	l
a70	grind.asm	/^     a70:	fa840593          	addi	a1,s0,-88$/;"	l
a70	sh.asm	/^     a70:	0080                	addi	s0,sp,64$/;"	l
a70	usertests.asm	/^     a70:	53450513          	addi	a0,a0,1332 # 5fa0 <malloc+0x7f2>$/;"	l
a72	sh.asm	/^     a72:	00001497          	auipc	s1,0x1$/;"	l
a74	grind.asm	/^     a74:	00001517          	auipc	a0,0x1$/;"	l
a74	usertests.asm	/^     a74:	00005097          	auipc	ra,0x5$/;"	l
a76	sh.asm	/^     a76:	96e48493          	addi	s1,s1,-1682 # 13e0 <malloc+0x1e0>$/;"	l
a78	grind.asm	/^     a78:	b8c50513          	addi	a0,a0,-1140 # 1600 <malloc+0x36c>$/;"	l
a78	usertests.asm	/^     a78:	c7c080e7          	jalr	-900(ra) # 56f0 <printf>$/;"	l
a7a	sh.asm	/^     a7a:	4589                	li	a1,2$/;"	l
a7c	grind.asm	/^     a7c:	00000097          	auipc	ra,0x0$/;"	l
a7c	sh.asm	/^     a7c:	8526                	mv	a0,s1$/;"	l
a7c	usertests.asm	/^     a7c:	4505                	li	a0,1$/;"	l
a7e	sh.asm	/^     a7e:	00000097          	auipc	ra,0x0$/;"	l
a7e	usertests.asm	/^     a7e:	00005097          	auipc	ra,0x5$/;"	l
a8	cat.asm	/^  a8:	1982                	slli	s3,s3,0x20$/;"	l
a8	grep.asm	/^  a8:	fee9                	bnez	a3,82 <matchhere+0x34>$/;"	l
a8	kill.asm	/^  a8:	0141                	addi	sp,sp,16$/;"	l
a8	ln.asm	/^  a8:	1141                	addi	sp,sp,-16$/;"	l
a8	ls.asm	/^  a8:	00000097          	auipc	ra,0x0$/;"	l
a8	mkdir.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	rm.asm	/^  a8:	0505                	addi	a0,a0,1$/;"	l
a8	sh.asm	/^      a8:	7179                	addi	sp,sp,-48$/;"	l
a8	stressfs.asm	/^  a8:	34fd                	addiw	s1,s1,-1$/;"	l
a8	usertests.asm	/^      a8:	00006517          	auipc	a0,0x6$/;"	l
a8	wc.asm	/^  a8:	02054e63          	bltz	a0,e4 <wc+0xe4>$/;"	l
a80	grind.asm	/^     a80:	41a080e7          	jalr	1050(ra) # e96 <exec>$/;"	l
a82	sh.asm	/^     a82:	38c080e7          	jalr	908(ra) # e0a <open>$/;"	l
a82	usertests.asm	/^     a82:	8fa080e7          	jalr	-1798(ra) # 5378 <exit>$/;"	l
a84	grind.asm	/^     a84:	00001597          	auipc	a1,0x1$/;"	l
a86	sh.asm	/^     a86:	00054963          	bltz	a0,a98 <main+0x38>$/;"	l
a86	usertests.asm	/^     a86:	85a6                	mv	a1,s1$/;"	l
a88	grind.asm	/^     a88:	b8458593          	addi	a1,a1,-1148 # 1608 <malloc+0x374>$/;"	l
a88	usertests.asm	/^     a88:	00005517          	auipc	a0,0x5$/;"	l
a8a	sh.asm	/^     a8a:	4789                	li	a5,2$/;"	l
a8c	grind.asm	/^     a8c:	4509                	li	a0,2$/;"	l
a8c	sh.asm	/^     a8c:	fea7d7e3          	bge	a5,a0,a7a <main+0x1a>$/;"	l
a8c	usertests.asm	/^     a8c:	53850513          	addi	a0,a0,1336 # 5fc0 <malloc+0x812>$/;"	l
a8e	grind.asm	/^     a8e:	00000097          	auipc	ra,0x0$/;"	l
a90	sh.asm	/^     a90:	00000097          	auipc	ra,0x0$/;"	l
a90	usertests.asm	/^     a90:	00005097          	auipc	ra,0x5$/;"	l
a92	grind.asm	/^     a92:	71a080e7          	jalr	1818(ra) # 11a8 <fprintf>$/;"	l
a94	sh.asm	/^     a94:	362080e7          	jalr	866(ra) # df2 <close>$/;"	l
a94	usertests.asm	/^     a94:	c60080e7          	jalr	-928(ra) # 56f0 <printf>$/;"	l
a96	grind.asm	/^     a96:	4519                	li	a0,6$/;"	l
a98	grind.asm	/^     a98:	00000097          	auipc	ra,0x0$/;"	l
a98	sh.asm	/^     a98:	00001497          	auipc	s1,0x1$/;"	l
a98	usertests.asm	/^     a98:	4505                	li	a0,1$/;"	l
a9a	usertests.asm	/^     a9a:	00005097          	auipc	ra,0x5$/;"	l
a9c	grind.asm	/^     a9c:	3c6080e7          	jalr	966(ra) # e5e <exit>$/;"	l
a9c	sh.asm	/^     a9c:	9c848493          	addi	s1,s1,-1592 # 1460 <buf.1133>$/;"	l
a9e	usertests.asm	/^     a9e:	8de080e7          	jalr	-1826(ra) # 5378 <exit>$/;"	l
aa	cat.asm	/^  aa:	0209d993          	srli	s3,s3,0x20$/;"	l
aa	echo.asm	/^  aa:	cb91                	beqz	a5,be <strcmp+0x1e>$/;"	l
aa	forktest.asm	/^  aa:	2f6080e7          	jalr	758(ra) # 39c <wait>$/;"	l
aa	grep.asm	/^  aa:	4501                	li	a0,0$/;"	l
aa	grind.asm	/^      aa:	00001517          	auipc	a0,0x1$/;"	l
aa	init.asm	/^  aa:	bfa5                	j	22 <main+0x22>$/;"	l
aa	kill.asm	/^  aa:	8082                	ret$/;"	l
aa	ln.asm	/^  aa:	e422                	sd	s0,8(sp)$/;"	l
aa	mkdir.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	rm.asm	/^  aa:	0585                	addi	a1,a1,1$/;"	l
aa	sh.asm	/^      aa:	f406                	sd	ra,40(sp)$/;"	l
aa	stressfs.asm	/^  aa:	f4f5                	bnez	s1,96 <main+0x96>$/;"	l
aa	zombie.asm	/^  aa:	1702                	slli	a4,a4,0x20$/;"	l
aa0	grind.asm	/^     aa0:	00001597          	auipc	a1,0x1$/;"	l
aa0	sh.asm	/^     aa0:	06300913          	li	s2,99$/;"	l
aa2	usertests.asm	/^     aa2:	85d6                	mv	a1,s5$/;"	l
aa4	grind.asm	/^     aa4:	a6858593          	addi	a1,a1,-1432 # 1508 <malloc+0x274>$/;"	l
aa4	sh.asm	/^     aa4:	02000993          	li	s3,32$/;"	l
aa4	usertests.asm	/^     aa4:	00005517          	auipc	a0,0x5$/;"	l
aa8	grind.asm	/^     aa8:	4509                	li	a0,2$/;"	l
aa8	sh.asm	/^     aa8:	00001a17          	auipc	s4,0x1$/;"	l
aa8	usertests.asm	/^     aa8:	54450513          	addi	a0,a0,1348 # 5fe8 <malloc+0x83a>$/;"	l
aaa	grind.asm	/^     aaa:	00000097          	auipc	ra,0x0$/;"	l
aac	sh.asm	/^     aac:	9bba0a13          	addi	s4,s4,-1605 # 1463 <buf.1133+0x3>$/;"	l
aac	usertests.asm	/^     aac:	00005097          	auipc	ra,0x5$/;"	l
aae	grind.asm	/^     aae:	6fe080e7          	jalr	1790(ra) # 11a8 <fprintf>$/;"	l
ab0	sh.asm	/^     ab0:	00001a97          	auipc	s5,0x1$/;"	l
ab0	usertests.asm	/^     ab0:	c44080e7          	jalr	-956(ra) # 56f0 <printf>$/;"	l
ab2	grind.asm	/^     ab2:	451d                	li	a0,7$/;"	l
ab4	grind.asm	/^     ab4:	00000097          	auipc	ra,0x0$/;"	l
ab4	sh.asm	/^     ab4:	938a8a93          	addi	s5,s5,-1736 # 13e8 <malloc+0x1e8>$/;"	l
ab4	usertests.asm	/^     ab4:	4505                	li	a0,1$/;"	l
ab6	usertests.asm	/^     ab6:	00005097          	auipc	ra,0x5$/;"	l
ab8	grind.asm	/^     ab8:	3aa080e7          	jalr	938(ra) # e5e <exit>$/;"	l
ab8	sh.asm	/^     ab8:	a819                	j	ace <main+0x6e>$/;"	l
aba	sh.asm	/^     aba:	fffff097          	auipc	ra,0xfffff$/;"	l
aba	usertests.asm	/^     aba:	8c2080e7          	jalr	-1854(ra) # 5378 <exit>$/;"	l
abc	grind.asm	/^     abc:	7179                	addi	sp,sp,-48$/;"	l
abe	grind.asm	/^     abe:	f406                	sd	ra,40(sp)$/;"	l
abe	sh.asm	/^     abe:	5c0080e7          	jalr	1472(ra) # 7a <fork1>$/;"	l
abe	usertests.asm	/^     abe:	10b00793          	li	a5,267$/;"	l
ac	echo.asm	/^  ac:	0005c703          	lbu	a4,0(a1)$/;"	l
ac	grep.asm	/^  ac:	bff1                	j	88 <matchhere+0x3a>$/;"	l
ac	init.asm	/^  ac:	00000517          	auipc	a0,0x0$/;"	l
ac	kill.asm	/^  ac:	1141                	addi	sp,sp,-16$/;"	l
ac	ln.asm	/^  ac:	0800                	addi	s0,sp,16$/;"	l
ac	ls.asm	/^  ac:	29e080e7          	jalr	670(ra) # 346 <memset>$/;"	l
ac	mkdir.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	rm.asm	/^  ac:	00054783          	lbu	a5,0(a0)$/;"	l
ac	sh.asm	/^      ac:	f022                	sd	s0,32(sp)$/;"	l
ac	stressfs.asm	/^  ac:	854a                	mv	a0,s2$/;"	l
ac	usertests.asm	/^      ac:	b2850513          	addi	a0,a0,-1240 # 5bd0 <malloc+0x422>$/;"	l
ac	wc.asm	/^  ac:	f8043703          	ld	a4,-128(s0)$/;"	l
ac	zombie.asm	/^  ac:	9301                	srli	a4,a4,0x20$/;"	l
ac0	grind.asm	/^     ac0:	f022                	sd	s0,32(sp)$/;"	l
ac2	grind.asm	/^     ac2:	ec26                	sd	s1,24(sp)$/;"	l
ac2	sh.asm	/^     ac2:	c925                	beqz	a0,b32 <main+0xd2>$/;"	l
ac2	usertests.asm	/^     ac2:	02f48a63          	beq	s1,a5,af6 <writebig+0x13c>$/;"	l
ac4	grind.asm	/^     ac4:	e84a                	sd	s2,16(sp)$/;"	l
ac4	sh.asm	/^     ac4:	4501                	li	a0,0$/;"	l
ac6	grind.asm	/^     ac6:	1800                	addi	s0,sp,48$/;"	l
ac6	sh.asm	/^     ac6:	00000097          	auipc	ra,0x0$/;"	l
ac6	usertests.asm	/^     ac6:	854e                	mv	a0,s3$/;"	l
ac8	grind.asm	/^     ac8:	00001517          	auipc	a0,0x1$/;"	l
ac8	usertests.asm	/^     ac8:	00005097          	auipc	ra,0x5$/;"	l
aca	sh.asm	/^     aca:	30c080e7          	jalr	780(ra) # dd2 <wait>$/;"	l
acc	grind.asm	/^     acc:	98850513          	addi	a0,a0,-1656 # 1450 <malloc+0x1bc>$/;"	l
acc	usertests.asm	/^     acc:	8d8080e7          	jalr	-1832(ra) # 53a0 <close>$/;"	l
ace	sh.asm	/^     ace:	06400593          	li	a1,100$/;"	l
ad0	grind.asm	/^     ad0:	00000097          	auipc	ra,0x0$/;"	l
ad0	usertests.asm	/^     ad0:	00005517          	auipc	a0,0x5$/;"	l
ad2	sh.asm	/^     ad2:	8526                	mv	a0,s1$/;"	l
ad4	grind.asm	/^     ad4:	3de080e7          	jalr	990(ra) # eae <unlink>$/;"	l
ad4	sh.asm	/^     ad4:	fffff097          	auipc	ra,0xfffff$/;"	l
ad4	usertests.asm	/^     ad4:	4c850513          	addi	a0,a0,1224 # 5f98 <malloc+0x7ea>$/;"	l
ad8	grind.asm	/^     ad8:	00001517          	auipc	a0,0x1$/;"	l
ad8	sh.asm	/^     ad8:	52c080e7          	jalr	1324(ra) # 0 <getcmd>$/;"	l
ad8	usertests.asm	/^     ad8:	00005097          	auipc	ra,0x5$/;"	l
adc	grind.asm	/^     adc:	92850513          	addi	a0,a0,-1752 # 1400 <malloc+0x16c>$/;"	l
adc	sh.asm	/^     adc:	06054763          	bltz	a0,b4a <main+0xea>$/;"	l
adc	usertests.asm	/^     adc:	8f0080e7          	jalr	-1808(ra) # 53c8 <unlink>$/;"	l
ae	cat.asm	/^  ae:	098e                	slli	s3,s3,0x3$/;"	l
ae	forktest.asm	/^  ae:	57fd                	li	a5,-1$/;"	l
ae	grep.asm	/^  ae:	0005c503          	lbu	a0,0(a1)$/;"	l
ae	grind.asm	/^      ae:	2ce50513          	addi	a0,a0,718 # 1378 <malloc+0xe4>$/;"	l
ae	kill.asm	/^  ae:	e422                	sd	s0,8(sp)$/;"	l
ae	ln.asm	/^  ae:	00054783          	lbu	a5,0(a0)$/;"	l
ae	sh.asm	/^      ae:	ec26                	sd	s1,24(sp)$/;"	l
ae	stressfs.asm	/^  ae:	00000097          	auipc	ra,0x0$/;"	l
ae	zombie.asm	/^  ae:	0705                	addi	a4,a4,1$/;"	l
ae0	grind.asm	/^     ae0:	00000097          	auipc	ra,0x0$/;"	l
ae0	sh.asm	/^     ae0:	0004c783          	lbu	a5,0(s1)$/;"	l
ae0	usertests.asm	/^     ae0:	06054663          	bltz	a0,b4c <writebig+0x192>$/;"	l
ae4	grind.asm	/^     ae4:	3ce080e7          	jalr	974(ra) # eae <unlink>$/;"	l
ae4	sh.asm	/^     ae4:	fd279be3          	bne	a5,s2,aba <main+0x5a>$/;"	l
ae4	usertests.asm	/^     ae4:	70e2                	ld	ra,56(sp)$/;"	l
ae6	usertests.asm	/^     ae6:	7442                	ld	s0,48(sp)$/;"	l
ae8	grind.asm	/^     ae8:	00000097          	auipc	ra,0x0$/;"	l
ae8	sh.asm	/^     ae8:	0014c703          	lbu	a4,1(s1)$/;"	l
ae8	usertests.asm	/^     ae8:	74a2                	ld	s1,40(sp)$/;"	l
aea	usertests.asm	/^     aea:	7902                	ld	s2,32(sp)$/;"	l
aec	grind.asm	/^     aec:	36e080e7          	jalr	878(ra) # e56 <fork>$/;"	l
aec	sh.asm	/^     aec:	06400793          	li	a5,100$/;"	l
aec	usertests.asm	/^     aec:	69e2                	ld	s3,24(sp)$/;"	l
aee	usertests.asm	/^     aee:	6a42                	ld	s4,16(sp)$/;"	l
af0	grind.asm	/^     af0:	00054e63          	bltz	a0,b0c <iter+0x50>$/;"	l
af0	sh.asm	/^     af0:	fcf715e3          	bne	a4,a5,aba <main+0x5a>$/;"	l
af0	usertests.asm	/^     af0:	6aa2                	ld	s5,8(sp)$/;"	l
af2	usertests.asm	/^     af2:	6121                	addi	sp,sp,64$/;"	l
af4	grind.asm	/^     af4:	84aa                	mv	s1,a0$/;"	l
af4	sh.asm	/^     af4:	0024c783          	lbu	a5,2(s1)$/;"	l
af4	usertests.asm	/^     af4:	8082                	ret$/;"	l
af6	grind.asm	/^     af6:	e905                	bnez	a0,b26 <iter+0x6a>$/;"	l
af6	usertests.asm	/^     af6:	10b00593          	li	a1,267$/;"	l
af8	grind.asm	/^     af8:	47fd                	li	a5,31$/;"	l
af8	sh.asm	/^     af8:	fd3791e3          	bne	a5,s3,aba <main+0x5a>$/;"	l
afa	grind.asm	/^     afa:	00001717          	auipc	a4,0x1$/;"	l
afa	usertests.asm	/^     afa:	00005517          	auipc	a0,0x5$/;"	l
afc	sh.asm	/^     afc:	8526                	mv	a0,s1$/;"	l
afe	grind.asm	/^     afe:	b6f73323          	sd	a5,-1178(a4) # 1660 <rand_next>$/;"	l
afe	sh.asm	/^     afe:	00000097          	auipc	ra,0x0$/;"	l
afe	usertests.asm	/^     afe:	50e50513          	addi	a0,a0,1294 # 6008 <malloc+0x85a>$/;"	l
argc	sh.asm	/^  argc = 0;$/;"	d
argptest	usertests.c	/^void argptest(char *s)$/;"	f
argv	init.c	/^char *argv[] = { "sh", 0 };$/;"	v
argv	initcode.S	/^argv:$/;"	l
argv	sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
atoi	ulib.c	/^atoi(const char *s)$/;"	f
b	usertests.asm	/^    b = sbrk(1);$/;"	d
b0	cat.asm	/^  b0:	05c1                	addi	a1,a1,16$/;"	l
b0	echo.asm	/^  b0:	00f71763          	bne	a4,a5,be <strcmp+0x1e>$/;"	l
b0	forktest.asm	/^  b0:	02f51d63          	bne	a0,a5,ea <forktest+0xbc>$/;"	l
b0	init.asm	/^  b0:	7fc50513          	addi	a0,a0,2044 # 8a8 <malloc+0x104>$/;"	l
b0	kill.asm	/^  b0:	0800                	addi	s0,sp,16$/;"	l
b0	ls.asm	/^  b0:	84ce                	mv	s1,s3$/;"	l
b0	mkdir.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	rm.asm	/^  b0:	fbe5                	bnez	a5,a0 <strcmp+0xc>$/;"	l
b0	sh.asm	/^      b0:	1800                	addi	s0,sp,48$/;"	l
b0	usertests.asm	/^      b0:	00005097          	auipc	ra,0x5$/;"	l
b0	wc.asm	/^  b0:	86e6                	mv	a3,s9$/;"	l
b0	zombie.asm	/^  b0:	972a                	add	a4,a4,a0$/;"	l
b02	grind.asm	/^     b02:	4501                	li	a0,0$/;"	l
b02	sh.asm	/^     b02:	09e080e7          	jalr	158(ra) # b9c <strlen>$/;"	l
b02	usertests.asm	/^     b02:	00005097          	auipc	ra,0x5$/;"	l
b04	grind.asm	/^     b04:	fffff097          	auipc	ra,0xfffff$/;"	l
b06	sh.asm	/^     b06:	fff5079b          	addiw	a5,a0,-1$/;"	l
b06	usertests.asm	/^     b06:	bee080e7          	jalr	-1042(ra) # 56f0 <printf>$/;"	l
b08	grind.asm	/^     b08:	574080e7          	jalr	1396(ra) # 78 <go>$/;"	l
b0a	sh.asm	/^     b0a:	1782                	slli	a5,a5,0x20$/;"	l
b0a	usertests.asm	/^     b0a:	4505                	li	a0,1$/;"	l
b0c	grind.asm	/^     b0c:	00001517          	auipc	a0,0x1$/;"	l
b0c	sh.asm	/^     b0c:	9381                	srli	a5,a5,0x20$/;"	l
b0c	usertests.asm	/^     b0c:	00005097          	auipc	ra,0x5$/;"	l
b0e	sh.asm	/^     b0e:	97a6                	add	a5,a5,s1$/;"	l
b10	grind.asm	/^     b10:	96450513          	addi	a0,a0,-1692 # 1470 <malloc+0x1dc>$/;"	l
b10	sh.asm	/^     b10:	00078023          	sb	zero,0(a5)$/;"	l
b10	usertests.asm	/^     b10:	86c080e7          	jalr	-1940(ra) # 5378 <exit>$/;"	l
b14	grind.asm	/^     b14:	00000097          	auipc	ra,0x0$/;"	l
b14	sh.asm	/^     b14:	8552                	mv	a0,s4$/;"	l
b14	usertests.asm	/^     b14:	85aa                	mv	a1,a0$/;"	l
b16	sh.asm	/^     b16:	00000097          	auipc	ra,0x0$/;"	l
b16	usertests.asm	/^     b16:	00005517          	auipc	a0,0x5$/;"	l
b18	grind.asm	/^     b18:	6c2080e7          	jalr	1730(ra) # 11d6 <printf>$/;"	l
b1a	sh.asm	/^     b1a:	324080e7          	jalr	804(ra) # e3a <chdir>$/;"	l
b1a	usertests.asm	/^     b1a:	51a50513          	addi	a0,a0,1306 # 6030 <malloc+0x882>$/;"	l
b1c	grind.asm	/^     b1c:	4505                	li	a0,1$/;"	l
b1e	grind.asm	/^     b1e:	00000097          	auipc	ra,0x0$/;"	l
b1e	sh.asm	/^     b1e:	fa0558e3          	bgez	a0,ace <main+0x6e>$/;"	l
b1e	usertests.asm	/^     b1e:	00005097          	auipc	ra,0x5$/;"	l
b2	cat.asm	/^  b2:	99ae                	add	s3,s3,a1$/;"	l
b2	grep.asm	/^  b2:	00153513          	seqz	a0,a0$/;"	l
b2	grind.asm	/^      b2:	00001097          	auipc	ra,0x1$/;"	l
b2	kill.asm	/^  b2:	00054783          	lbu	a5,0(a0)$/;"	l
b2	ln.asm	/^  b2:	cf91                	beqz	a5,ce <strlen+0x26>$/;"	l
b2	ls.asm	/^  b2:	bf69                	j	4c <fmtname+0x4c>$/;"	l
b2	mkdir.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	rm.asm	/^  b2:	0005c503          	lbu	a0,0(a1)$/;"	l
b2	sh.asm	/^      b2:	c10d                	beqz	a0,d4 <runcmd+0x2c>$/;"	l
b2	stressfs.asm	/^  b2:	2fc080e7          	jalr	764(ra) # 3aa <close>$/;"	l
b2	wc.asm	/^  b2:	8662                	mv	a2,s8$/;"	l
b2	zombie.asm	/^  b2:	00b78023          	sb	a1,0(a5)$/;"	l
b22	grind.asm	/^     b22:	340080e7          	jalr	832(ra) # e5e <exit>$/;"	l
b22	sh.asm	/^     b22:	8652                	mv	a2,s4$/;"	l
b22	usertests.asm	/^     b22:	bd2080e7          	jalr	-1070(ra) # 56f0 <printf>$/;"	l
b24	sh.asm	/^     b24:	85d6                	mv	a1,s5$/;"	l
b26	grind.asm	/^     b26:	00000097          	auipc	ra,0x0$/;"	l
b26	sh.asm	/^     b26:	4509                	li	a0,2$/;"	l
b26	usertests.asm	/^     b26:	4505                	li	a0,1$/;"	l
b28	sh.asm	/^     b28:	00000097          	auipc	ra,0x0$/;"	l
b28	usertests.asm	/^     b28:	00005097          	auipc	ra,0x5$/;"	l
b2a	grind.asm	/^     b2a:	330080e7          	jalr	816(ra) # e56 <fork>$/;"	l
b2c	sh.asm	/^     b2c:	5ec080e7          	jalr	1516(ra) # 1114 <fprintf>$/;"	l
b2c	usertests.asm	/^     b2c:	850080e7          	jalr	-1968(ra) # 5378 <exit>$/;"	l
b2e	grind.asm	/^     b2e:	892a                	mv	s2,a0$/;"	l
b30	grind.asm	/^     b30:	00054f63          	bltz	a0,b4e <iter+0x92>$/;"	l
b30	sh.asm	/^     b30:	bf79                	j	ace <main+0x6e>$/;"	l
b30	usertests.asm	/^     b30:	85a6                	mv	a1,s1$/;"	l
b32	sh.asm	/^     b32:	00001517          	auipc	a0,0x1$/;"	l
b32	usertests.asm	/^     b32:	00005517          	auipc	a0,0x5$/;"	l
b34	grind.asm	/^     b34:	e915                	bnez	a0,b68 <iter+0xac>$/;"	l
b36	grind.asm	/^     b36:	6789                	lui	a5,0x2$/;"	l
b36	sh.asm	/^     b36:	92e50513          	addi	a0,a0,-1746 # 1460 <buf.1133>$/;"	l
b36	usertests.asm	/^     b36:	51650513          	addi	a0,a0,1302 # 6048 <malloc+0x89a>$/;"	l
b38	grind.asm	/^     b38:	c0978793          	addi	a5,a5,-1015 # 1c09 <__BSS_END__+0x1a1>$/;"	l
b3a	sh.asm	/^     b3a:	00000097          	auipc	ra,0x0$/;"	l
b3a	usertests.asm	/^     b3a:	00005097          	auipc	ra,0x5$/;"	l
b3c	grind.asm	/^     b3c:	00001717          	auipc	a4,0x1$/;"	l
b3e	sh.asm	/^     b3e:	e9e080e7          	jalr	-354(ra) # 9d8 <parsecmd>$/;"	l
b3e	usertests.asm	/^     b3e:	bb6080e7          	jalr	-1098(ra) # 56f0 <printf>$/;"	l
b4	cat.asm	/^  b4:	4581                	li	a1,0$/;"	l
b4	echo.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	forktest.asm	/^  b4:	00000517          	auipc	a0,0x0$/;"	l
b4	init.asm	/^  b4:	00000097          	auipc	ra,0x0$/;"	l
b4	ln.asm	/^  b4:	0505                	addi	a0,a0,1$/;"	l
b4	ls.asm	/^  b4:	d9010113          	addi	sp,sp,-624$/;"	l
b4	sh.asm	/^      b4:	84aa                	mv	s1,a0$/;"	l
b4	usertests.asm	/^      b4:	308080e7          	jalr	776(ra) # 53b8 <open>$/;"	l
b4	wc.asm	/^  b4:	85de                	mv	a1,s7$/;"	l
b40	grind.asm	/^     b40:	b2f73223          	sd	a5,-1244(a4) # 1660 <rand_next>$/;"	l
b42	sh.asm	/^     b42:	fffff097          	auipc	ra,0xfffff$/;"	l
b42	usertests.asm	/^     b42:	4505                	li	a0,1$/;"	l
b44	grind.asm	/^     b44:	4505                	li	a0,1$/;"	l
b44	usertests.asm	/^     b44:	00005097          	auipc	ra,0x5$/;"	l
b46	grind.asm	/^     b46:	fffff097          	auipc	ra,0xfffff$/;"	l
b46	sh.asm	/^     b46:	566080e7          	jalr	1382(ra) # a8 <runcmd>$/;"	l
b48	usertests.asm	/^     b48:	834080e7          	jalr	-1996(ra) # 5378 <exit>$/;"	l
b4a	grind.asm	/^     b4a:	532080e7          	jalr	1330(ra) # 78 <go>$/;"	l
b4a	sh.asm	/^     b4a:	4501                	li	a0,0$/;"	l
b4c	sh.asm	/^     b4c:	00000097          	auipc	ra,0x0$/;"	l
b4c	usertests.asm	/^     b4c:	85d6                	mv	a1,s5$/;"	l
b4e	grind.asm	/^     b4e:	00001517          	auipc	a0,0x1$/;"	l
b4e	usertests.asm	/^     b4e:	00005517          	auipc	a0,0x5$/;"	l
b50	sh.asm	/^     b50:	27e080e7          	jalr	638(ra) # dca <exit>$/;"	l
b52	grind.asm	/^     b52:	92250513          	addi	a0,a0,-1758 # 1470 <malloc+0x1dc>$/;"	l
b52	usertests.asm	/^     b52:	52250513          	addi	a0,a0,1314 # 6070 <malloc+0x8c2>$/;"	l
b54	sh.asm	/^     b54:	1141                	addi	sp,sp,-16$/;"	l
b56	grind.asm	/^     b56:	00000097          	auipc	ra,0x0$/;"	l
b56	sh.asm	/^     b56:	e422                	sd	s0,8(sp)$/;"	l
b56	usertests.asm	/^     b56:	00005097          	auipc	ra,0x5$/;"	l
b58	sh.asm	/^     b58:	0800                	addi	s0,sp,16$/;"	l
b5a	grind.asm	/^     b5a:	680080e7          	jalr	1664(ra) # 11d6 <printf>$/;"	l
b5a	sh.asm	/^     b5a:	87aa                	mv	a5,a0$/;"	l
b5a	usertests.asm	/^     b5a:	b9a080e7          	jalr	-1126(ra) # 56f0 <printf>$/;"	l
b5c	sh.asm	/^     b5c:	0585                	addi	a1,a1,1$/;"	l
b5e	grind.asm	/^     b5e:	4505                	li	a0,1$/;"	l
b5e	sh.asm	/^     b5e:	0785                	addi	a5,a5,1$/;"	l
b5e	usertests.asm	/^     b5e:	4505                	li	a0,1$/;"	l
b6	cat.asm	/^  b6:	00093503          	ld	a0,0(s2)$/;"	l
b6	echo.asm	/^  b6:	0585                	addi	a1,a1,1$/;"	l
b6	grep.asm	/^  b6:	bfc9                	j	88 <matchhere+0x3a>$/;"	l
b6	grind.asm	/^      b6:	e1c080e7          	jalr	-484(ra) # ece <chdir>$/;"	l
b6	kill.asm	/^  b6:	cf91                	beqz	a5,d2 <strlen+0x26>$/;"	l
b6	ln.asm	/^  b6:	87aa                	mv	a5,a0$/;"	l
b6	mkdir.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	rm.asm	/^  b6:	40a7853b          	subw	a0,a5,a0$/;"	l
b6	sh.asm	/^      b6:	4118                	lw	a4,0(a0)$/;"	l
b6	stressfs.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b6	wc.asm	/^  b6:	00001517          	auipc	a0,0x1$/;"	l
b6	zombie.asm	/^  b6:	0785                	addi	a5,a5,1$/;"	l
b60	grind.asm	/^     b60:	00000097          	auipc	ra,0x0$/;"	l
b60	sh.asm	/^     b60:	fff5c703          	lbu	a4,-1(a1)$/;"	l
b60	usertests.asm	/^     b60:	00005097          	auipc	ra,0x5$/;"	l
b64	grind.asm	/^     b64:	2fe080e7          	jalr	766(ra) # e5e <exit>$/;"	l
b64	sh.asm	/^     b64:	fee78fa3          	sb	a4,-1(a5)$/;"	l
b64	usertests.asm	/^     b64:	818080e7          	jalr	-2024(ra) # 5378 <exit>$/;"	l
b68	grind.asm	/^     b68:	57fd                	li	a5,-1$/;"	l
b68	sh.asm	/^     b68:	fb75                	bnez	a4,b5c <strcpy+0x8>$/;"	l
b68	usertests.asm	/^     b68:	7179                	addi	sp,sp,-48$/;"	l
b6a	grind.asm	/^     b6a:	fcf42e23          	sw	a5,-36(s0)$/;"	l
b6a	sh.asm	/^     b6a:	6422                	ld	s0,8(sp)$/;"	l
b6a	usertests.asm	/^     b6a:	f406                	sd	ra,40(sp)$/;"	l
b6c	sh.asm	/^     b6c:	0141                	addi	sp,sp,16$/;"	l
b6c	usertests.asm	/^     b6c:	f022                	sd	s0,32(sp)$/;"	l
b6e	grind.asm	/^     b6e:	fdc40513          	addi	a0,s0,-36$/;"	l
b6e	sh.asm	/^     b6e:	8082                	ret$/;"	l
b6e	usertests.asm	/^     b6e:	ec26                	sd	s1,24(sp)$/;"	l
b70	sh.asm	/^     b70:	1141                	addi	sp,sp,-16$/;"	l
b70	usertests.asm	/^     b70:	e84a                	sd	s2,16(sp)$/;"	l
b72	grind.asm	/^     b72:	00000097          	auipc	ra,0x0$/;"	l
b72	sh.asm	/^     b72:	e422                	sd	s0,8(sp)$/;"	l
b72	usertests.asm	/^     b72:	e44e                	sd	s3,8(sp)$/;"	l
b74	sh.asm	/^     b74:	0800                	addi	s0,sp,16$/;"	l
b74	usertests.asm	/^     b74:	1800                	addi	s0,sp,48$/;"	l
b76	grind.asm	/^     b76:	2f4080e7          	jalr	756(ra) # e66 <wait>$/;"	l
b76	sh.asm	/^     b76:	00054783          	lbu	a5,0(a0)$/;"	l
b76	usertests.asm	/^     b76:	89aa                	mv	s3,a0$/;"	l
b78	usertests.asm	/^     b78:	20200593          	li	a1,514$/;"	l
b7a	grind.asm	/^     b7a:	fdc42783          	lw	a5,-36(s0)$/;"	l
b7a	sh.asm	/^     b7a:	cb91                	beqz	a5,b8e <strcmp+0x1e>$/;"	l
b7c	sh.asm	/^     b7c:	0005c703          	lbu	a4,0(a1)$/;"	l
b7c	usertests.asm	/^     b7c:	00005517          	auipc	a0,0x5$/;"	l
b7e	grind.asm	/^     b7e:	ef99                	bnez	a5,b9c <iter+0xe0>$/;"	l
b8	echo.asm	/^  b8:	00054783          	lbu	a5,0(a0)$/;"	l
b8	forktest.asm	/^  b8:	3e450513          	addi	a0,a0,996 # 498 <uptime+0x6c>$/;"	l
b8	grep.asm	/^  b8:	0585                	addi	a1,a1,1$/;"	l
b8	init.asm	/^  b8:	632080e7          	jalr	1586(ra) # 6e6 <printf>$/;"	l
b8	kill.asm	/^  b8:	0505                	addi	a0,a0,1$/;"	l
b8	ln.asm	/^  b8:	4685                	li	a3,1$/;"	l
b8	ls.asm	/^  b8:	26113423          	sd	ra,616(sp)$/;"	l
b8	sh.asm	/^      b8:	4795                	li	a5,5$/;"	l
b8	usertests.asm	/^      b8:	02054663          	bltz	a0,e4 <opentest+0x4a>$/;"	l
b8	zombie.asm	/^  b8:	fee79de3          	bne	a5,a4,b2 <memset+0x16>$/;"	l
b80	grind.asm	/^     b80:	57fd                	li	a5,-1$/;"	l
b80	sh.asm	/^     b80:	00f71763          	bne	a4,a5,b8e <strcmp+0x1e>$/;"	l
b80	usertests.asm	/^     b80:	e6450513          	addi	a0,a0,-412 # 59e0 <malloc+0x232>$/;"	l
b82	grind.asm	/^     b82:	fcf42c23          	sw	a5,-40(s0)$/;"	l
b84	sh.asm	/^     b84:	0505                	addi	a0,a0,1$/;"	l
b84	usertests.asm	/^     b84:	00005097          	auipc	ra,0x5$/;"	l
b86	grind.asm	/^     b86:	fd840513          	addi	a0,s0,-40$/;"	l
b86	sh.asm	/^     b86:	0585                	addi	a1,a1,1$/;"	l
b88	sh.asm	/^     b88:	00054783          	lbu	a5,0(a0)$/;"	l
b88	usertests.asm	/^     b88:	834080e7          	jalr	-1996(ra) # 53b8 <open>$/;"	l
b8a	grind.asm	/^     b8a:	00000097          	auipc	ra,0x0$/;"	l
b8c	sh.asm	/^     b8c:	fbe5                	bnez	a5,b7c <strcmp+0xc>$/;"	l
b8c	usertests.asm	/^     b8c:	0e054563          	bltz	a0,c76 <unlinkread+0x10e>$/;"	l
b8e	grind.asm	/^     b8e:	2dc080e7          	jalr	732(ra) # e66 <wait>$/;"	l
b8e	sh.asm	/^     b8e:	0005c503          	lbu	a0,0(a1)$/;"	l
b90	usertests.asm	/^     b90:	84aa                	mv	s1,a0$/;"	l
b92	grind.asm	/^     b92:	4501                	li	a0,0$/;"	l
b92	sh.asm	/^     b92:	40a7853b          	subw	a0,a5,a0$/;"	l
b92	usertests.asm	/^     b92:	4615                	li	a2,5$/;"	l
b94	grind.asm	/^     b94:	00000097          	auipc	ra,0x0$/;"	l
b94	usertests.asm	/^     b94:	00005597          	auipc	a1,0x5$/;"	l
b96	sh.asm	/^     b96:	6422                	ld	s0,8(sp)$/;"	l
b98	grind.asm	/^     b98:	2ca080e7          	jalr	714(ra) # e5e <exit>$/;"	l
b98	sh.asm	/^     b98:	0141                	addi	sp,sp,16$/;"	l
b98	usertests.asm	/^     b98:	51458593          	addi	a1,a1,1300 # 60a8 <malloc+0x8fa>$/;"	l
b9a	sh.asm	/^     b9a:	8082                	ret$/;"	l
b9c	grind.asm	/^     b9c:	8526                	mv	a0,s1$/;"	l
b9c	sh.asm	/^     b9c:	1141                	addi	sp,sp,-16$/;"	l
b9c	usertests.asm	/^     b9c:	00004097          	auipc	ra,0x4$/;"	l
b9e	grind.asm	/^     b9e:	00000097          	auipc	ra,0x0$/;"	l
b9e	sh.asm	/^     b9e:	e422                	sd	s0,8(sp)$/;"	l
ba	cat.asm	/^  ba:	00000097          	auipc	ra,0x0$/;"	l
ba	grep.asm	/^  ba:	00178513          	addi	a0,a5,1$/;"	l
ba	grind.asm	/^      ba:	cd11                	beqz	a0,d6 <go+0x5e>$/;"	l
ba	kill.asm	/^  ba:	87aa                	mv	a5,a0$/;"	l
ba	ln.asm	/^  ba:	9e89                	subw	a3,a3,a0$/;"	l
ba	mkdir.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	rm.asm	/^  ba:	6422                	ld	s0,8(sp)$/;"	l
ba	sh.asm	/^      ba:	02e7e263          	bltu	a5,a4,de <runcmd+0x36>$/;"	l
ba	stressfs.asm	/^  ba:	81250513          	addi	a0,a0,-2030 # 8c8 <malloc+0x110>$/;"	l
ba	wc.asm	/^  ba:	88a50513          	addi	a0,a0,-1910 # 940 <malloc+0xfe>$/;"	l
ba0	sh.asm	/^     ba0:	0800                	addi	s0,sp,16$/;"	l
ba0	usertests.asm	/^     ba0:	7fc080e7          	jalr	2044(ra) # 5398 <write>$/;"	l
ba2	grind.asm	/^     ba2:	2f0080e7          	jalr	752(ra) # e8e <kill>$/;"	l
ba2	sh.asm	/^     ba2:	00054783          	lbu	a5,0(a0)$/;"	l
ba4	usertests.asm	/^     ba4:	8526                	mv	a0,s1$/;"	l
ba6	grind.asm	/^     ba6:	854a                	mv	a0,s2$/;"	l
ba6	sh.asm	/^     ba6:	cf91                	beqz	a5,bc2 <strlen+0x26>$/;"	l
ba6	usertests.asm	/^     ba6:	00004097          	auipc	ra,0x4$/;"	l
ba8	grind.asm	/^     ba8:	00000097          	auipc	ra,0x0$/;"	l
ba8	sh.asm	/^     ba8:	0505                	addi	a0,a0,1$/;"	l
baa	sh.asm	/^     baa:	87aa                	mv	a5,a0$/;"	l
baa	usertests.asm	/^     baa:	7fa080e7          	jalr	2042(ra) # 53a0 <close>$/;"	l
bac	grind.asm	/^     bac:	2e6080e7          	jalr	742(ra) # e8e <kill>$/;"	l
bac	sh.asm	/^     bac:	4685                	li	a3,1$/;"	l
backcmd	sh.c	/^backcmd(struct cmd *subcmd)$/;"	f
backcmd	sh.c	/^struct backcmd {$/;"	s	file:
badarg	usertests.c	/^badarg(char *s)$/;"	f
badwrite	usertests.c	/^badwrite(char *s)$/;"	f
bae	sh.asm	/^     bae:	9e89                	subw	a3,a3,a0$/;"	l
bae	usertests.asm	/^     bae:	4589                	li	a1,2$/;"	l
base	umalloc.c	/^static Header base;$/;"	v	file:
bb0	grind.asm	/^     bb0:	bfc1                	j	b80 <iter+0xc4>$/;"	l
bb0	sh.asm	/^     bb0:	00f6853b          	addw	a0,a3,a5$/;"	l
bb0	usertests.asm	/^     bb0:	00005517          	auipc	a0,0x5$/;"	l
bb2	grind.asm	/^     bb2:	1141                	addi	sp,sp,-16$/;"	l
bb4	grind.asm	/^     bb4:	e406                	sd	ra,8(sp)$/;"	l
bb4	sh.asm	/^     bb4:	0785                	addi	a5,a5,1$/;"	l
bb4	usertests.asm	/^     bb4:	e3050513          	addi	a0,a0,-464 # 59e0 <malloc+0x232>$/;"	l
bb6	grind.asm	/^     bb6:	e022                	sd	s0,0(sp)$/;"	l
bb6	sh.asm	/^     bb6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
bb8	grind.asm	/^     bb8:	0800                	addi	s0,sp,16$/;"	l
bb8	usertests.asm	/^     bb8:	00005097          	auipc	ra,0x5$/;"	l
bba	grind.asm	/^     bba:	a811                	j	bce <main+0x1c>$/;"	l
bba	sh.asm	/^     bba:	fb7d                	bnez	a4,bb0 <strlen+0x14>$/;"	l
bbc	grind.asm	/^     bbc:	00000097          	auipc	ra,0x0$/;"	l
bbc	sh.asm	/^     bbc:	6422                	ld	s0,8(sp)$/;"	l
bbc	usertests.asm	/^     bbc:	800080e7          	jalr	-2048(ra) # 53b8 <open>$/;"	l
bbe	sh.asm	/^     bbe:	0141                	addi	sp,sp,16$/;"	l
bc	echo.asm	/^  bc:	fbe5                	bnez	a5,ac <strcmp+0xc>$/;"	l
bc	forktest.asm	/^  bc:	00000097          	auipc	ra,0x0$/;"	l
bc	grind.asm	/^      bc:	00001517          	auipc	a0,0x1$/;"	l
bc	init.asm	/^  bc:	4505                	li	a0,1$/;"	l
bc	kill.asm	/^  bc:	4685                	li	a3,1$/;"	l
bc	ln.asm	/^  bc:	00f6853b          	addw	a0,a3,a5$/;"	l
bc	ls.asm	/^  bc:	26813023          	sd	s0,608(sp)$/;"	l
bc	mkdir.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	rm.asm	/^  bc:	0141                	addi	sp,sp,16$/;"	l
bc	usertests.asm	/^      bc:	00005097          	auipc	ra,0x5$/;"	l
bc	zombie.asm	/^  bc:	6422                	ld	s0,8(sp)$/;"	l
bc0	grind.asm	/^     bc0:	f00080e7          	jalr	-256(ra) # abc <iter>$/;"	l
bc0	sh.asm	/^     bc0:	8082                	ret$/;"	l
bc0	usertests.asm	/^     bc0:	84aa                	mv	s1,a0$/;"	l
bc2	sh.asm	/^     bc2:	4501                	li	a0,0$/;"	l
bc2	usertests.asm	/^     bc2:	0c054863          	bltz	a0,c92 <unlinkread+0x12a>$/;"	l
bc4	grind.asm	/^     bc4:	4551                	li	a0,20$/;"	l
bc4	sh.asm	/^     bc4:	bfe5                	j	bbc <strlen+0x20>$/;"	l
bc6	grind.asm	/^     bc6:	00000097          	auipc	ra,0x0$/;"	l
bc6	sh.asm	/^     bc6:	1141                	addi	sp,sp,-16$/;"	l
bc6	usertests.asm	/^     bc6:	00005517          	auipc	a0,0x5$/;"	l
bc8	sh.asm	/^     bc8:	e422                	sd	s0,8(sp)$/;"	l
bca	grind.asm	/^     bca:	328080e7          	jalr	808(ra) # eee <sleep>$/;"	l
bca	sh.asm	/^     bca:	0800                	addi	s0,sp,16$/;"	l
bca	usertests.asm	/^     bca:	e1a50513          	addi	a0,a0,-486 # 59e0 <malloc+0x232>$/;"	l
bcc	sh.asm	/^     bcc:	ce09                	beqz	a2,be6 <memset+0x20>$/;"	l
bce	grind.asm	/^     bce:	00000097          	auipc	ra,0x0$/;"	l
bce	sh.asm	/^     bce:	87aa                	mv	a5,a0$/;"	l
bce	usertests.asm	/^     bce:	00004097          	auipc	ra,0x4$/;"	l
bcmd	sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd0	sh.asm	/^     bd0:	fff6071b          	addiw	a4,a2,-1$/;"	l
bd2	grind.asm	/^     bd2:	288080e7          	jalr	648(ra) # e56 <fork>$/;"	l
bd2	usertests.asm	/^     bd2:	7fa080e7          	jalr	2042(ra) # 53c8 <unlink>$/;"	l
bd4	sh.asm	/^     bd4:	1702                	slli	a4,a4,0x20$/;"	l
bd6	grind.asm	/^     bd6:	d17d                	beqz	a0,bbc <main+0xa>$/;"	l
bd6	sh.asm	/^     bd6:	9301                	srli	a4,a4,0x20$/;"	l
bd6	usertests.asm	/^     bd6:	ed61                	bnez	a0,cae <unlinkread+0x146>$/;"	l
bd8	grind.asm	/^     bd8:	fea056e3          	blez	a0,bc4 <main+0x12>$/;"	l
bd8	sh.asm	/^     bd8:	0705                	addi	a4,a4,1$/;"	l
bd8	usertests.asm	/^     bd8:	20200593          	li	a1,514$/;"	l
bda	sh.asm	/^     bda:	972a                	add	a4,a4,a0$/;"	l
bdc	grind.asm	/^     bdc:	4501                	li	a0,0$/;"	l
bdc	sh.asm	/^     bdc:	00b78023          	sb	a1,0(a5)$/;"	l
bdc	usertests.asm	/^     bdc:	00005517          	auipc	a0,0x5$/;"	l
bde	grind.asm	/^     bde:	00000097          	auipc	ra,0x0$/;"	l
be	cat.asm	/^  be:	31a080e7          	jalr	794(ra) # 3d4 <open>$/;"	l
be	echo.asm	/^  be:	0005c503          	lbu	a0,0(a1)$/;"	l
be	grep.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	init.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	kill.asm	/^  be:	9e89                	subw	a3,a3,a0$/;"	l
be	mkdir.asm	/^  be:	8082                	ret$/;"	l
be	rm.asm	/^  be:	8082                	ret$/;"	l
be	sh.asm	/^      be:	00056783          	lwu	a5,0(a0)$/;"	l
be	stressfs.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	wc.asm	/^  be:	00000097          	auipc	ra,0x0$/;"	l
be	zombie.asm	/^  be:	0141                	addi	sp,sp,16$/;"	l
be0	sh.asm	/^     be0:	0785                	addi	a5,a5,1$/;"	l
be0	usertests.asm	/^     be0:	e0450513          	addi	a0,a0,-508 # 59e0 <malloc+0x232>$/;"	l
be2	grind.asm	/^     be2:	288080e7          	jalr	648(ra) # e66 <wait>$/;"	l
be2	sh.asm	/^     be2:	fee79de3          	bne	a5,a4,bdc <memset+0x16>$/;"	l
be4	usertests.asm	/^     be4:	00004097          	auipc	ra,0x4$/;"	l
be6	grind.asm	/^     be6:	bff9                	j	bc4 <main+0x12>$/;"	l
be6	sh.asm	/^     be6:	6422                	ld	s0,8(sp)$/;"	l
be8	grind.asm	/^     be8:	1141                	addi	sp,sp,-16$/;"	l
be8	sh.asm	/^     be8:	0141                	addi	sp,sp,16$/;"	l
be8	usertests.asm	/^     be8:	7d4080e7          	jalr	2004(ra) # 53b8 <open>$/;"	l
bea	grind.asm	/^     bea:	e422                	sd	s0,8(sp)$/;"	l
bea	sh.asm	/^     bea:	8082                	ret$/;"	l
bec	grind.asm	/^     bec:	0800                	addi	s0,sp,16$/;"	l
bec	sh.asm	/^     bec:	1141                	addi	sp,sp,-16$/;"	l
bec	usertests.asm	/^     bec:	892a                	mv	s2,a0$/;"	l
bee	grind.asm	/^     bee:	87aa                	mv	a5,a0$/;"	l
bee	sh.asm	/^     bee:	e422                	sd	s0,8(sp)$/;"	l
bee	usertests.asm	/^     bee:	460d                	li	a2,3$/;"	l
bf0	grind.asm	/^     bf0:	0585                	addi	a1,a1,1$/;"	l
bf0	sh.asm	/^     bf0:	0800                	addi	s0,sp,16$/;"	l
bf0	usertests.asm	/^     bf0:	00005597          	auipc	a1,0x5$/;"	l
bf2	grind.asm	/^     bf2:	0785                	addi	a5,a5,1$/;"	l
bf2	sh.asm	/^     bf2:	00054783          	lbu	a5,0(a0)$/;"	l
bf4	grind.asm	/^     bf4:	fff5c703          	lbu	a4,-1(a1)$/;"	l
bf4	usertests.asm	/^     bf4:	50058593          	addi	a1,a1,1280 # 60f0 <malloc+0x942>$/;"	l
bf6	sh.asm	/^     bf6:	cb99                	beqz	a5,c0c <strchr+0x20>$/;"	l
bf8	grind.asm	/^     bf8:	fee78fa3          	sb	a4,-1(a5)$/;"	l
bf8	sh.asm	/^     bf8:	00f58763          	beq	a1,a5,c06 <strchr+0x1a>$/;"	l
bf8	usertests.asm	/^     bf8:	00004097          	auipc	ra,0x4$/;"	l
bfc	grind.asm	/^     bfc:	fb75                	bnez	a4,bf0 <strcpy+0x8>$/;"	l
bfc	sh.asm	/^     bfc:	0505                	addi	a0,a0,1$/;"	l
bfc	usertests.asm	/^     bfc:	7a0080e7          	jalr	1952(ra) # 5398 <write>$/;"	l
bfe	grind.asm	/^     bfe:	6422                	ld	s0,8(sp)$/;"	l
bfe	sh.asm	/^     bfe:	00054783          	lbu	a5,0(a0)$/;"	l
bigargtest	usertests.c	/^bigargtest(char *s)$/;"	f
bigdir	usertests.c	/^bigdir(char *s)$/;"	f
bigfile	usertests.c	/^bigfile(char *s)$/;"	f
bigwrite	usertests.c	/^bigwrite(char *s)$/;"	f
bp	cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	grind.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bsstest	usertests.c	/^bsstest(char *s)$/;"	f
buf	cat.c	/^char buf[512];$/;"	v
buf	grep.c	/^char buf[1024];$/;"	v
buf	usertests.c	/^char buf[BUFSZ];$/;"	v
buf	wc.c	/^char buf[512];$/;"	v
c	cat.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	cat.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	echo.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	echo.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	forktest.asm	/^   c:	00000097          	auipc	ra,0x0$/;"	l
c	grep.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	grep.asm	/^   c:	e052                	sd	s4,0(sp)$/;"	l
c	grind.asm	/^       c:	ffe74713          	xori	a4,a4,-2$/;"	l
c	grind.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	init.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	init.asm	/^   c:	4589                	li	a1,2$/;"	l
c	initcode.asm	/^   c:	00058593          	mv	a1,a1$/;"	l
c	kill.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	kill.asm	/^   c:	4785                	li	a5,1$/;"	l
c	ln.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	ln.asm	/^   c:	02f50063          	beq	a0,a5,2c <main+0x2c>$/;"	l
c	ls.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	ls.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	mkdir.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	mkdir.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	rm.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	rm.asm	/^   c:	1800                	addi	s0,sp,48$/;"	l
c	sh.asm	/^       c:	84aa                	mv	s1,a0$/;"	l
c	sh.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	stressfs.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	stressfs.asm	/^   c:	20913c23          	sd	s1,536(sp)$/;"	l
c	usertests.asm	/^       c:	4505                	li	a0,1$/;"	l
c	usertests.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	usertests.asm	/^  c = sbrk(-PGSIZE);$/;"	d
c	usertests.asm	/^  c = sbrk(0);$/;"	d
c	usertests.asm	/^  c = sbrk(1);$/;"	d
c	usertests.asm	/^  c = sbrk(PGSIZE);$/;"	d
c	wc.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	wc.asm	/^   c:	e8d2                	sd	s4,80(sp)$/;"	l
c	zombie.asm	/^    c = fmt[i] & 0xff;$/;"	d
c	zombie.asm	/^   c:	290080e7          	jalr	656(ra) # 298 <fork>$/;"	l
c0	forktest.asm	/^  c0:	f44080e7          	jalr	-188(ra) # 0 <print>$/;"	l
c0	grind.asm	/^      c0:	2c450513          	addi	a0,a0,708 # 1380 <malloc+0xec>$/;"	l
c0	kill.asm	/^  c0:	00f6853b          	addw	a0,a3,a5$/;"	l
c0	ln.asm	/^  c0:	0785                	addi	a5,a5,1$/;"	l
c0	ls.asm	/^  c0:	24913c23          	sd	s1,600(sp)$/;"	l
c0	mkdir.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	rm.asm	/^  c0:	1141                	addi	sp,sp,-16$/;"	l
c0	usertests.asm	/^      c0:	2e4080e7          	jalr	740(ra) # 53a0 <close>$/;"	l
c0	zombie.asm	/^  c0:	8082                	ret$/;"	l
c00	grind.asm	/^     c00:	0141                	addi	sp,sp,16$/;"	l
c00	usertests.asm	/^     c00:	854a                	mv	a0,s2$/;"	l
c02	grind.asm	/^     c02:	8082                	ret$/;"	l
c02	sh.asm	/^     c02:	fbfd                	bnez	a5,bf8 <strchr+0xc>$/;"	l
c02	usertests.asm	/^     c02:	00004097          	auipc	ra,0x4$/;"	l
c04	grind.asm	/^     c04:	1141                	addi	sp,sp,-16$/;"	l
c04	sh.asm	/^     c04:	4501                	li	a0,0$/;"	l
c06	grind.asm	/^     c06:	e422                	sd	s0,8(sp)$/;"	l
c06	sh.asm	/^     c06:	6422                	ld	s0,8(sp)$/;"	l
c06	usertests.asm	/^     c06:	79e080e7          	jalr	1950(ra) # 53a0 <close>$/;"	l
c08	grind.asm	/^     c08:	0800                	addi	s0,sp,16$/;"	l
c08	sh.asm	/^     c08:	0141                	addi	sp,sp,16$/;"	l
c0a	grind.asm	/^     c0a:	00054783          	lbu	a5,0(a0)$/;"	l
c0a	sh.asm	/^     c0a:	8082                	ret$/;"	l
c0a	usertests.asm	/^     c0a:	660d                	lui	a2,0x3$/;"	l
c0c	sh.asm	/^     c0c:	4501                	li	a0,0$/;"	l
c0c	usertests.asm	/^     c0c:	0000b597          	auipc	a1,0xb$/;"	l
c0e	grind.asm	/^     c0e:	cb91                	beqz	a5,c22 <strcmp+0x1e>$/;"	l
c0e	sh.asm	/^     c0e:	bfe5                	j	c06 <strchr+0x1a>$/;"	l
c10	grind.asm	/^     c10:	0005c703          	lbu	a4,0(a1)$/;"	l
c10	sh.asm	/^     c10:	711d                	addi	sp,sp,-96$/;"	l
c10	usertests.asm	/^     c10:	b2c58593          	addi	a1,a1,-1236 # b738 <buf>$/;"	l
c12	sh.asm	/^     c12:	ec86                	sd	ra,88(sp)$/;"	l
c14	grind.asm	/^     c14:	00f71763          	bne	a4,a5,c22 <strcmp+0x1e>$/;"	l
c14	sh.asm	/^     c14:	e8a2                	sd	s0,80(sp)$/;"	l
c14	usertests.asm	/^     c14:	8526                	mv	a0,s1$/;"	l
c16	sh.asm	/^     c16:	e4a6                	sd	s1,72(sp)$/;"	l
c16	usertests.asm	/^     c16:	00004097          	auipc	ra,0x4$/;"	l
c18	grind.asm	/^     c18:	0505                	addi	a0,a0,1$/;"	l
c18	sh.asm	/^     c18:	e0ca                	sd	s2,64(sp)$/;"	l
c1a	grind.asm	/^     c1a:	0585                	addi	a1,a1,1$/;"	l
c1a	sh.asm	/^     c1a:	fc4e                	sd	s3,56(sp)$/;"	l
c1a	usertests.asm	/^     c1a:	77a080e7          	jalr	1914(ra) # 5390 <read>$/;"	l
c1c	grind.asm	/^     c1c:	00054783          	lbu	a5,0(a0)$/;"	l
c1c	sh.asm	/^     c1c:	f852                	sd	s4,48(sp)$/;"	l
c1e	sh.asm	/^     c1e:	f456                	sd	s5,40(sp)$/;"	l
c1e	usertests.asm	/^     c1e:	4795                	li	a5,5$/;"	l
c2	cat.asm	/^  c2:	84aa                	mv	s1,a0$/;"	l
c2	echo.asm	/^  c2:	40a7853b          	subw	a0,a5,a0$/;"	l
c2	grep.asm	/^  c2:	f90080e7          	jalr	-112(ra) # 4e <matchhere>$/;"	l
c2	init.asm	/^  c2:	2b0080e7          	jalr	688(ra) # 36e <exit>$/;"	l
c2	ln.asm	/^  c2:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c2	mkdir.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	rm.asm	/^  c2:	e422                	sd	s0,8(sp)$/;"	l
c2	sh.asm	/^      c2:	078a                	slli	a5,a5,0x2$/;"	l
c2	stressfs.asm	/^  c2:	63c080e7          	jalr	1596(ra) # 6fa <printf>$/;"	l
c2	wc.asm	/^  c2:	6c6080e7          	jalr	1734(ra) # 784 <printf>$/;"	l
c2	zombie.asm	/^  c2:	1141                	addi	sp,sp,-16$/;"	l
c20	grind.asm	/^     c20:	fbe5                	bnez	a5,c10 <strcmp+0xc>$/;"	l
c20	sh.asm	/^     c20:	f05a                	sd	s6,32(sp)$/;"	l
c20	usertests.asm	/^     c20:	0af51563          	bne	a0,a5,cca <unlinkread+0x162>$/;"	l
c22	grind.asm	/^     c22:	0005c503          	lbu	a0,0(a1)$/;"	l
c22	sh.asm	/^     c22:	ec5e                	sd	s7,24(sp)$/;"	l
c24	sh.asm	/^     c24:	1080                	addi	s0,sp,96$/;"	l
c24	usertests.asm	/^     c24:	0000b717          	auipc	a4,0xb$/;"	l
c26	grind.asm	/^     c26:	40a7853b          	subw	a0,a5,a0$/;"	l
c26	sh.asm	/^     c26:	8baa                	mv	s7,a0$/;"	l
c28	sh.asm	/^     c28:	8a2e                	mv	s4,a1$/;"	l
c28	usertests.asm	/^     c28:	b1474703          	lbu	a4,-1260(a4) # b738 <buf>$/;"	l
c2a	grind.asm	/^     c2a:	6422                	ld	s0,8(sp)$/;"	l
c2a	sh.asm	/^     c2a:	892a                	mv	s2,a0$/;"	l
c2c	grind.asm	/^     c2c:	0141                	addi	sp,sp,16$/;"	l
c2c	sh.asm	/^     c2c:	4481                	li	s1,0$/;"	l
c2c	usertests.asm	/^     c2c:	06800793          	li	a5,104$/;"	l
c2e	grind.asm	/^     c2e:	8082                	ret$/;"	l
c2e	sh.asm	/^     c2e:	4aa9                	li	s5,10$/;"	l
c30	grind.asm	/^     c30:	1141                	addi	sp,sp,-16$/;"	l
c30	sh.asm	/^     c30:	4b35                	li	s6,13$/;"	l
c30	usertests.asm	/^     c30:	0af71b63          	bne	a4,a5,ce6 <unlinkread+0x17e>$/;"	l
c32	grind.asm	/^     c32:	e422                	sd	s0,8(sp)$/;"	l
c32	sh.asm	/^     c32:	89a6                	mv	s3,s1$/;"	l
c34	grind.asm	/^     c34:	0800                	addi	s0,sp,16$/;"	l
c34	sh.asm	/^     c34:	2485                	addiw	s1,s1,1$/;"	l
c34	usertests.asm	/^     c34:	4629                	li	a2,10$/;"	l
c36	grind.asm	/^     c36:	00054783          	lbu	a5,0(a0)$/;"	l
c36	sh.asm	/^     c36:	0344d863          	bge	s1,s4,c66 <gets+0x56>$/;"	l
c36	usertests.asm	/^     c36:	0000b597          	auipc	a1,0xb$/;"	l
c3a	grind.asm	/^     c3a:	cf91                	beqz	a5,c56 <strlen+0x26>$/;"	l
c3a	sh.asm	/^     c3a:	4605                	li	a2,1$/;"	l
c3a	usertests.asm	/^     c3a:	b0258593          	addi	a1,a1,-1278 # b738 <buf>$/;"	l
c3c	grind.asm	/^     c3c:	0505                	addi	a0,a0,1$/;"	l
c3c	sh.asm	/^     c3c:	faf40593          	addi	a1,s0,-81$/;"	l
c3e	grind.asm	/^     c3e:	87aa                	mv	a5,a0$/;"	l
c3e	usertests.asm	/^     c3e:	8526                	mv	a0,s1$/;"	l
c4	cat.asm	/^  c4:	02054d63          	bltz	a0,fe <main+0x74>$/;"	l
c4	forktest.asm	/^  c4:	60e2                	ld	ra,24(sp)$/;"	l
c4	grind.asm	/^      c4:	00001097          	auipc	ra,0x1$/;"	l
c4	kill.asm	/^  c4:	0785                	addi	a5,a5,1$/;"	l
c4	ls.asm	/^  c4:	25213823          	sd	s2,592(sp)$/;"	l
c4	mkdir.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	rm.asm	/^  c4:	0800                	addi	s0,sp,16$/;"	l
c4	sh.asm	/^      c4:	00001717          	auipc	a4,0x1$/;"	l
c4	usertests.asm	/^      c4:	4581                	li	a1,0$/;"	l
c4	zombie.asm	/^  c4:	e422                	sd	s0,8(sp)$/;"	l
c40	grind.asm	/^     c40:	4685                	li	a3,1$/;"	l
c40	sh.asm	/^     c40:	4501                	li	a0,0$/;"	l
c40	usertests.asm	/^     c40:	00004097          	auipc	ra,0x4$/;"	l
c42	grind.asm	/^     c42:	9e89                	subw	a3,a3,a0$/;"	l
c42	sh.asm	/^     c42:	00000097          	auipc	ra,0x0$/;"	l
c44	grind.asm	/^     c44:	00f6853b          	addw	a0,a3,a5$/;"	l
c44	usertests.asm	/^     c44:	758080e7          	jalr	1880(ra) # 5398 <write>$/;"	l
c46	sh.asm	/^     c46:	1a0080e7          	jalr	416(ra) # de2 <read>$/;"	l
c48	grind.asm	/^     c48:	0785                	addi	a5,a5,1$/;"	l
c48	usertests.asm	/^     c48:	47a9                	li	a5,10$/;"	l
c4a	grind.asm	/^     c4a:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c4a	sh.asm	/^     c4a:	00a05e63          	blez	a0,c66 <gets+0x56>$/;"	l
c4a	usertests.asm	/^     c4a:	0af51c63          	bne	a0,a5,d02 <unlinkread+0x19a>$/;"	l
c4e	grind.asm	/^     c4e:	fb7d                	bnez	a4,c44 <strlen+0x14>$/;"	l
c4e	sh.asm	/^     c4e:	faf44783          	lbu	a5,-81(s0)$/;"	l
c4e	usertests.asm	/^     c4e:	8526                	mv	a0,s1$/;"	l
c50	grind.asm	/^     c50:	6422                	ld	s0,8(sp)$/;"	l
c50	usertests.asm	/^     c50:	00004097          	auipc	ra,0x4$/;"	l
c52	grind.asm	/^     c52:	0141                	addi	sp,sp,16$/;"	l
c52	sh.asm	/^     c52:	00f90023          	sb	a5,0(s2)$/;"	l
c54	grind.asm	/^     c54:	8082                	ret$/;"	l
c54	usertests.asm	/^     c54:	750080e7          	jalr	1872(ra) # 53a0 <close>$/;"	l
c56	grind.asm	/^     c56:	4501                	li	a0,0$/;"	l
c56	sh.asm	/^     c56:	01578763          	beq	a5,s5,c64 <gets+0x54>$/;"	l
c58	grind.asm	/^     c58:	bfe5                	j	c50 <strlen+0x20>$/;"	l
c58	usertests.asm	/^     c58:	00005517          	auipc	a0,0x5$/;"	l
c5a	grind.asm	/^     c5a:	1141                	addi	sp,sp,-16$/;"	l
c5a	sh.asm	/^     c5a:	0905                	addi	s2,s2,1$/;"	l
c5c	grind.asm	/^     c5c:	e422                	sd	s0,8(sp)$/;"	l
c5c	sh.asm	/^     c5c:	fd679be3          	bne	a5,s6,c32 <gets+0x22>$/;"	l
c5c	usertests.asm	/^     c5c:	d8850513          	addi	a0,a0,-632 # 59e0 <malloc+0x232>$/;"	l
c5e	grind.asm	/^     c5e:	0800                	addi	s0,sp,16$/;"	l
c6	echo.asm	/^  c6:	6422                	ld	s0,8(sp)$/;"	l
c6	forktest.asm	/^  c6:	6442                	ld	s0,16(sp)$/;"	l
c6	grep.asm	/^  c6:	b7c9                	j	88 <matchhere+0x3a>$/;"	l
c6	init.asm	/^  c6:	00001597          	auipc	a1,0x1$/;"	l
c6	kill.asm	/^  c6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
c6	ln.asm	/^  c6:	fb7d                	bnez	a4,bc <strlen+0x14>$/;"	l
c6	mkdir.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	rm.asm	/^  c6:	00054783          	lbu	a5,0(a0)$/;"	l
c6	stressfs.asm	/^  c6:	4581                	li	a1,0$/;"	l
c6	usertests.asm	/^      c6:	00006517          	auipc	a0,0x6$/;"	l
c6	wc.asm	/^  c6:	70e6                	ld	ra,120(sp)$/;"	l
c6	zombie.asm	/^  c6:	0800                	addi	s0,sp,16$/;"	l
c60	grind.asm	/^     c60:	ce09                	beqz	a2,c7a <memset+0x20>$/;"	l
c60	sh.asm	/^     c60:	89a6                	mv	s3,s1$/;"	l
c60	usertests.asm	/^     c60:	00004097          	auipc	ra,0x4$/;"	l
c62	grind.asm	/^     c62:	87aa                	mv	a5,a0$/;"	l
c62	sh.asm	/^     c62:	a011                	j	c66 <gets+0x56>$/;"	l
c64	grind.asm	/^     c64:	fff6071b          	addiw	a4,a2,-1$/;"	l
c64	sh.asm	/^     c64:	89a6                	mv	s3,s1$/;"	l
c64	usertests.asm	/^     c64:	768080e7          	jalr	1896(ra) # 53c8 <unlink>$/;"	l
c66	sh.asm	/^     c66:	99de                	add	s3,s3,s7$/;"	l
c68	grind.asm	/^     c68:	1702                	slli	a4,a4,0x20$/;"	l
c68	sh.asm	/^     c68:	00098023          	sb	zero,0(s3)$/;"	l
c68	usertests.asm	/^     c68:	70a2                	ld	ra,40(sp)$/;"	l
c6a	grind.asm	/^     c6a:	9301                	srli	a4,a4,0x20$/;"	l
c6a	usertests.asm	/^     c6a:	7402                	ld	s0,32(sp)$/;"	l
c6c	grind.asm	/^     c6c:	0705                	addi	a4,a4,1$/;"	l
c6c	sh.asm	/^     c6c:	855e                	mv	a0,s7$/;"	l
c6c	usertests.asm	/^     c6c:	64e2                	ld	s1,24(sp)$/;"	l
c6e	grind.asm	/^     c6e:	972a                	add	a4,a4,a0$/;"	l
c6e	sh.asm	/^     c6e:	60e6                	ld	ra,88(sp)$/;"	l
c6e	usertests.asm	/^     c6e:	6942                	ld	s2,16(sp)$/;"	l
c70	grind.asm	/^     c70:	00b78023          	sb	a1,0(a5)$/;"	l
c70	sh.asm	/^     c70:	6446                	ld	s0,80(sp)$/;"	l
c70	usertests.asm	/^     c70:	69a2                	ld	s3,8(sp)$/;"	l
c72	sh.asm	/^     c72:	64a6                	ld	s1,72(sp)$/;"	l
c72	usertests.asm	/^     c72:	6145                	addi	sp,sp,48$/;"	l
c74	grind.asm	/^     c74:	0785                	addi	a5,a5,1$/;"	l
c74	sh.asm	/^     c74:	6906                	ld	s2,64(sp)$/;"	l
c74	usertests.asm	/^     c74:	8082                	ret$/;"	l
c76	grind.asm	/^     c76:	fee79de3          	bne	a5,a4,c70 <memset+0x16>$/;"	l
c76	sh.asm	/^     c76:	79e2                	ld	s3,56(sp)$/;"	l
c76	usertests.asm	/^     c76:	85ce                	mv	a1,s3$/;"	l
c78	sh.asm	/^     c78:	7a42                	ld	s4,48(sp)$/;"	l
c78	usertests.asm	/^     c78:	00005517          	auipc	a0,0x5$/;"	l
c7a	grind.asm	/^     c7a:	6422                	ld	s0,8(sp)$/;"	l
c7a	sh.asm	/^     c7a:	7aa2                	ld	s5,40(sp)$/;"	l
c7c	grind.asm	/^     c7c:	0141                	addi	sp,sp,16$/;"	l
c7c	sh.asm	/^     c7c:	7b02                	ld	s6,32(sp)$/;"	l
c7c	usertests.asm	/^     c7c:	41050513          	addi	a0,a0,1040 # 6088 <malloc+0x8da>$/;"	l
c7e	grind.asm	/^     c7e:	8082                	ret$/;"	l
c7e	sh.asm	/^     c7e:	6be2                	ld	s7,24(sp)$/;"	l
c8	cat.asm	/^  c8:	00000097          	auipc	ra,0x0$/;"	l
c8	echo.asm	/^  c8:	0141                	addi	sp,sp,16$/;"	l
c8	forktest.asm	/^  c8:	64a2                	ld	s1,8(sp)$/;"	l
c8	grep.asm	/^  c8:	4505                	li	a0,1$/;"	l
c8	grind.asm	/^      c8:	112080e7          	jalr	274(ra) # 11d6 <printf>$/;"	l
c8	ln.asm	/^  c8:	6422                	ld	s0,8(sp)$/;"	l
c8	ls.asm	/^  c8:	25313423          	sd	s3,584(sp)$/;"	l
c8	sh.asm	/^      c8:	33470713          	addi	a4,a4,820 # 13f8 <malloc+0x1f8>$/;"	l
c8	stressfs.asm	/^  c8:	fd040513          	addi	a0,s0,-48$/;"	l
c8	wc.asm	/^  c8:	7446                	ld	s0,112(sp)$/;"	l
c8	zombie.asm	/^  c8:	00054783          	lbu	a5,0(a0)$/;"	l
c80	grind.asm	/^     c80:	1141                	addi	sp,sp,-16$/;"	l
c80	sh.asm	/^     c80:	6125                	addi	sp,sp,96$/;"	l
c80	usertests.asm	/^     c80:	00005097          	auipc	ra,0x5$/;"	l
c82	grind.asm	/^     c82:	e422                	sd	s0,8(sp)$/;"	l
c82	sh.asm	/^     c82:	8082                	ret$/;"	l
c84	grind.asm	/^     c84:	0800                	addi	s0,sp,16$/;"	l
c84	sh.asm	/^     c84:	1101                	addi	sp,sp,-32$/;"	l
c84	usertests.asm	/^     c84:	a70080e7          	jalr	-1424(ra) # 56f0 <printf>$/;"	l
c86	grind.asm	/^     c86:	00054783          	lbu	a5,0(a0)$/;"	l
c86	sh.asm	/^     c86:	ec06                	sd	ra,24(sp)$/;"	l
c88	sh.asm	/^     c88:	e822                	sd	s0,16(sp)$/;"	l
c88	usertests.asm	/^     c88:	4505                	li	a0,1$/;"	l
c8a	grind.asm	/^     c8a:	cb99                	beqz	a5,ca0 <strchr+0x20>$/;"	l
c8a	sh.asm	/^     c8a:	e426                	sd	s1,8(sp)$/;"	l
c8a	usertests.asm	/^     c8a:	00004097          	auipc	ra,0x4$/;"	l
c8c	grind.asm	/^     c8c:	00f58763          	beq	a1,a5,c9a <strchr+0x1a>$/;"	l
c8c	sh.asm	/^     c8c:	e04a                	sd	s2,0(sp)$/;"	l
c8e	sh.asm	/^     c8e:	1000                	addi	s0,sp,32$/;"	l
c8e	usertests.asm	/^     c8e:	6ee080e7          	jalr	1774(ra) # 5378 <exit>$/;"	l
c90	grind.asm	/^     c90:	0505                	addi	a0,a0,1$/;"	l
c90	sh.asm	/^     c90:	892e                	mv	s2,a1$/;"	l
c92	grind.asm	/^     c92:	00054783          	lbu	a5,0(a0)$/;"	l
c92	sh.asm	/^     c92:	4581                	li	a1,0$/;"	l
c92	usertests.asm	/^     c92:	85ce                	mv	a1,s3$/;"	l
c94	sh.asm	/^     c94:	00000097          	auipc	ra,0x0$/;"	l
c94	usertests.asm	/^     c94:	00005517          	auipc	a0,0x5$/;"	l
c96	grind.asm	/^     c96:	fbfd                	bnez	a5,c8c <strchr+0xc>$/;"	l
c98	grind.asm	/^     c98:	4501                	li	a0,0$/;"	l
c98	sh.asm	/^     c98:	176080e7          	jalr	374(ra) # e0a <open>$/;"	l
c98	usertests.asm	/^     c98:	41c50513          	addi	a0,a0,1052 # 60b0 <malloc+0x902>$/;"	l
c9a	grind.asm	/^     c9a:	6422                	ld	s0,8(sp)$/;"	l
c9c	grind.asm	/^     c9c:	0141                	addi	sp,sp,16$/;"	l
c9c	sh.asm	/^     c9c:	02054563          	bltz	a0,cc6 <stat+0x42>$/;"	l
c9c	usertests.asm	/^     c9c:	00005097          	auipc	ra,0x5$/;"	l
c9e	grind.asm	/^     c9e:	8082                	ret$/;"	l
ca	echo.asm	/^  ca:	8082                	ret$/;"	l
ca	forktest.asm	/^  ca:	6902                	ld	s2,0(sp)$/;"	l
ca	grep.asm	/^  ca:	8082                	ret$/;"	l
ca	init.asm	/^  ca:	85a58593          	addi	a1,a1,-1958 # 920 <argv>$/;"	l
ca	kill.asm	/^  ca:	fb7d                	bnez	a4,c0 <strlen+0x14>$/;"	l
ca	ln.asm	/^  ca:	0141                	addi	sp,sp,16$/;"	l
ca	mkdir.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	rm.asm	/^  ca:	cf91                	beqz	a5,e6 <strlen+0x26>$/;"	l
ca	usertests.asm	/^      ca:	b2a50513          	addi	a0,a0,-1238 # 5bf0 <malloc+0x442>$/;"	l
ca	wc.asm	/^  ca:	74a6                	ld	s1,104(sp)$/;"	l
ca0	grind.asm	/^     ca0:	4501                	li	a0,0$/;"	l
ca0	sh.asm	/^     ca0:	84aa                	mv	s1,a0$/;"	l
ca0	usertests.asm	/^     ca0:	a54080e7          	jalr	-1452(ra) # 56f0 <printf>$/;"	l
ca2	grind.asm	/^     ca2:	bfe5                	j	c9a <strchr+0x1a>$/;"	l
ca2	sh.asm	/^     ca2:	85ca                	mv	a1,s2$/;"	l
ca4	grind.asm	/^     ca4:	711d                	addi	sp,sp,-96$/;"	l
ca4	sh.asm	/^     ca4:	00000097          	auipc	ra,0x0$/;"	l
ca4	usertests.asm	/^     ca4:	4505                	li	a0,1$/;"	l
ca6	grind.asm	/^     ca6:	ec86                	sd	ra,88(sp)$/;"	l
ca6	usertests.asm	/^     ca6:	00004097          	auipc	ra,0x4$/;"	l
ca8	grind.asm	/^     ca8:	e8a2                	sd	s0,80(sp)$/;"	l
ca8	sh.asm	/^     ca8:	17e080e7          	jalr	382(ra) # e22 <fstat>$/;"	l
caa	grind.asm	/^     caa:	e4a6                	sd	s1,72(sp)$/;"	l
caa	usertests.asm	/^     caa:	6d2080e7          	jalr	1746(ra) # 5378 <exit>$/;"	l
cac	grind.asm	/^     cac:	e0ca                	sd	s2,64(sp)$/;"	l
cac	sh.asm	/^     cac:	892a                	mv	s2,a0$/;"	l
cae	grind.asm	/^     cae:	fc4e                	sd	s3,56(sp)$/;"	l
cae	sh.asm	/^     cae:	8526                	mv	a0,s1$/;"	l
cae	usertests.asm	/^     cae:	85ce                	mv	a1,s3$/;"	l
cat	cat.c	/^cat(int fd)$/;"	f
cb0	grind.asm	/^     cb0:	f852                	sd	s4,48(sp)$/;"	l
cb0	sh.asm	/^     cb0:	00000097          	auipc	ra,0x0$/;"	l
cb0	usertests.asm	/^     cb0:	00005517          	auipc	a0,0x5$/;"	l
cb2	grind.asm	/^     cb2:	f456                	sd	s5,40(sp)$/;"	l
cb4	grind.asm	/^     cb4:	f05a                	sd	s6,32(sp)$/;"	l
cb4	sh.asm	/^     cb4:	142080e7          	jalr	322(ra) # df2 <close>$/;"	l
cb4	usertests.asm	/^     cb4:	42050513          	addi	a0,a0,1056 # 60d0 <malloc+0x922>$/;"	l
cb6	grind.asm	/^     cb6:	ec5e                	sd	s7,24(sp)$/;"	l
cb8	grind.asm	/^     cb8:	1080                	addi	s0,sp,96$/;"	l
cb8	sh.asm	/^     cb8:	854a                	mv	a0,s2$/;"	l
cb8	usertests.asm	/^     cb8:	00005097          	auipc	ra,0x5$/;"	l
cba	grind.asm	/^     cba:	8baa                	mv	s7,a0$/;"	l
cba	sh.asm	/^     cba:	60e2                	ld	ra,24(sp)$/;"	l
cbc	grind.asm	/^     cbc:	8a2e                	mv	s4,a1$/;"	l
cbc	sh.asm	/^     cbc:	6442                	ld	s0,16(sp)$/;"	l
cbc	usertests.asm	/^     cbc:	a38080e7          	jalr	-1480(ra) # 56f0 <printf>$/;"	l
cbe	grind.asm	/^     cbe:	892a                	mv	s2,a0$/;"	l
cbe	sh.asm	/^     cbe:	64a2                	ld	s1,8(sp)$/;"	l
cc	cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	cat.asm	/^  cc:	f38080e7          	jalr	-200(ra) # 0 <cat>$/;"	l
cc	echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	echo.asm	/^  cc:	1141                	addi	sp,sp,-16$/;"	l
cc	forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	forktest.asm	/^  cc:	6105                	addi	sp,sp,32$/;"	l
cc	grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	grep.asm	/^  cc:	1101                	addi	sp,sp,-32$/;"	l
cc	grind.asm	/^      cc:	4505                	li	a0,1$/;"	l
cc	grind.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	kill.asm	/^  cc:	6422                	ld	s0,8(sp)$/;"	l
cc	ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	ln.asm	/^  cc:	8082                	ret$/;"	l
cc	ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	ls.asm	/^  cc:	25413023          	sd	s4,576(sp)$/;"	l
cc	mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	mkdir.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	rm.asm	/^  cc:	0505                	addi	a0,a0,1$/;"	l
cc	sh.asm	/^      cc:	97ba                	add	a5,a5,a4$/;"	l
cc	sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	stressfs.asm	/^  cc:	00000097          	auipc	ra,0x0$/;"	l
cc	usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	usertests.asm	/^      cc = cc * 2;$/;"	d
cc	usertests.asm	/^    cc = 1;$/;"	d
cc	usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	usertests.asm	/^    cc = read(fd, buf, SZ\/2);$/;"	d
cc	usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	wc.asm	/^  cc:	7906                	ld	s2,96(sp)$/;"	l
cc	zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	zombie.asm	/^  cc:	cb99                	beqz	a5,e2 <strchr+0x20>$/;"	l
cc0	grind.asm	/^     cc0:	4481                	li	s1,0$/;"	l
cc0	sh.asm	/^     cc0:	6902                	ld	s2,0(sp)$/;"	l
cc0	usertests.asm	/^     cc0:	4505                	li	a0,1$/;"	l
cc2	grind.asm	/^     cc2:	4aa9                	li	s5,10$/;"	l
cc2	sh.asm	/^     cc2:	6105                	addi	sp,sp,32$/;"	l
cc2	usertests.asm	/^     cc2:	00004097          	auipc	ra,0x4$/;"	l
cc4	grind.asm	/^     cc4:	4b35                	li	s6,13$/;"	l
cc4	sh.asm	/^     cc4:	8082                	ret$/;"	l
cc6	grind.asm	/^     cc6:	89a6                	mv	s3,s1$/;"	l
cc6	sh.asm	/^     cc6:	597d                	li	s2,-1$/;"	l
cc6	usertests.asm	/^     cc6:	6b6080e7          	jalr	1718(ra) # 5378 <exit>$/;"	l
cc8	grind.asm	/^     cc8:	2485                	addiw	s1,s1,1$/;"	l
cc8	sh.asm	/^     cc8:	bfc5                	j	cb8 <stat+0x34>$/;"	l
cca	grind.asm	/^     cca:	0344d863          	bge	s1,s4,cfa <gets+0x56>$/;"	l
cca	sh.asm	/^     cca:	1141                	addi	sp,sp,-16$/;"	l
cca	usertests.asm	/^     cca:	85ce                	mv	a1,s3$/;"	l
ccc	sh.asm	/^     ccc:	e422                	sd	s0,8(sp)$/;"	l
ccc	usertests.asm	/^     ccc:	00005517          	auipc	a0,0x5$/;"	l
cce	grind.asm	/^     cce:	4605                	li	a2,1$/;"	l
cce	sh.asm	/^     cce:	0800                	addi	s0,sp,16$/;"	l
cd0	grind.asm	/^     cd0:	faf40593          	addi	a1,s0,-81$/;"	l
cd0	sh.asm	/^     cd0:	00054603          	lbu	a2,0(a0)$/;"	l
cd0	usertests.asm	/^     cd0:	42c50513          	addi	a0,a0,1068 # 60f8 <malloc+0x94a>$/;"	l
cd4	grind.asm	/^     cd4:	4501                	li	a0,0$/;"	l
cd4	sh.asm	/^     cd4:	fd06079b          	addiw	a5,a2,-48$/;"	l
cd4	usertests.asm	/^     cd4:	00005097          	auipc	ra,0x5$/;"	l
cd6	grind.asm	/^     cd6:	00000097          	auipc	ra,0x0$/;"	l
cd8	sh.asm	/^     cd8:	0ff7f793          	andi	a5,a5,255$/;"	l
cd8	usertests.asm	/^     cd8:	a1c080e7          	jalr	-1508(ra) # 56f0 <printf>$/;"	l
cda	grind.asm	/^     cda:	1a0080e7          	jalr	416(ra) # e76 <read>$/;"	l
cdc	sh.asm	/^     cdc:	4725                	li	a4,9$/;"	l
cdc	usertests.asm	/^     cdc:	4505                	li	a0,1$/;"	l
cde	grind.asm	/^     cde:	00a05e63          	blez	a0,cfa <gets+0x56>$/;"	l
cde	sh.asm	/^     cde:	02f76963          	bltu	a4,a5,d10 <atoi+0x46>$/;"	l
cde	usertests.asm	/^     cde:	00004097          	auipc	ra,0x4$/;"	l
ce	echo.asm	/^  ce:	e422                	sd	s0,8(sp)$/;"	l
ce	forktest.asm	/^  ce:	8082                	ret$/;"	l
ce	grep.asm	/^  ce:	ec06                	sd	ra,24(sp)$/;"	l
ce	grind.asm	/^      ce:	00001097          	auipc	ra,0x1$/;"	l
ce	init.asm	/^  ce:	00000517          	auipc	a0,0x0$/;"	l
ce	kill.asm	/^  ce:	0141                	addi	sp,sp,16$/;"	l
ce	ln.asm	/^  ce:	4501                	li	a0,0$/;"	l
ce	mkdir.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	rm.asm	/^  ce:	87aa                	mv	a5,a0$/;"	l
ce	sh.asm	/^      ce:	439c                	lw	a5,0(a5)$/;"	l
ce	usertests.asm	/^      ce:	00005097          	auipc	ra,0x5$/;"	l
ce	wc.asm	/^  ce:	69e6                	ld	s3,88(sp)$/;"	l
ce	zombie.asm	/^  ce:	00f58763          	beq	a1,a5,dc <strchr+0x1a>$/;"	l
ce2	grind.asm	/^     ce2:	faf44783          	lbu	a5,-81(s0)$/;"	l
ce2	sh.asm	/^     ce2:	86aa                	mv	a3,a0$/;"	l
ce2	usertests.asm	/^     ce2:	69a080e7          	jalr	1690(ra) # 5378 <exit>$/;"	l
ce4	sh.asm	/^     ce4:	4501                	li	a0,0$/;"	l
ce6	grind.asm	/^     ce6:	00f90023          	sb	a5,0(s2)$/;"	l
ce6	sh.asm	/^     ce6:	45a5                	li	a1,9$/;"	l
ce6	usertests.asm	/^     ce6:	85ce                	mv	a1,s3$/;"	l
ce8	sh.asm	/^     ce8:	0685                	addi	a3,a3,1$/;"	l
ce8	usertests.asm	/^     ce8:	00005517          	auipc	a0,0x5$/;"	l
cea	grind.asm	/^     cea:	01578763          	beq	a5,s5,cf8 <gets+0x54>$/;"	l
cea	sh.asm	/^     cea:	0025179b          	slliw	a5,a0,0x2$/;"	l
cec	usertests.asm	/^     cec:	43050513          	addi	a0,a0,1072 # 6118 <malloc+0x96a>$/;"	l
cee	grind.asm	/^     cee:	0905                	addi	s2,s2,1$/;"	l
cee	sh.asm	/^     cee:	9fa9                	addw	a5,a5,a0$/;"	l
cf0	grind.asm	/^     cf0:	fd679be3          	bne	a5,s6,cc6 <gets+0x22>$/;"	l
cf0	sh.asm	/^     cf0:	0017979b          	slliw	a5,a5,0x1$/;"	l
cf0	usertests.asm	/^     cf0:	00005097          	auipc	ra,0x5$/;"	l
cf4	grind.asm	/^     cf4:	89a6                	mv	s3,s1$/;"	l
cf4	sh.asm	/^     cf4:	9fb1                	addw	a5,a5,a2$/;"	l
cf4	usertests.asm	/^     cf4:	a00080e7          	jalr	-1536(ra) # 56f0 <printf>$/;"	l
cf6	grind.asm	/^     cf6:	a011                	j	cfa <gets+0x56>$/;"	l
cf6	sh.asm	/^     cf6:	fd07851b          	addiw	a0,a5,-48$/;"	l
cf8	grind.asm	/^     cf8:	89a6                	mv	s3,s1$/;"	l
cf8	usertests.asm	/^     cf8:	4505                	li	a0,1$/;"	l
cfa	grind.asm	/^     cfa:	99de                	add	s3,s3,s7$/;"	l
cfa	sh.asm	/^     cfa:	0006c603          	lbu	a2,0(a3)$/;"	l
cfa	usertests.asm	/^     cfa:	00004097          	auipc	ra,0x4$/;"	l
cfc	grind.asm	/^     cfc:	00098023          	sb	zero,0(s3)$/;"	l
cfe	sh.asm	/^     cfe:	fd06071b          	addiw	a4,a2,-48$/;"	l
cfe	usertests.asm	/^     cfe:	67e080e7          	jalr	1662(ra) # 5378 <exit>$/;"	l
char	cat.asm	/^char buf[512];$/;"	l
char	init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	wc.asm	/^char buf[512];$/;"	l
chdir	cat.asm	/^chdir:$/;"	l
chdir	echo.asm	/^chdir:$/;"	l
chdir	forktest.asm	/^chdir:$/;"	l
chdir	grep.asm	/^chdir:$/;"	l
chdir	grind.asm	/^chdir:$/;"	l
chdir	init.asm	/^chdir:$/;"	l
chdir	kill.asm	/^chdir:$/;"	l
chdir	ln.asm	/^chdir:$/;"	l
chdir	ls.asm	/^chdir:$/;"	l
chdir	mkdir.asm	/^chdir:$/;"	l
chdir	rm.asm	/^chdir:$/;"	l
chdir	sh.asm	/^chdir:$/;"	l
chdir	stressfs.asm	/^chdir:$/;"	l
chdir	usertests.asm	/^chdir:$/;"	l
chdir	usys.S	/^chdir:$/;"	l
chdir	wc.asm	/^chdir:$/;"	l
chdir	zombie.asm	/^chdir:$/;"	l
close	cat.asm	/^close:$/;"	l
close	echo.asm	/^close:$/;"	l
close	forktest.asm	/^close:$/;"	l
close	grep.asm	/^close:$/;"	l
close	grind.asm	/^close:$/;"	l
close	init.asm	/^close:$/;"	l
close	kill.asm	/^close:$/;"	l
close	ln.asm	/^close:$/;"	l
close	ls.asm	/^close:$/;"	l
close	mkdir.asm	/^close:$/;"	l
close	rm.asm	/^close:$/;"	l
close	sh.asm	/^close:$/;"	l
close	stressfs.asm	/^close:$/;"	l
close	usertests.asm	/^close:$/;"	l
close	usys.S	/^close:$/;"	l
close	wc.asm	/^close:$/;"	l
close	zombie.asm	/^close:$/;"	l
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE|O_TRUNC, 1);$/;"	d
cmd	sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	sh.c	/^struct cmd {$/;"	s	file:
concreate	usertests.c	/^concreate(char *s)$/;"	f
continuous	usertests.asm	/^    continuous = 1;$/;"	d
continuous	usertests.asm	/^    continuous = 2;$/;"	d
copyin	usertests.c	/^copyin(char *s)$/;"	f
copyinstr1	usertests.c	/^copyinstr1(char *s)$/;"	f
copyinstr2	usertests.c	/^copyinstr2(char *s)$/;"	f
copyinstr3	usertests.c	/^copyinstr3(char *s)$/;"	f
copyout	usertests.c	/^copyout(char *s)$/;"	f
countfree	usertests.c	/^countfree()$/;"	f
createdelete	usertests.c	/^createdelete(char *s)$/;"	f
createtest	usertests.c	/^createtest(char *s)$/;"	f
d0	cat.asm	/^  d0:	8526                	mv	a0,s1$/;"	l
d0	echo.asm	/^  d0:	0800                	addi	s0,sp,16$/;"	l
d0	forktest.asm	/^  d0:	00000517          	auipc	a0,0x0$/;"	l
d0	grep.asm	/^  d0:	e822                	sd	s0,16(sp)$/;"	l
d0	kill.asm	/^  d0:	8082                	ret$/;"	l
d0	ln.asm	/^  d0:	bfe5                	j	c8 <strlen+0x20>$/;"	l
d0	ls.asm	/^  d0:	23513c23          	sd	s5,568(sp)$/;"	l
d0	mkdir.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	rm.asm	/^  d0:	4685                	li	a3,1$/;"	l
d0	sh.asm	/^      d0:	97ba                	add	a5,a5,a4$/;"	l
d0	stressfs.asm	/^  d0:	2f6080e7          	jalr	758(ra) # 3c2 <open>$/;"	l
d0	wc.asm	/^  d0:	6a46                	ld	s4,80(sp)$/;"	l
d00	grind.asm	/^     d00:	855e                	mv	a0,s7$/;"	l
d02	grind.asm	/^     d02:	60e6                	ld	ra,88(sp)$/;"	l
d02	sh.asm	/^     d02:	0ff77713          	andi	a4,a4,255$/;"	l
d02	usertests.asm	/^     d02:	85ce                	mv	a1,s3$/;"	l
d04	grind.asm	/^     d04:	6446                	ld	s0,80(sp)$/;"	l
d04	usertests.asm	/^     d04:	00005517          	auipc	a0,0x5$/;"	l
d06	grind.asm	/^     d06:	64a6                	ld	s1,72(sp)$/;"	l
d06	sh.asm	/^     d06:	fee5f1e3          	bgeu	a1,a4,ce8 <atoi+0x1e>$/;"	l
d08	grind.asm	/^     d08:	6906                	ld	s2,64(sp)$/;"	l
d08	usertests.asm	/^     d08:	43450513          	addi	a0,a0,1076 # 6138 <malloc+0x98a>$/;"	l
d0a	grind.asm	/^     d0a:	79e2                	ld	s3,56(sp)$/;"	l
d0a	sh.asm	/^     d0a:	6422                	ld	s0,8(sp)$/;"	l
d0c	grind.asm	/^     d0c:	7a42                	ld	s4,48(sp)$/;"	l
d0c	sh.asm	/^     d0c:	0141                	addi	sp,sp,16$/;"	l
d0c	usertests.asm	/^     d0c:	00005097          	auipc	ra,0x5$/;"	l
d0e	grind.asm	/^     d0e:	7aa2                	ld	s5,40(sp)$/;"	l
d0e	sh.asm	/^     d0e:	8082                	ret$/;"	l
d10	grind.asm	/^     d10:	7b02                	ld	s6,32(sp)$/;"	l
d10	sh.asm	/^     d10:	4501                	li	a0,0$/;"	l
d10	usertests.asm	/^     d10:	9e4080e7          	jalr	-1564(ra) # 56f0 <printf>$/;"	l
d12	grind.asm	/^     d12:	6be2                	ld	s7,24(sp)$/;"	l
d12	sh.asm	/^     d12:	bfe5                	j	d0a <atoi+0x40>$/;"	l
d14	grind.asm	/^     d14:	6125                	addi	sp,sp,96$/;"	l
d14	sh.asm	/^     d14:	1141                	addi	sp,sp,-16$/;"	l
d14	usertests.asm	/^     d14:	4505                	li	a0,1$/;"	l
d16	grind.asm	/^     d16:	8082                	ret$/;"	l
d16	sh.asm	/^     d16:	e422                	sd	s0,8(sp)$/;"	l
d16	usertests.asm	/^     d16:	00004097          	auipc	ra,0x4$/;"	l
d18	grind.asm	/^     d18:	1101                	addi	sp,sp,-32$/;"	l
d18	sh.asm	/^     d18:	0800                	addi	s0,sp,16$/;"	l
d1a	grind.asm	/^     d1a:	ec06                	sd	ra,24(sp)$/;"	l
d1a	sh.asm	/^     d1a:	02b57663          	bgeu	a0,a1,d46 <memmove+0x32>$/;"	l
d1a	usertests.asm	/^     d1a:	662080e7          	jalr	1634(ra) # 5378 <exit>$/;"	l
d1c	grind.asm	/^     d1c:	e822                	sd	s0,16(sp)$/;"	l
d1e	grind.asm	/^     d1e:	e426                	sd	s1,8(sp)$/;"	l
d1e	sh.asm	/^     d1e:	02c05163          	blez	a2,d40 <memmove+0x2c>$/;"	l
d1e	usertests.asm	/^     d1e:	1101                	addi	sp,sp,-32$/;"	l
d2	cat.asm	/^  d2:	00000097          	auipc	ra,0x0$/;"	l
d2	echo.asm	/^  d2:	00054783          	lbu	a5,0(a0)$/;"	l
d2	grep.asm	/^  d2:	e426                	sd	s1,8(sp)$/;"	l
d2	grind.asm	/^      d2:	d90080e7          	jalr	-624(ra) # e5e <exit>$/;"	l
d2	init.asm	/^  d2:	7f250513          	addi	a0,a0,2034 # 8c0 <malloc+0x11c>$/;"	l
d2	kill.asm	/^  d2:	4501                	li	a0,0$/;"	l
d2	ln.asm	/^  d2:	1141                	addi	sp,sp,-16$/;"	l
d2	mkdir.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	rm.asm	/^  d2:	9e89                	subw	a3,a3,a0$/;"	l
d2	sh.asm	/^      d2:	8782                	jr	a5$/;"	l
d2	usertests.asm	/^      d2:	2ea080e7          	jalr	746(ra) # 53b8 <open>$/;"	l
d2	wc.asm	/^  d2:	6aa6                	ld	s5,72(sp)$/;"	l
d2	zombie.asm	/^  d2:	0505                	addi	a0,a0,1$/;"	l
d20	grind.asm	/^     d20:	e04a                	sd	s2,0(sp)$/;"	l
d20	usertests.asm	/^     d20:	ec06                	sd	ra,24(sp)$/;"	l
d22	grind.asm	/^     d22:	1000                	addi	s0,sp,32$/;"	l
d22	sh.asm	/^     d22:	fff6079b          	addiw	a5,a2,-1$/;"	l
d22	usertests.asm	/^     d22:	e822                	sd	s0,16(sp)$/;"	l
d24	grind.asm	/^     d24:	892e                	mv	s2,a1$/;"	l
d24	usertests.asm	/^     d24:	e426                	sd	s1,8(sp)$/;"	l
d26	grind.asm	/^     d26:	4581                	li	a1,0$/;"	l
d26	sh.asm	/^     d26:	1782                	slli	a5,a5,0x20$/;"	l
d26	usertests.asm	/^     d26:	e04a                	sd	s2,0(sp)$/;"	l
d28	grind.asm	/^     d28:	00000097          	auipc	ra,0x0$/;"	l
d28	sh.asm	/^     d28:	9381                	srli	a5,a5,0x20$/;"	l
d28	usertests.asm	/^     d28:	1000                	addi	s0,sp,32$/;"	l
d2a	sh.asm	/^     d2a:	0785                	addi	a5,a5,1$/;"	l
d2a	usertests.asm	/^     d2a:	892a                	mv	s2,a0$/;"	l
d2c	grind.asm	/^     d2c:	176080e7          	jalr	374(ra) # e9e <open>$/;"	l
d2c	sh.asm	/^     d2c:	97aa                	add	a5,a5,a0$/;"	l
d2c	usertests.asm	/^     d2c:	00005517          	auipc	a0,0x5$/;"	l
d2e	sh.asm	/^     d2e:	872a                	mv	a4,a0$/;"	l
d30	grind.asm	/^     d30:	02054563          	bltz	a0,d5a <stat+0x42>$/;"	l
d30	sh.asm	/^     d30:	0585                	addi	a1,a1,1$/;"	l
d30	usertests.asm	/^     d30:	42c50513          	addi	a0,a0,1068 # 6158 <malloc+0x9aa>$/;"	l
d32	sh.asm	/^     d32:	0705                	addi	a4,a4,1$/;"	l
d34	grind.asm	/^     d34:	84aa                	mv	s1,a0$/;"	l
d34	sh.asm	/^     d34:	fff5c683          	lbu	a3,-1(a1)$/;"	l
d34	usertests.asm	/^     d34:	00004097          	auipc	ra,0x4$/;"	l
d36	grind.asm	/^     d36:	85ca                	mv	a1,s2$/;"	l
d38	grind.asm	/^     d38:	00000097          	auipc	ra,0x0$/;"	l
d38	sh.asm	/^     d38:	fed70fa3          	sb	a3,-1(a4)$/;"	l
d38	usertests.asm	/^     d38:	694080e7          	jalr	1684(ra) # 53c8 <unlink>$/;"	l
d3c	grind.asm	/^     d3c:	17e080e7          	jalr	382(ra) # eb6 <fstat>$/;"	l
d3c	sh.asm	/^     d3c:	fee79ae3          	bne	a5,a4,d30 <memmove+0x1c>$/;"	l
d3c	usertests.asm	/^     d3c:	00005517          	auipc	a0,0x5$/;"	l
d4	forktest.asm	/^  d4:	39850513          	addi	a0,a0,920 # 468 <uptime+0x3c>$/;"	l
d4	grep.asm	/^  d4:	e04a                	sd	s2,0(sp)$/;"	l
d4	kill.asm	/^  d4:	bfe5                	j	cc <strlen+0x20>$/;"	l
d4	ln.asm	/^  d4:	e422                	sd	s0,8(sp)$/;"	l
d4	ls.asm	/^  d4:	1c80                	addi	s0,sp,624$/;"	l
d4	mkdir.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	rm.asm	/^  d4:	00f6853b          	addw	a0,a3,a5$/;"	l
d4	sh.asm	/^      d4:	4505                	li	a0,1$/;"	l
d4	stressfs.asm	/^  d4:	892a                	mv	s2,a0$/;"	l
d4	wc.asm	/^  d4:	6b06                	ld	s6,64(sp)$/;"	l
d4	zombie.asm	/^  d4:	00054783          	lbu	a5,0(a0)$/;"	l
d40	grind.asm	/^     d40:	892a                	mv	s2,a0$/;"	l
d40	sh.asm	/^     d40:	6422                	ld	s0,8(sp)$/;"	l
d40	usertests.asm	/^     d40:	42450513          	addi	a0,a0,1060 # 6160 <malloc+0x9b2>$/;"	l
d42	grind.asm	/^     d42:	8526                	mv	a0,s1$/;"	l
d42	sh.asm	/^     d42:	0141                	addi	sp,sp,16$/;"	l
d44	grind.asm	/^     d44:	00000097          	auipc	ra,0x0$/;"	l
d44	sh.asm	/^     d44:	8082                	ret$/;"	l
d44	usertests.asm	/^     d44:	00004097          	auipc	ra,0x4$/;"	l
d46	sh.asm	/^     d46:	00c50733          	add	a4,a0,a2$/;"	l
d48	grind.asm	/^     d48:	142080e7          	jalr	322(ra) # e86 <close>$/;"	l
d48	usertests.asm	/^     d48:	684080e7          	jalr	1668(ra) # 53c8 <unlink>$/;"	l
d4a	sh.asm	/^     d4a:	95b2                	add	a1,a1,a2$/;"	l
d4c	grind.asm	/^     d4c:	854a                	mv	a0,s2$/;"	l
d4c	sh.asm	/^     d4c:	fec05ae3          	blez	a2,d40 <memmove+0x2c>$/;"	l
d4c	usertests.asm	/^     d4c:	20200593          	li	a1,514$/;"	l
d4e	grind.asm	/^     d4e:	60e2                	ld	ra,24(sp)$/;"	l
d50	grind.asm	/^     d50:	6442                	ld	s0,16(sp)$/;"	l
d50	sh.asm	/^     d50:	fff6079b          	addiw	a5,a2,-1$/;"	l
d50	usertests.asm	/^     d50:	00005517          	auipc	a0,0x5$/;"	l
d52	grind.asm	/^     d52:	64a2                	ld	s1,8(sp)$/;"	l
d54	grind.asm	/^     d54:	6902                	ld	s2,0(sp)$/;"	l
d54	sh.asm	/^     d54:	1782                	slli	a5,a5,0x20$/;"	l
d54	usertests.asm	/^     d54:	40850513          	addi	a0,a0,1032 # 6158 <malloc+0x9aa>$/;"	l
d56	grind.asm	/^     d56:	6105                	addi	sp,sp,32$/;"	l
d56	sh.asm	/^     d56:	9381                	srli	a5,a5,0x20$/;"	l
d58	grind.asm	/^     d58:	8082                	ret$/;"	l
d58	sh.asm	/^     d58:	fff7c793          	not	a5,a5$/;"	l
d58	usertests.asm	/^     d58:	00004097          	auipc	ra,0x4$/;"	l
d5a	grind.asm	/^     d5a:	597d                	li	s2,-1$/;"	l
d5c	grind.asm	/^     d5c:	bfc5                	j	d4c <stat+0x34>$/;"	l
d5c	sh.asm	/^     d5c:	97ba                	add	a5,a5,a4$/;"	l
d5c	usertests.asm	/^     d5c:	660080e7          	jalr	1632(ra) # 53b8 <open>$/;"	l
d5e	grind.asm	/^     d5e:	1141                	addi	sp,sp,-16$/;"	l
d5e	sh.asm	/^     d5e:	15fd                	addi	a1,a1,-1$/;"	l
d6	cat.asm	/^  d6:	2ea080e7          	jalr	746(ra) # 3bc <close>$/;"	l
d6	echo.asm	/^  d6:	cf91                	beqz	a5,f2 <strlen+0x26>$/;"	l
d6	grep.asm	/^  d6:	1000                	addi	s0,sp,32$/;"	l
d6	grind.asm	/^      d6:	00001517          	auipc	a0,0x1$/;"	l
d6	init.asm	/^  d6:	00000097          	auipc	ra,0x0$/;"	l
d6	kill.asm	/^  d6:	1141                	addi	sp,sp,-16$/;"	l
d6	ln.asm	/^  d6:	0800                	addi	s0,sp,16$/;"	l
d6	ls.asm	/^  d6:	892a                	mv	s2,a0$/;"	l
d6	sh.asm	/^      d6:	00001097          	auipc	ra,0x1$/;"	l
d6	stressfs.asm	/^  d6:	44d1                	li	s1,20$/;"	l
d6	usertests.asm	/^      d6:	02055563          	bgez	a0,100 <opentest+0x66>$/;"	l
d6	wc.asm	/^  d6:	7be2                	ld	s7,56(sp)$/;"	l
d60	grind.asm	/^     d60:	e422                	sd	s0,8(sp)$/;"	l
d60	sh.asm	/^     d60:	177d                	addi	a4,a4,-1$/;"	l
d60	usertests.asm	/^     d60:	10054763          	bltz	a0,e6e <linktest+0x150>$/;"	l
d62	grind.asm	/^     d62:	0800                	addi	s0,sp,16$/;"	l
d62	sh.asm	/^     d62:	0005c683          	lbu	a3,0(a1)$/;"	l
d64	grind.asm	/^     d64:	00054603          	lbu	a2,0(a0)$/;"	l
d64	usertests.asm	/^     d64:	84aa                	mv	s1,a0$/;"	l
d66	sh.asm	/^     d66:	00d70023          	sb	a3,0(a4)$/;"	l
d66	usertests.asm	/^     d66:	4615                	li	a2,5$/;"	l
d68	grind.asm	/^     d68:	fd06079b          	addiw	a5,a2,-48$/;"	l
d68	usertests.asm	/^     d68:	00005597          	auipc	a1,0x5$/;"	l
d6a	sh.asm	/^     d6a:	fee79ae3          	bne	a5,a4,d5e <memmove+0x4a>$/;"	l
d6c	grind.asm	/^     d6c:	0ff7f793          	andi	a5,a5,255$/;"	l
d6c	usertests.asm	/^     d6c:	34058593          	addi	a1,a1,832 # 60a8 <malloc+0x8fa>$/;"	l
d6e	sh.asm	/^     d6e:	bfc9                	j	d40 <memmove+0x2c>$/;"	l
d70	grind.asm	/^     d70:	4725                	li	a4,9$/;"	l
d70	sh.asm	/^     d70:	1141                	addi	sp,sp,-16$/;"	l
d70	usertests.asm	/^     d70:	00004097          	auipc	ra,0x4$/;"	l
d72	grind.asm	/^     d72:	02f76963          	bltu	a4,a5,da4 <atoi+0x46>$/;"	l
d72	sh.asm	/^     d72:	e422                	sd	s0,8(sp)$/;"	l
d74	sh.asm	/^     d74:	0800                	addi	s0,sp,16$/;"	l
d74	usertests.asm	/^     d74:	628080e7          	jalr	1576(ra) # 5398 <write>$/;"	l
d76	grind.asm	/^     d76:	86aa                	mv	a3,a0$/;"	l
d76	sh.asm	/^     d76:	ca05                	beqz	a2,da6 <memcmp+0x36>$/;"	l
d78	grind.asm	/^     d78:	4501                	li	a0,0$/;"	l
d78	sh.asm	/^     d78:	fff6069b          	addiw	a3,a2,-1$/;"	l
d78	usertests.asm	/^     d78:	4795                	li	a5,5$/;"	l
d7a	grind.asm	/^     d7a:	45a5                	li	a1,9$/;"	l
d7a	usertests.asm	/^     d7a:	10f51863          	bne	a0,a5,e8a <linktest+0x16c>$/;"	l
d7c	grind.asm	/^     d7c:	0685                	addi	a3,a3,1$/;"	l
d7c	sh.asm	/^     d7c:	1682                	slli	a3,a3,0x20$/;"	l
d7e	grind.asm	/^     d7e:	0025179b          	slliw	a5,a0,0x2$/;"	l
d7e	sh.asm	/^     d7e:	9281                	srli	a3,a3,0x20$/;"	l
d7e	usertests.asm	/^     d7e:	8526                	mv	a0,s1$/;"	l
d8	echo.asm	/^  d8:	0505                	addi	a0,a0,1$/;"	l
d8	forktest.asm	/^  d8:	00000097          	auipc	ra,0x0$/;"	l
d8	grep.asm	/^  d8:	892a                	mv	s2,a0$/;"	l
d8	kill.asm	/^  d8:	e422                	sd	s0,8(sp)$/;"	l
d8	ln.asm	/^  d8:	ce09                	beqz	a2,f2 <memset+0x20>$/;"	l
d8	ls.asm	/^  d8:	4581                	li	a1,0$/;"	l
d8	mkdir.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	rm.asm	/^  d8:	0785                	addi	a5,a5,1$/;"	l
d8	stressfs.asm	/^  d8:	20000613          	li	a2,512$/;"	l
d8	wc.asm	/^  d8:	7c42                	ld	s8,48(sp)$/;"	l
d8	zombie.asm	/^  d8:	fbfd                	bnez	a5,ce <strchr+0xc>$/;"	l
d80	sh.asm	/^     d80:	0685                	addi	a3,a3,1$/;"	l
d80	usertests.asm	/^     d80:	00004097          	auipc	ra,0x4$/;"	l
d82	grind.asm	/^     d82:	9fa9                	addw	a5,a5,a0$/;"	l
d82	sh.asm	/^     d82:	96aa                	add	a3,a3,a0$/;"	l
d84	grind.asm	/^     d84:	0017979b          	slliw	a5,a5,0x1$/;"	l
d84	sh.asm	/^     d84:	00054783          	lbu	a5,0(a0)$/;"	l
d84	usertests.asm	/^     d84:	620080e7          	jalr	1568(ra) # 53a0 <close>$/;"	l
d88	grind.asm	/^     d88:	9fb1                	addw	a5,a5,a2$/;"	l
d88	sh.asm	/^     d88:	0005c703          	lbu	a4,0(a1)$/;"	l
d88	usertests.asm	/^     d88:	00005597          	auipc	a1,0x5$/;"	l
d8a	grind.asm	/^     d8a:	fd07851b          	addiw	a0,a5,-48$/;"	l
d8c	sh.asm	/^     d8c:	00e79863          	bne	a5,a4,d9c <memcmp+0x2c>$/;"	l
d8c	usertests.asm	/^     d8c:	3d858593          	addi	a1,a1,984 # 6160 <malloc+0x9b2>$/;"	l
d8e	grind.asm	/^     d8e:	0006c603          	lbu	a2,0(a3)$/;"	l
d90	sh.asm	/^     d90:	0505                	addi	a0,a0,1$/;"	l
d90	usertests.asm	/^     d90:	00005517          	auipc	a0,0x5$/;"	l
d92	grind.asm	/^     d92:	fd06071b          	addiw	a4,a2,-48$/;"	l
d92	sh.asm	/^     d92:	0585                	addi	a1,a1,1$/;"	l
d94	sh.asm	/^     d94:	fed518e3          	bne	a0,a3,d84 <memcmp+0x14>$/;"	l
d94	usertests.asm	/^     d94:	3c850513          	addi	a0,a0,968 # 6158 <malloc+0x9aa>$/;"	l
d96	grind.asm	/^     d96:	0ff77713          	andi	a4,a4,255$/;"	l
d98	sh.asm	/^     d98:	4501                	li	a0,0$/;"	l
d98	usertests.asm	/^     d98:	00004097          	auipc	ra,0x4$/;"	l
d9a	grind.asm	/^     d9a:	fee5f1e3          	bgeu	a1,a4,d7c <atoi+0x1e>$/;"	l
d9a	sh.asm	/^     d9a:	a019                	j	da0 <memcmp+0x30>$/;"	l
d9c	sh.asm	/^     d9c:	40e7853b          	subw	a0,a5,a4$/;"	l
d9c	usertests.asm	/^     d9c:	640080e7          	jalr	1600(ra) # 53d8 <link>$/;"	l
d9e	grind.asm	/^     d9e:	6422                	ld	s0,8(sp)$/;"	l
da	cat.asm	/^  da:	0921                	addi	s2,s2,8$/;"	l
da	echo.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	grep.asm	/^  da:	84ae                	mv	s1,a1$/;"	l
da	grind.asm	/^      da:	2c250513          	addi	a0,a0,706 # 1398 <malloc+0x104>$/;"	l
da	init.asm	/^  da:	2d0080e7          	jalr	720(ra) # 3a6 <exec>$/;"	l
da	kill.asm	/^  da:	0800                	addi	s0,sp,16$/;"	l
da	ln.asm	/^  da:	87aa                	mv	a5,a0$/;"	l
da	ls.asm	/^  da:	00000097          	auipc	ra,0x0$/;"	l
da	mkdir.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	rm.asm	/^  da:	fff7c703          	lbu	a4,-1(a5)$/;"	l
da	sh.asm	/^      da:	cf4080e7          	jalr	-780(ra) # dca <exit>$/;"	l
da	usertests.asm	/^      da:	60e2                	ld	ra,24(sp)$/;"	l
da	wc.asm	/^  da:	7ca2                	ld	s9,40(sp)$/;"	l
da	zombie.asm	/^  da:	4501                	li	a0,0$/;"	l
da0	grind.asm	/^     da0:	0141                	addi	sp,sp,16$/;"	l
da0	sh.asm	/^     da0:	6422                	ld	s0,8(sp)$/;"	l
da0	usertests.asm	/^     da0:	10054363          	bltz	a0,ea6 <linktest+0x188>$/;"	l
da2	grind.asm	/^     da2:	8082                	ret$/;"	l
da2	sh.asm	/^     da2:	0141                	addi	sp,sp,16$/;"	l
da4	grind.asm	/^     da4:	4501                	li	a0,0$/;"	l
da4	sh.asm	/^     da4:	8082                	ret$/;"	l
da4	usertests.asm	/^     da4:	00005517          	auipc	a0,0x5$/;"	l
da6	grind.asm	/^     da6:	bfe5                	j	d9e <atoi+0x40>$/;"	l
da6	sh.asm	/^     da6:	4501                	li	a0,0$/;"	l
da8	grind.asm	/^     da8:	1141                	addi	sp,sp,-16$/;"	l
da8	sh.asm	/^     da8:	bfe5                	j	da0 <memcmp+0x30>$/;"	l
da8	usertests.asm	/^     da8:	3b450513          	addi	a0,a0,948 # 6158 <malloc+0x9aa>$/;"	l
daa	grind.asm	/^     daa:	e422                	sd	s0,8(sp)$/;"	l
daa	sh.asm	/^     daa:	1141                	addi	sp,sp,-16$/;"	l
dac	grind.asm	/^     dac:	0800                	addi	s0,sp,16$/;"	l
dac	sh.asm	/^     dac:	e406                	sd	ra,8(sp)$/;"	l
dac	usertests.asm	/^     dac:	00004097          	auipc	ra,0x4$/;"	l
dae	grind.asm	/^     dae:	02b57663          	bgeu	a0,a1,dda <memmove+0x32>$/;"	l
dae	sh.asm	/^     dae:	e022                	sd	s0,0(sp)$/;"	l
db0	sh.asm	/^     db0:	0800                	addi	s0,sp,16$/;"	l
db0	usertests.asm	/^     db0:	61c080e7          	jalr	1564(ra) # 53c8 <unlink>$/;"	l
db2	grind.asm	/^     db2:	02c05163          	blez	a2,dd4 <memmove+0x2c>$/;"	l
db2	sh.asm	/^     db2:	00000097          	auipc	ra,0x0$/;"	l
db4	usertests.asm	/^     db4:	4581                	li	a1,0$/;"	l
db6	grind.asm	/^     db6:	fff6079b          	addiw	a5,a2,-1$/;"	l
db6	sh.asm	/^     db6:	f62080e7          	jalr	-158(ra) # d14 <memmove>$/;"	l
db6	usertests.asm	/^     db6:	00005517          	auipc	a0,0x5$/;"	l
dba	grind.asm	/^     dba:	1782                	slli	a5,a5,0x20$/;"	l
dba	sh.asm	/^     dba:	60a2                	ld	ra,8(sp)$/;"	l
dba	usertests.asm	/^     dba:	3a250513          	addi	a0,a0,930 # 6158 <malloc+0x9aa>$/;"	l
dbc	grind.asm	/^     dbc:	9381                	srli	a5,a5,0x20$/;"	l
dbc	sh.asm	/^     dbc:	6402                	ld	s0,0(sp)$/;"	l
dbe	grind.asm	/^     dbe:	0785                	addi	a5,a5,1$/;"	l
dbe	sh.asm	/^     dbe:	0141                	addi	sp,sp,16$/;"	l
dbe	usertests.asm	/^     dbe:	00004097          	auipc	ra,0x4$/;"	l
dc	cat.asm	/^  dc:	fd391ce3          	bne	s2,s3,b4 <main+0x2a>$/;"	l
dc	echo.asm	/^  dc:	4685                	li	a3,1$/;"	l
dc	forktest.asm	/^  dc:	f28080e7          	jalr	-216(ra) # 0 <print>$/;"	l
dc	grep.asm	/^  dc:	00054703          	lbu	a4,0(a0)$/;"	l
dc	kill.asm	/^  dc:	ce09                	beqz	a2,f6 <memset+0x20>$/;"	l
dc	ln.asm	/^  dc:	fff6071b          	addiw	a4,a2,-1$/;"	l
dc	stressfs.asm	/^  dc:	dd040593          	addi	a1,s0,-560$/;"	l
dc	usertests.asm	/^      dc:	6442                	ld	s0,16(sp)$/;"	l
dc	wc.asm	/^  dc:	7d02                	ld	s10,32(sp)$/;"	l
dc	zombie.asm	/^  dc:	6422                	ld	s0,8(sp)$/;"	l
dc0	grind.asm	/^     dc0:	97aa                	add	a5,a5,a0$/;"	l
dc0	sh.asm	/^     dc0:	8082                	ret$/;"	l
dc2	grind.asm	/^     dc2:	872a                	mv	a4,a0$/;"	l
dc2	sh.asm	/^     dc2:	4885                	li	a7,1$/;"	l
dc2	usertests.asm	/^     dc2:	5fa080e7          	jalr	1530(ra) # 53b8 <open>$/;"	l
dc4	grind.asm	/^     dc4:	0585                	addi	a1,a1,1$/;"	l
dc4	sh.asm	/^     dc4:	00000073          	ecall$/;"	l
dc6	grind.asm	/^     dc6:	0705                	addi	a4,a4,1$/;"	l
dc6	usertests.asm	/^     dc6:	0e055e63          	bgez	a0,ec2 <linktest+0x1a4>$/;"	l
dc8	grind.asm	/^     dc8:	fff5c683          	lbu	a3,-1(a1)$/;"	l
dc8	sh.asm	/^     dc8:	8082                	ret$/;"	l
dca	sh.asm	/^     dca:	4889                	li	a7,2$/;"	l
dca	usertests.asm	/^     dca:	4581                	li	a1,0$/;"	l
dcc	grind.asm	/^     dcc:	fed70fa3          	sb	a3,-1(a4)$/;"	l
dcc	sh.asm	/^     dcc:	00000073          	ecall$/;"	l
dcc	usertests.asm	/^     dcc:	00005517          	auipc	a0,0x5$/;"	l
dd0	grind.asm	/^     dd0:	fee79ae3          	bne	a5,a4,dc4 <memmove+0x1c>$/;"	l
dd0	sh.asm	/^     dd0:	8082                	ret$/;"	l
dd0	usertests.asm	/^     dd0:	39450513          	addi	a0,a0,916 # 6160 <malloc+0x9b2>$/;"	l
dd2	sh.asm	/^     dd2:	488d                	li	a7,3$/;"	l
dd4	grind.asm	/^     dd4:	6422                	ld	s0,8(sp)$/;"	l
dd4	sh.asm	/^     dd4:	00000073          	ecall$/;"	l
dd4	usertests.asm	/^     dd4:	00004097          	auipc	ra,0x4$/;"	l
dd6	grind.asm	/^     dd6:	0141                	addi	sp,sp,16$/;"	l
dd8	grind.asm	/^     dd8:	8082                	ret$/;"	l
dd8	sh.asm	/^     dd8:	8082                	ret$/;"	l
dd8	usertests.asm	/^     dd8:	5e4080e7          	jalr	1508(ra) # 53b8 <open>$/;"	l
dda	grind.asm	/^     dda:	00c50733          	add	a4,a0,a2$/;"	l
dda	sh.asm	/^     dda:	4891                	li	a7,4$/;"	l
ddc	sh.asm	/^     ddc:	00000073          	ecall$/;"	l
ddc	usertests.asm	/^     ddc:	84aa                	mv	s1,a0$/;"	l
dde	grind.asm	/^     dde:	95b2                	add	a1,a1,a2$/;"	l
dde	usertests.asm	/^     dde:	10054063          	bltz	a0,ede <linktest+0x1c0>$/;"	l
de	echo.asm	/^  de:	9e89                	subw	a3,a3,a0$/;"	l
de	grind.asm	/^      de:	00001097          	auipc	ra,0x1$/;"	l
de	init.asm	/^  de:	00000517          	auipc	a0,0x0$/;"	l
de	kill.asm	/^  de:	87aa                	mv	a5,a0$/;"	l
de	ls.asm	/^  de:	4b0080e7          	jalr	1200(ra) # 58a <open>$/;"	l
de	mkdir.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	rm.asm	/^  de:	fb7d                	bnez	a4,d4 <strlen+0x14>$/;"	l
de	sh.asm	/^      de:	00001517          	auipc	a0,0x1$/;"	l
de	usertests.asm	/^      de:	64a2                	ld	s1,8(sp)$/;"	l
de	wc.asm	/^  de:	6de2                	ld	s11,24(sp)$/;"	l
de	zombie.asm	/^  de:	0141                	addi	sp,sp,16$/;"	l
de0	grind.asm	/^     de0:	fec05ae3          	blez	a2,dd4 <memmove+0x2c>$/;"	l
de0	sh.asm	/^     de0:	8082                	ret$/;"	l
de2	sh.asm	/^     de2:	4895                	li	a7,5$/;"	l
de2	usertests.asm	/^     de2:	660d                	lui	a2,0x3$/;"	l
de4	grind.asm	/^     de4:	fff6079b          	addiw	a5,a2,-1$/;"	l
de4	sh.asm	/^     de4:	00000073          	ecall$/;"	l
de4	usertests.asm	/^     de4:	0000b597          	auipc	a1,0xb$/;"	l
de8	grind.asm	/^     de8:	1782                	slli	a5,a5,0x20$/;"	l
de8	sh.asm	/^     de8:	8082                	ret$/;"	l
de8	usertests.asm	/^     de8:	95458593          	addi	a1,a1,-1708 # b738 <buf>$/;"	l
dea	grind.asm	/^     dea:	9381                	srli	a5,a5,0x20$/;"	l
dea	sh.asm	/^     dea:	48c1                	li	a7,16$/;"	l
dec	grind.asm	/^     dec:	fff7c793          	not	a5,a5$/;"	l
dec	sh.asm	/^     dec:	00000073          	ecall$/;"	l
dec	usertests.asm	/^     dec:	00004097          	auipc	ra,0x4$/;"	l
df0	grind.asm	/^     df0:	97ba                	add	a5,a5,a4$/;"	l
df0	sh.asm	/^     df0:	8082                	ret$/;"	l
df0	usertests.asm	/^     df0:	5a4080e7          	jalr	1444(ra) # 5390 <read>$/;"	l
df2	grind.asm	/^     df2:	15fd                	addi	a1,a1,-1$/;"	l
df2	sh.asm	/^     df2:	48d5                	li	a7,21$/;"	l
df4	grind.asm	/^     df4:	177d                	addi	a4,a4,-1$/;"	l
df4	sh.asm	/^     df4:	00000073          	ecall$/;"	l
df4	usertests.asm	/^     df4:	4795                	li	a5,5$/;"	l
df6	grind.asm	/^     df6:	0005c683          	lbu	a3,0(a1)$/;"	l
df6	usertests.asm	/^     df6:	10f51263          	bne	a0,a5,efa <linktest+0x1dc>$/;"	l
df8	sh.asm	/^     df8:	8082                	ret$/;"	l
dfa	grind.asm	/^     dfa:	00d70023          	sb	a3,0(a4)$/;"	l
dfa	sh.asm	/^     dfa:	4899                	li	a7,6$/;"	l
dfa	usertests.asm	/^     dfa:	8526                	mv	a0,s1$/;"	l
dfc	sh.asm	/^     dfc:	00000073          	ecall$/;"	l
dfc	usertests.asm	/^     dfc:	00004097          	auipc	ra,0x4$/;"	l
dfe	grind.asm	/^     dfe:	fee79ae3          	bne	a5,a4,df2 <memmove+0x4a>$/;"	l
digits	printf.c	/^static char digits[] = "0123456789ABCDEF";$/;"	v	file:
dirfile	usertests.c	/^dirfile(char *s)$/;"	f
dirtest	usertests.c	/^void dirtest(char *s)$/;"	f
do_rand	grind.c	/^do_rand(unsigned long *ctx)$/;"	f
dst	cat.asm	/^  dst = vdst;$/;"	d
dst	echo.asm	/^  dst = vdst;$/;"	d
dst	forktest.asm	/^  dst = vdst;$/;"	d
dst	grep.asm	/^  dst = vdst;$/;"	d
dst	grind.asm	/^  dst = vdst;$/;"	d
dst	init.asm	/^  dst = vdst;$/;"	d
dst	kill.asm	/^  dst = vdst;$/;"	d
dst	ln.asm	/^  dst = vdst;$/;"	d
dst	ls.asm	/^  dst = vdst;$/;"	d
dst	mkdir.asm	/^  dst = vdst;$/;"	d
dst	rm.asm	/^  dst = vdst;$/;"	d
dst	sh.asm	/^  dst = vdst;$/;"	d
dst	stressfs.asm	/^  dst = vdst;$/;"	d
dst	usertests.asm	/^  dst = vdst;$/;"	d
dst	wc.asm	/^  dst = vdst;$/;"	d
dst	zombie.asm	/^  dst = vdst;$/;"	d
dup	cat.asm	/^dup:$/;"	l
dup	echo.asm	/^dup:$/;"	l
dup	forktest.asm	/^dup:$/;"	l
dup	grep.asm	/^dup:$/;"	l
dup	grind.asm	/^dup:$/;"	l
dup	init.asm	/^dup:$/;"	l
dup	kill.asm	/^dup:$/;"	l
dup	ln.asm	/^dup:$/;"	l
dup	ls.asm	/^dup:$/;"	l
dup	mkdir.asm	/^dup:$/;"	l
dup	rm.asm	/^dup:$/;"	l
dup	sh.asm	/^dup:$/;"	l
dup	stressfs.asm	/^dup:$/;"	l
dup	usertests.asm	/^dup:$/;"	l
dup	usys.S	/^dup:$/;"	l
dup	wc.asm	/^dup:$/;"	l
dup	zombie.asm	/^dup:$/;"	l
e	cat.asm	/^   e:	89aa                	mv	s3,a0$/;"	l
e	echo.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	grep.asm	/^   e:	1800                	addi	s0,sp,48$/;"	l
e	init.asm	/^   e:	00001517          	auipc	a0,0x1$/;"	l
e	kill.asm	/^   e:	02a7dd63          	bge	a5,a0,48 <main+0x48>$/;"	l
e	ls.asm	/^   e:	84aa                	mv	s1,a0$/;"	l
e	mkdir.asm	/^   e:	4785                	li	a5,1$/;"	l
e	rm.asm	/^   e:	4785                	li	a5,1$/;"	l
e	sh.asm	/^       e:	892e                	mv	s2,a1$/;"	l
e	usertests.asm	/^       e:	057e                	slli	a0,a0,0x1f$/;"	l
e	wc.asm	/^   e:	e4d6                	sd	s5,72(sp)$/;"	l
e0	cat.asm	/^  e0:	4501                	li	a0,0$/;"	l
e0	echo.asm	/^  e0:	00f6853b          	addw	a0,a3,a5$/;"	l
e0	forktest.asm	/^  e0:	4505                	li	a0,1$/;"	l
e0	grep.asm	/^  e0:	05e00793          	li	a5,94$/;"	l
e0	kill.asm	/^  e0:	fff6071b          	addiw	a4,a2,-1$/;"	l
e0	ln.asm	/^  e0:	1702                	slli	a4,a4,0x20$/;"	l
e0	mkdir.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	rm.asm	/^  e0:	6422                	ld	s0,8(sp)$/;"	l
e0	stressfs.asm	/^  e0:	854a                	mv	a0,s2$/;"	l
e0	usertests.asm	/^      e0:	6105                	addi	sp,sp,32$/;"	l
e0	wc.asm	/^  e0:	6109                	addi	sp,sp,128$/;"	l
e0	zombie.asm	/^  e0:	8082                	ret$/;"	l
e00	sh.asm	/^     e00:	8082                	ret$/;"	l
e00	usertests.asm	/^     e00:	5a4080e7          	jalr	1444(ra) # 53a0 <close>$/;"	l
e02	grind.asm	/^     e02:	bfc9                	j	dd4 <memmove+0x2c>$/;"	l
e02	sh.asm	/^     e02:	489d                	li	a7,7$/;"	l
e04	grind.asm	/^     e04:	1141                	addi	sp,sp,-16$/;"	l
e04	sh.asm	/^     e04:	00000073          	ecall$/;"	l
e04	usertests.asm	/^     e04:	00005597          	auipc	a1,0x5$/;"	l
e06	grind.asm	/^     e06:	e422                	sd	s0,8(sp)$/;"	l
e08	grind.asm	/^     e08:	0800                	addi	s0,sp,16$/;"	l
e08	sh.asm	/^     e08:	8082                	ret$/;"	l
e08	usertests.asm	/^     e08:	35c58593          	addi	a1,a1,860 # 6160 <malloc+0x9b2>$/;"	l
e0a	grind.asm	/^     e0a:	ca05                	beqz	a2,e3a <memcmp+0x36>$/;"	l
e0a	sh.asm	/^     e0a:	48bd                	li	a7,15$/;"	l
e0c	grind.asm	/^     e0c:	fff6069b          	addiw	a3,a2,-1$/;"	l
e0c	sh.asm	/^     e0c:	00000073          	ecall$/;"	l
e0c	usertests.asm	/^     e0c:	852e                	mv	a0,a1$/;"	l
e0e	usertests.asm	/^     e0e:	00004097          	auipc	ra,0x4$/;"	l
e10	grind.asm	/^     e10:	1682                	slli	a3,a3,0x20$/;"	l
e10	sh.asm	/^     e10:	8082                	ret$/;"	l
e12	grind.asm	/^     e12:	9281                	srli	a3,a3,0x20$/;"	l
e12	sh.asm	/^     e12:	48c5                	li	a7,17$/;"	l
e12	usertests.asm	/^     e12:	5ca080e7          	jalr	1482(ra) # 53d8 <link>$/;"	l
e14	grind.asm	/^     e14:	0685                	addi	a3,a3,1$/;"	l
e14	sh.asm	/^     e14:	00000073          	ecall$/;"	l
e16	grind.asm	/^     e16:	96aa                	add	a3,a3,a0$/;"	l
e16	usertests.asm	/^     e16:	10055063          	bgez	a0,f16 <linktest+0x1f8>$/;"	l
e18	grind.asm	/^     e18:	00054783          	lbu	a5,0(a0)$/;"	l
e18	sh.asm	/^     e18:	8082                	ret$/;"	l
e1a	sh.asm	/^     e1a:	48c9                	li	a7,18$/;"	l
e1a	usertests.asm	/^     e1a:	00005517          	auipc	a0,0x5$/;"	l
e1c	grind.asm	/^     e1c:	0005c703          	lbu	a4,0(a1)$/;"	l
e1c	sh.asm	/^     e1c:	00000073          	ecall$/;"	l
e1e	usertests.asm	/^     e1e:	34650513          	addi	a0,a0,838 # 6160 <malloc+0x9b2>$/;"	l
e2	cat.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	forktest.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	grind.asm	/^      e2:	df0080e7          	jalr	-528(ra) # ece <chdir>$/;"	l
e2	init.asm	/^  e2:	7ea50513          	addi	a0,a0,2026 # 8c8 <malloc+0x124>$/;"	l
e2	ln.asm	/^  e2:	9301                	srli	a4,a4,0x20$/;"	l
e2	ls.asm	/^  e2:	06054f63          	bltz	a0,160 <ls+0xac>$/;"	l
e2	mkdir.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	rm.asm	/^  e2:	0141                	addi	sp,sp,16$/;"	l
e2	sh.asm	/^      e2:	22250513          	addi	a0,a0,546 # 1300 <malloc+0x100>$/;"	l
e2	stressfs.asm	/^  e2:	00000097          	auipc	ra,0x0$/;"	l
e2	usertests.asm	/^      e2:	8082                	ret$/;"	l
e2	wc.asm	/^  e2:	8082                	ret$/;"	l
e2	zombie.asm	/^  e2:	4501                	li	a0,0$/;"	l
e20	grind.asm	/^     e20:	00e79863          	bne	a5,a4,e30 <memcmp+0x2c>$/;"	l
e20	sh.asm	/^     e20:	8082                	ret$/;"	l
e22	sh.asm	/^     e22:	48a1                	li	a7,8$/;"	l
e22	usertests.asm	/^     e22:	00004097          	auipc	ra,0x4$/;"	l
e24	grind.asm	/^     e24:	0505                	addi	a0,a0,1$/;"	l
e24	sh.asm	/^     e24:	00000073          	ecall$/;"	l
e26	grind.asm	/^     e26:	0585                	addi	a1,a1,1$/;"	l
e26	usertests.asm	/^     e26:	5a6080e7          	jalr	1446(ra) # 53c8 <unlink>$/;"	l
e28	grind.asm	/^     e28:	fed518e3          	bne	a0,a3,e18 <memcmp+0x14>$/;"	l
e28	sh.asm	/^     e28:	8082                	ret$/;"	l
e2a	sh.asm	/^     e2a:	48cd                	li	a7,19$/;"	l
e2a	usertests.asm	/^     e2a:	00005597          	auipc	a1,0x5$/;"	l
e2c	grind.asm	/^     e2c:	4501                	li	a0,0$/;"	l
e2c	sh.asm	/^     e2c:	00000073          	ecall$/;"	l
e2e	grind.asm	/^     e2e:	a019                	j	e34 <memcmp+0x30>$/;"	l
e2e	usertests.asm	/^     e2e:	32e58593          	addi	a1,a1,814 # 6158 <malloc+0x9aa>$/;"	l
e30	grind.asm	/^     e30:	40e7853b          	subw	a0,a5,a4$/;"	l
e30	sh.asm	/^     e30:	8082                	ret$/;"	l
e32	sh.asm	/^     e32:	48d1                	li	a7,20$/;"	l
e32	usertests.asm	/^     e32:	00005517          	auipc	a0,0x5$/;"	l
e34	grind.asm	/^     e34:	6422                	ld	s0,8(sp)$/;"	l
e34	sh.asm	/^     e34:	00000073          	ecall$/;"	l
e36	grind.asm	/^     e36:	0141                	addi	sp,sp,16$/;"	l
e36	usertests.asm	/^     e36:	32e50513          	addi	a0,a0,814 # 6160 <malloc+0x9b2>$/;"	l
e38	grind.asm	/^     e38:	8082                	ret$/;"	l
e38	sh.asm	/^     e38:	8082                	ret$/;"	l
e3a	grind.asm	/^     e3a:	4501                	li	a0,0$/;"	l
e3a	sh.asm	/^     e3a:	48a5                	li	a7,9$/;"	l
e3a	usertests.asm	/^     e3a:	00004097          	auipc	ra,0x4$/;"	l
e3c	grind.asm	/^     e3c:	bfe5                	j	e34 <memcmp+0x30>$/;"	l
e3c	sh.asm	/^     e3c:	00000073          	ecall$/;"	l
e3e	grind.asm	/^     e3e:	1141                	addi	sp,sp,-16$/;"	l
e3e	usertests.asm	/^     e3e:	59e080e7          	jalr	1438(ra) # 53d8 <link>$/;"	l
e4	echo.asm	/^  e4:	0785                	addi	a5,a5,1$/;"	l
e4	grep.asm	/^  e4:	00f70e63          	beq	a4,a5,100 <match+0x34>$/;"	l
e4	kill.asm	/^  e4:	1702                	slli	a4,a4,0x20$/;"	l
e4	ln.asm	/^  e4:	0705                	addi	a4,a4,1$/;"	l
e4	mkdir.asm	/^  e4:	8082                	ret$/;"	l
e4	rm.asm	/^  e4:	8082                	ret$/;"	l
e4	usertests.asm	/^      e4:	85a6                	mv	a1,s1$/;"	l
e4	wc.asm	/^  e4:	00001517          	auipc	a0,0x1$/;"	l
e4	zombie.asm	/^  e4:	bfe5                	j	dc <strchr+0x1a>$/;"	l
e40	grind.asm	/^     e40:	e406                	sd	ra,8(sp)$/;"	l
e40	sh.asm	/^     e40:	8082                	ret$/;"	l
e42	grind.asm	/^     e42:	e022                	sd	s0,0(sp)$/;"	l
e42	sh.asm	/^     e42:	48a9                	li	a7,10$/;"	l
e42	usertests.asm	/^     e42:	0e055863          	bgez	a0,f32 <linktest+0x214>$/;"	l
e44	grind.asm	/^     e44:	0800                	addi	s0,sp,16$/;"	l
e44	sh.asm	/^     e44:	00000073          	ecall$/;"	l
e46	grind.asm	/^     e46:	00000097          	auipc	ra,0x0$/;"	l
e46	usertests.asm	/^     e46:	00005597          	auipc	a1,0x5$/;"	l
e48	sh.asm	/^     e48:	8082                	ret$/;"	l
e4a	grind.asm	/^     e4a:	f62080e7          	jalr	-158(ra) # da8 <memmove>$/;"	l
e4a	sh.asm	/^     e4a:	48ad                	li	a7,11$/;"	l
e4a	usertests.asm	/^     e4a:	31258593          	addi	a1,a1,786 # 6158 <malloc+0x9aa>$/;"	l
e4c	sh.asm	/^     e4c:	00000073          	ecall$/;"	l
e4e	grind.asm	/^     e4e:	60a2                	ld	ra,8(sp)$/;"	l
e4e	usertests.asm	/^     e4e:	00005517          	auipc	a0,0x5$/;"	l
e50	grind.asm	/^     e50:	6402                	ld	s0,0(sp)$/;"	l
e50	sh.asm	/^     e50:	8082                	ret$/;"	l
e52	grind.asm	/^     e52:	0141                	addi	sp,sp,16$/;"	l
e52	sh.asm	/^     e52:	48b1                	li	a7,12$/;"	l
e52	usertests.asm	/^     e52:	41a50513          	addi	a0,a0,1050 # 6268 <malloc+0xaba>$/;"	l
e54	grind.asm	/^     e54:	8082                	ret$/;"	l
e54	sh.asm	/^     e54:	00000073          	ecall$/;"	l
e56	grind.asm	/^     e56:	4885                	li	a7,1$/;"	l
e56	usertests.asm	/^     e56:	00004097          	auipc	ra,0x4$/;"	l
e58	grind.asm	/^     e58:	00000073          	ecall$/;"	l
e58	sh.asm	/^     e58:	8082                	ret$/;"	l
e5a	sh.asm	/^     e5a:	48b5                	li	a7,13$/;"	l
e5a	usertests.asm	/^     e5a:	582080e7          	jalr	1410(ra) # 53d8 <link>$/;"	l
e5c	grind.asm	/^     e5c:	8082                	ret$/;"	l
e5c	sh.asm	/^     e5c:	00000073          	ecall$/;"	l
e5e	grind.asm	/^     e5e:	4889                	li	a7,2$/;"	l
e5e	usertests.asm	/^     e5e:	0e055863          	bgez	a0,f4e <linktest+0x230>$/;"	l
e6	cat.asm	/^  e6:	2b2080e7          	jalr	690(ra) # 394 <exit>$/;"	l
e6	echo.asm	/^  e6:	fff7c703          	lbu	a4,-1(a5)$/;"	l
e6	forktest.asm	/^  e6:	2b2080e7          	jalr	690(ra) # 394 <exit>$/;"	l
e6	grind.asm	/^      e6:	00001997          	auipc	s3,0x1$/;"	l
e6	init.asm	/^  e6:	00000097          	auipc	ra,0x0$/;"	l
e6	kill.asm	/^  e6:	9301                	srli	a4,a4,0x20$/;"	l
e6	ln.asm	/^  e6:	972a                	add	a4,a4,a0$/;"	l
e6	ls.asm	/^  e6:	84aa                	mv	s1,a0$/;"	l
e6	mkdir.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	rm.asm	/^  e6:	4501                	li	a0,0$/;"	l
e6	sh.asm	/^      e6:	00000097          	auipc	ra,0x0$/;"	l
e6	stressfs.asm	/^  e6:	2b8080e7          	jalr	696(ra) # 39a <read>$/;"	l
e6	usertests.asm	/^      e6:	00006517          	auipc	a0,0x6$/;"	l
e6	zombie.asm	/^  e6:	711d                	addi	sp,sp,-96$/;"	l
e60	grind.asm	/^     e60:	00000073          	ecall$/;"	l
e60	sh.asm	/^     e60:	8082                	ret$/;"	l
e62	sh.asm	/^     e62:	48b9                	li	a7,14$/;"	l
e62	usertests.asm	/^     e62:	60e2                	ld	ra,24(sp)$/;"	l
e64	grind.asm	/^     e64:	8082                	ret$/;"	l
e64	sh.asm	/^     e64:	00000073          	ecall$/;"	l
e64	usertests.asm	/^     e64:	6442                	ld	s0,16(sp)$/;"	l
e66	grind.asm	/^     e66:	488d                	li	a7,3$/;"	l
e66	usertests.asm	/^     e66:	64a2                	ld	s1,8(sp)$/;"	l
e68	grind.asm	/^     e68:	00000073          	ecall$/;"	l
e68	sh.asm	/^     e68:	8082                	ret$/;"	l
e68	usertests.asm	/^     e68:	6902                	ld	s2,0(sp)$/;"	l
e6a	sh.asm	/^     e6a:	1101                	addi	sp,sp,-32$/;"	l
e6a	usertests.asm	/^     e6a:	6105                	addi	sp,sp,32$/;"	l
e6c	grind.asm	/^     e6c:	8082                	ret$/;"	l
e6c	sh.asm	/^     e6c:	ec06                	sd	ra,24(sp)$/;"	l
e6c	usertests.asm	/^     e6c:	8082                	ret$/;"	l
e6e	grind.asm	/^     e6e:	4891                	li	a7,4$/;"	l
e6e	sh.asm	/^     e6e:	e822                	sd	s0,16(sp)$/;"	l
e6e	usertests.asm	/^     e6e:	85ca                	mv	a1,s2$/;"	l
e70	grind.asm	/^     e70:	00000073          	ecall$/;"	l
e70	sh.asm	/^     e70:	1000                	addi	s0,sp,32$/;"	l
e70	usertests.asm	/^     e70:	00005517          	auipc	a0,0x5$/;"	l
e72	sh.asm	/^     e72:	feb407a3          	sb	a1,-17(s0)$/;"	l
e74	grind.asm	/^     e74:	8082                	ret$/;"	l
e74	usertests.asm	/^     e74:	2f850513          	addi	a0,a0,760 # 6168 <malloc+0x9ba>$/;"	l
e76	grind.asm	/^     e76:	4895                	li	a7,5$/;"	l
e76	sh.asm	/^     e76:	4605                	li	a2,1$/;"	l
e78	grind.asm	/^     e78:	00000073          	ecall$/;"	l
e78	sh.asm	/^     e78:	fef40593          	addi	a1,s0,-17$/;"	l
e78	usertests.asm	/^     e78:	00005097          	auipc	ra,0x5$/;"	l
e7c	grind.asm	/^     e7c:	8082                	ret$/;"	l
e7c	sh.asm	/^     e7c:	00000097          	auipc	ra,0x0$/;"	l
e7c	usertests.asm	/^     e7c:	878080e7          	jalr	-1928(ra) # 56f0 <printf>$/;"	l
e7e	grind.asm	/^     e7e:	48c1                	li	a7,16$/;"	l
e8	grep.asm	/^  e8:	85a6                	mv	a1,s1$/;"	l
e8	kill.asm	/^  e8:	0705                	addi	a4,a4,1$/;"	l
e8	ln.asm	/^  e8:	00b78023          	sb	a1,0(a5)$/;"	l
e8	ls.asm	/^  e8:	d9840593          	addi	a1,s0,-616$/;"	l
e8	mkdir.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	rm.asm	/^  e8:	bfe5                	j	e0 <strlen+0x20>$/;"	l
e8	wc.asm	/^  e8:	84c50513          	addi	a0,a0,-1972 # 930 <malloc+0xee>$/;"	l
e8	zombie.asm	/^  e8:	ec86                	sd	ra,88(sp)$/;"	l
e80	grind.asm	/^     e80:	00000073          	ecall$/;"	l
e80	sh.asm	/^     e80:	f6e080e7          	jalr	-146(ra) # dea <write>$/;"	l
e80	usertests.asm	/^     e80:	4505                	li	a0,1$/;"	l
e82	usertests.asm	/^     e82:	00004097          	auipc	ra,0x4$/;"	l
e84	grind.asm	/^     e84:	8082                	ret$/;"	l
e84	sh.asm	/^     e84:	60e2                	ld	ra,24(sp)$/;"	l
e86	grind.asm	/^     e86:	48d5                	li	a7,21$/;"	l
e86	sh.asm	/^     e86:	6442                	ld	s0,16(sp)$/;"	l
e86	usertests.asm	/^     e86:	4f6080e7          	jalr	1270(ra) # 5378 <exit>$/;"	l
e88	grind.asm	/^     e88:	00000073          	ecall$/;"	l
e88	sh.asm	/^     e88:	6105                	addi	sp,sp,32$/;"	l
e8a	sh.asm	/^     e8a:	8082                	ret$/;"	l
e8a	usertests.asm	/^     e8a:	85ca                	mv	a1,s2$/;"	l
e8c	grind.asm	/^     e8c:	8082                	ret$/;"	l
e8c	sh.asm	/^     e8c:	7139                	addi	sp,sp,-64$/;"	l
e8c	usertests.asm	/^     e8c:	00005517          	auipc	a0,0x5$/;"	l
e8e	grind.asm	/^     e8e:	4899                	li	a7,6$/;"	l
e8e	sh.asm	/^     e8e:	fc06                	sd	ra,56(sp)$/;"	l
e90	grind.asm	/^     e90:	00000073          	ecall$/;"	l
e90	sh.asm	/^     e90:	f822                	sd	s0,48(sp)$/;"	l
e90	usertests.asm	/^     e90:	2f450513          	addi	a0,a0,756 # 6180 <malloc+0x9d2>$/;"	l
e92	sh.asm	/^     e92:	f426                	sd	s1,40(sp)$/;"	l
e94	grind.asm	/^     e94:	8082                	ret$/;"	l
e94	sh.asm	/^     e94:	f04a                	sd	s2,32(sp)$/;"	l
e94	usertests.asm	/^     e94:	00005097          	auipc	ra,0x5$/;"	l
e96	grind.asm	/^     e96:	489d                	li	a7,7$/;"	l
e96	sh.asm	/^     e96:	ec4e                	sd	s3,24(sp)$/;"	l
e98	grind.asm	/^     e98:	00000073          	ecall$/;"	l
e98	sh.asm	/^     e98:	0080                	addi	s0,sp,64$/;"	l
e98	usertests.asm	/^     e98:	85c080e7          	jalr	-1956(ra) # 56f0 <printf>$/;"	l
e9a	sh.asm	/^     e9a:	84aa                	mv	s1,a0$/;"	l
e9c	grind.asm	/^     e9c:	8082                	ret$/;"	l
e9c	sh.asm	/^     e9c:	c299                	beqz	a3,ea2 <printint+0x16>$/;"	l
e9c	usertests.asm	/^     e9c:	4505                	li	a0,1$/;"	l
e9e	grind.asm	/^     e9e:	48bd                	li	a7,15$/;"	l
e9e	sh.asm	/^     e9e:	0805c863          	bltz	a1,f2e <printint+0xa2>$/;"	l
e9e	usertests.asm	/^     e9e:	00004097          	auipc	ra,0x4$/;"	l
ea	cat.asm	/^  ea:	4501                	li	a0,0$/;"	l
ea	echo.asm	/^  ea:	fb7d                	bnez	a4,e0 <strlen+0x14>$/;"	l
ea	forktest.asm	/^  ea:	00000517          	auipc	a0,0x0$/;"	l
ea	grep.asm	/^  ea:	854a                	mv	a0,s2$/;"	l
ea	grind.asm	/^      ea:	2c298993          	addi	s3,s3,706 # 13a8 <malloc+0x114>$/;"	l
ea	init.asm	/^  ea:	600080e7          	jalr	1536(ra) # 6e6 <printf>$/;"	l
ea	kill.asm	/^  ea:	972a                	add	a4,a4,a0$/;"	l
ea	mkdir.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	rm.asm	/^  ea:	1141                	addi	sp,sp,-16$/;"	l
ea	sh.asm	/^      ea:	f6e080e7          	jalr	-146(ra) # 54 <panic>$/;"	l
ea	stressfs.asm	/^  ea:	34fd                	addiw	s1,s1,-1$/;"	l
ea	usertests.asm	/^      ea:	af250513          	addi	a0,a0,-1294 # 5bd8 <malloc+0x42a>$/;"	l
ea	zombie.asm	/^  ea:	e8a2                	sd	s0,80(sp)$/;"	l
ea0	grind.asm	/^     ea0:	00000073          	ecall$/;"	l
ea2	sh.asm	/^     ea2:	2581                	sext.w	a1,a1$/;"	l
ea2	usertests.asm	/^     ea2:	4da080e7          	jalr	1242(ra) # 5378 <exit>$/;"	l
ea4	grind.asm	/^     ea4:	8082                	ret$/;"	l
ea4	sh.asm	/^     ea4:	4881                	li	a7,0$/;"	l
ea6	grind.asm	/^     ea6:	48c5                	li	a7,17$/;"	l
ea6	sh.asm	/^     ea6:	fc040693          	addi	a3,s0,-64$/;"	l
ea6	usertests.asm	/^     ea6:	85ca                	mv	a1,s2$/;"	l
ea8	grind.asm	/^     ea8:	00000073          	ecall$/;"	l
ea8	usertests.asm	/^     ea8:	00005517          	auipc	a0,0x5$/;"	l
eaa	sh.asm	/^     eaa:	4701                	li	a4,0$/;"	l
eac	grind.asm	/^     eac:	8082                	ret$/;"	l
eac	sh.asm	/^     eac:	2601                	sext.w	a2,a2$/;"	l
eac	usertests.asm	/^     eac:	2f050513          	addi	a0,a0,752 # 6198 <malloc+0x9ea>$/;"	l
eae	grind.asm	/^     eae:	48c9                	li	a7,18$/;"	l
eae	sh.asm	/^     eae:	00000517          	auipc	a0,0x0$/;"	l
eargv	sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eb0	grind.asm	/^     eb0:	00000073          	ecall$/;"	l
eb0	usertests.asm	/^     eb0:	00005097          	auipc	ra,0x5$/;"	l
eb2	sh.asm	/^     eb2:	58250513          	addi	a0,a0,1410 # 1430 <digits>$/;"	l
eb4	grind.asm	/^     eb4:	8082                	ret$/;"	l
eb4	usertests.asm	/^     eb4:	840080e7          	jalr	-1984(ra) # 56f0 <printf>$/;"	l
eb6	grind.asm	/^     eb6:	48a1                	li	a7,8$/;"	l
eb6	sh.asm	/^     eb6:	883a                	mv	a6,a4$/;"	l
eb8	grind.asm	/^     eb8:	00000073          	ecall$/;"	l
eb8	sh.asm	/^     eb8:	2705                	addiw	a4,a4,1$/;"	l
eb8	usertests.asm	/^     eb8:	4505                	li	a0,1$/;"	l
eba	sh.asm	/^     eba:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
eba	usertests.asm	/^     eba:	00004097          	auipc	ra,0x4$/;"	l
ebc	grind.asm	/^     ebc:	8082                	ret$/;"	l
ebe	grind.asm	/^     ebe:	48cd                	li	a7,19$/;"	l
ebe	sh.asm	/^     ebe:	1782                	slli	a5,a5,0x20$/;"	l
ebe	usertests.asm	/^     ebe:	4be080e7          	jalr	1214(ra) # 5378 <exit>$/;"	l
ec	cat.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	echo.asm	/^  ec:	6422                	ld	s0,8(sp)$/;"	l
ec	grep.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	kill.asm	/^  ec:	00b78023          	sb	a1,0(a5)$/;"	l
ec	ln.asm	/^  ec:	0785                	addi	a5,a5,1$/;"	l
ec	ls.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	mkdir.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	rm.asm	/^  ec:	e422                	sd	s0,8(sp)$/;"	l
ec	stressfs.asm	/^  ec:	f4f5                	bnez	s1,d8 <main+0xd8>$/;"	l
ec	wc.asm	/^  ec:	00000097          	auipc	ra,0x0$/;"	l
ec	zombie.asm	/^  ec:	e4a6                	sd	s1,72(sp)$/;"	l
ec0	grind.asm	/^     ec0:	00000073          	ecall$/;"	l
ec0	sh.asm	/^     ec0:	9381                	srli	a5,a5,0x20$/;"	l
ec2	sh.asm	/^     ec2:	97aa                	add	a5,a5,a0$/;"	l
ec2	usertests.asm	/^     ec2:	85ca                	mv	a1,s2$/;"	l
ec4	grind.asm	/^     ec4:	8082                	ret$/;"	l
ec4	sh.asm	/^     ec4:	0007c783          	lbu	a5,0(a5)$/;"	l
ec4	usertests.asm	/^     ec4:	00005517          	auipc	a0,0x5$/;"	l
ec6	grind.asm	/^     ec6:	48d1                	li	a7,20$/;"	l
ec8	grind.asm	/^     ec8:	00000073          	ecall$/;"	l
ec8	sh.asm	/^     ec8:	00f68023          	sb	a5,0(a3)$/;"	l
ec8	usertests.asm	/^     ec8:	2f450513          	addi	a0,a0,756 # 61b8 <malloc+0xa0a>$/;"	l
ecc	grind.asm	/^     ecc:	8082                	ret$/;"	l
ecc	sh.asm	/^     ecc:	0005879b          	sext.w	a5,a1$/;"	l
ecc	usertests.asm	/^     ecc:	00005097          	auipc	ra,0x5$/;"	l
ece	grind.asm	/^     ece:	48a5                	li	a7,9$/;"	l
ecmd	sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ed0	grind.asm	/^     ed0:	00000073          	ecall$/;"	l
ed0	sh.asm	/^     ed0:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
ed0	usertests.asm	/^     ed0:	824080e7          	jalr	-2012(ra) # 56f0 <printf>$/;"	l
ed4	grind.asm	/^     ed4:	8082                	ret$/;"	l
ed4	sh.asm	/^     ed4:	0685                	addi	a3,a3,1$/;"	l
ed4	usertests.asm	/^     ed4:	4505                	li	a0,1$/;"	l
ed6	grind.asm	/^     ed6:	48a9                	li	a7,10$/;"	l
ed6	sh.asm	/^     ed6:	fec7f0e3          	bgeu	a5,a2,eb6 <printint+0x2a>$/;"	l
ed6	usertests.asm	/^     ed6:	00004097          	auipc	ra,0x4$/;"	l
ed8	grind.asm	/^     ed8:	00000073          	ecall$/;"	l
eda	sh.asm	/^     eda:	00088b63          	beqz	a7,ef0 <printint+0x64>$/;"	l
eda	usertests.asm	/^     eda:	4a2080e7          	jalr	1186(ra) # 5378 <exit>$/;"	l
edc	grind.asm	/^     edc:	8082                	ret$/;"	l
ede	grind.asm	/^     ede:	48ad                	li	a7,11$/;"	l
ede	sh.asm	/^     ede:	fd040793          	addi	a5,s0,-48$/;"	l
ede	usertests.asm	/^     ede:	85ca                	mv	a1,s2$/;"	l
ee	echo.asm	/^  ee:	0141                	addi	sp,sp,16$/;"	l
ee	forktest.asm	/^  ee:	39650513          	addi	a0,a0,918 # 480 <uptime+0x54>$/;"	l
ee	grind.asm	/^      ee:	c489                	beqz	s1,f8 <go+0x80>$/;"	l
ee	init.asm	/^  ee:	4505                	li	a0,1$/;"	l
ee	ln.asm	/^  ee:	fee79de3          	bne	a5,a4,e8 <memset+0x16>$/;"	l
ee	mkdir.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	rm.asm	/^  ee:	0800                	addi	s0,sp,16$/;"	l
ee	sh.asm	/^      ee:	6508                	ld	a0,8(a0)$/;"	l
ee	stressfs.asm	/^  ee:	854a                	mv	a0,s2$/;"	l
ee	usertests.asm	/^      ee:	00005097          	auipc	ra,0x5$/;"	l
ee	zombie.asm	/^  ee:	e0ca                	sd	s2,64(sp)$/;"	l
ee0	grind.asm	/^     ee0:	00000073          	ecall$/;"	l
ee0	usertests.asm	/^     ee0:	00005517          	auipc	a0,0x5$/;"	l
ee2	sh.asm	/^     ee2:	973e                	add	a4,a4,a5$/;"	l
ee4	grind.asm	/^     ee4:	8082                	ret$/;"	l
ee4	sh.asm	/^     ee4:	02d00793          	li	a5,45$/;"	l
ee4	usertests.asm	/^     ee4:	30850513          	addi	a0,a0,776 # 61e8 <malloc+0xa3a>$/;"	l
ee6	grind.asm	/^     ee6:	48b1                	li	a7,12$/;"	l
ee8	grind.asm	/^     ee8:	00000073          	ecall$/;"	l
ee8	sh.asm	/^     ee8:	fef70823          	sb	a5,-16(a4)$/;"	l
ee8	usertests.asm	/^     ee8:	00005097          	auipc	ra,0x5$/;"	l
eec	grind.asm	/^     eec:	8082                	ret$/;"	l
eec	sh.asm	/^     eec:	0028071b          	addiw	a4,a6,2$/;"	l
eec	usertests.asm	/^     eec:	808080e7          	jalr	-2040(ra) # 56f0 <printf>$/;"	l
eee	grind.asm	/^     eee:	48b5                	li	a7,13$/;"	l
ef0	grind.asm	/^     ef0:	00000073          	ecall$/;"	l
ef0	sh.asm	/^     ef0:	02e05863          	blez	a4,f20 <printint+0x94>$/;"	l
ef0	usertests.asm	/^     ef0:	4505                	li	a0,1$/;"	l
ef2	usertests.asm	/^     ef2:	00004097          	auipc	ra,0x4$/;"	l
ef4	grind.asm	/^     ef4:	8082                	ret$/;"	l
ef4	sh.asm	/^     ef4:	fc040793          	addi	a5,s0,-64$/;"	l
ef6	grind.asm	/^     ef6:	48b9                	li	a7,14$/;"	l
ef6	usertests.asm	/^     ef6:	486080e7          	jalr	1158(ra) # 5378 <exit>$/;"	l
ef8	grind.asm	/^     ef8:	00000073          	ecall$/;"	l
ef8	sh.asm	/^     ef8:	00e78933          	add	s2,a5,a4$/;"	l
efa	usertests.asm	/^     efa:	85ca                	mv	a1,s2$/;"	l
efc	grind.asm	/^     efc:	8082                	ret$/;"	l
efc	sh.asm	/^     efc:	fff78993          	addi	s3,a5,-1$/;"	l
efc	usertests.asm	/^     efc:	00005517          	auipc	a0,0x5$/;"	l
efe	grind.asm	/^     efe:	1101                	addi	sp,sp,-32$/;"	l
efile	sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
entry	usys.pl	/^sub entry {$/;"	s
es	sh.asm	/^  es = s + strlen(s);$/;"	d
exec	cat.asm	/^exec:$/;"	l
exec	echo.asm	/^exec:$/;"	l
exec	forktest.asm	/^exec:$/;"	l
exec	grep.asm	/^exec:$/;"	l
exec	grind.asm	/^exec:$/;"	l
exec	init.asm	/^exec:$/;"	l
exec	kill.asm	/^exec:$/;"	l
exec	ln.asm	/^exec:$/;"	l
exec	ls.asm	/^exec:$/;"	l
exec	mkdir.asm	/^exec:$/;"	l
exec	rm.asm	/^exec:$/;"	l
exec	sh.asm	/^exec:$/;"	l
exec	stressfs.asm	/^exec:$/;"	l
exec	usertests.asm	/^exec:$/;"	l
exec	usys.S	/^exec:$/;"	l
exec	wc.asm	/^exec:$/;"	l
exec	zombie.asm	/^exec:$/;"	l
execcmd	sh.c	/^execcmd(void)$/;"	f
execcmd	sh.c	/^struct execcmd {$/;"	s	file:
execout	usertests.c	/^execout(char *s)$/;"	f
exectest	usertests.c	/^exectest(char *s)$/;"	f
exit	cat.asm	/^exit:$/;"	l
exit	echo.asm	/^exit:$/;"	l
exit	forktest.asm	/^exit:$/;"	l
exit	grep.asm	/^exit:$/;"	l
exit	grind.asm	/^exit:$/;"	l
exit	init.asm	/^exit:$/;"	l
exit	initcode.S	/^exit:$/;"	l
exit	initcode.asm	/^exit:$/;"	l
exit	kill.asm	/^exit:$/;"	l
exit	ln.asm	/^exit:$/;"	l
exit	ls.asm	/^exit:$/;"	l
exit	mkdir.asm	/^exit:$/;"	l
exit	rm.asm	/^exit:$/;"	l
exit	sh.asm	/^exit:$/;"	l
exit	stressfs.asm	/^exit:$/;"	l
exit	usertests.asm	/^exit:$/;"	l
exit	usys.S	/^exit:$/;"	l
exit	wc.asm	/^exit:$/;"	l
exit	zombie.asm	/^exit:$/;"	l
exitiputtest	usertests.c	/^exitiputtest(char *s)$/;"	f
exitwait	usertests.c	/^exitwait(char *s)$/;"	f
f0	cat.asm	/^  f0:	f14080e7          	jalr	-236(ra) # 0 <cat>$/;"	l
f0	echo.asm	/^  f0:	8082                	ret$/;"	l
f0	grep.asm	/^  f0:	f62080e7          	jalr	-158(ra) # 4e <matchhere>$/;"	l
f0	grind.asm	/^      f0:	00001997          	auipc	s3,0x1$/;"	l
f0	init.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	kill.asm	/^  f0:	0785                	addi	a5,a5,1$/;"	l
f0	ls.asm	/^  f0:	4b6080e7          	jalr	1206(ra) # 5a2 <fstat>$/;"	l
f0	mkdir.asm	/^  f0:	ce09                	beqz	a2,10a <memset+0x20>$/;"	l
f0	rm.asm	/^  f0:	ce09                	beqz	a2,10a <memset+0x20>$/;"	l
f0	sh.asm	/^      f0:	c515                	beqz	a0,11c <runcmd+0x74>$/;"	l
f0	stressfs.asm	/^  f0:	00000097          	auipc	ra,0x0$/;"	l
f0	wc.asm	/^  f0:	698080e7          	jalr	1688(ra) # 784 <printf>$/;"	l
f0	zombie.asm	/^  f0:	fc4e                	sd	s3,56(sp)$/;"	l
f00	grind.asm	/^     f00:	ec06                	sd	ra,24(sp)$/;"	l
f00	sh.asm	/^     f00:	99ba                	add	s3,s3,a4$/;"	l
f00	usertests.asm	/^     f00:	30450513          	addi	a0,a0,772 # 6200 <malloc+0xa52>$/;"	l
f02	grind.asm	/^     f02:	e822                	sd	s0,16(sp)$/;"	l
f02	sh.asm	/^     f02:	377d                	addiw	a4,a4,-1$/;"	l
f04	grind.asm	/^     f04:	1000                	addi	s0,sp,32$/;"	l
f04	sh.asm	/^     f04:	1702                	slli	a4,a4,0x20$/;"	l
f04	usertests.asm	/^     f04:	00004097          	auipc	ra,0x4$/;"	l
f06	grind.asm	/^     f06:	feb407a3          	sb	a1,-17(s0)$/;"	l
f06	sh.asm	/^     f06:	9301                	srli	a4,a4,0x20$/;"	l
f08	sh.asm	/^     f08:	40e989b3          	sub	s3,s3,a4$/;"	l
f08	usertests.asm	/^     f08:	7ec080e7          	jalr	2028(ra) # 56f0 <printf>$/;"	l
f0a	grind.asm	/^     f0a:	4605                	li	a2,1$/;"	l
f0c	grind.asm	/^     f0c:	fef40593          	addi	a1,s0,-17$/;"	l
f0c	sh.asm	/^     f0c:	fff94583          	lbu	a1,-1(s2)$/;"	l
f0c	usertests.asm	/^     f0c:	4505                	li	a0,1$/;"	l
f0e	usertests.asm	/^     f0e:	00004097          	auipc	ra,0x4$/;"	l
f10	grind.asm	/^     f10:	00000097          	auipc	ra,0x0$/;"	l
f10	sh.asm	/^     f10:	8526                	mv	a0,s1$/;"	l
f12	sh.asm	/^     f12:	00000097          	auipc	ra,0x0$/;"	l
f12	usertests.asm	/^     f12:	46a080e7          	jalr	1130(ra) # 5378 <exit>$/;"	l
f14	grind.asm	/^     f14:	f6e080e7          	jalr	-146(ra) # e7e <write>$/;"	l
f16	sh.asm	/^     f16:	f58080e7          	jalr	-168(ra) # e6a <putc>$/;"	l
f16	usertests.asm	/^     f16:	85ca                	mv	a1,s2$/;"	l
f18	grind.asm	/^     f18:	60e2                	ld	ra,24(sp)$/;"	l
f18	usertests.asm	/^     f18:	00005517          	auipc	a0,0x5$/;"	l
f1a	grind.asm	/^     f1a:	6442                	ld	s0,16(sp)$/;"	l
f1a	sh.asm	/^     f1a:	197d                	addi	s2,s2,-1$/;"	l
f1c	grind.asm	/^     f1c:	6105                	addi	sp,sp,32$/;"	l
f1c	sh.asm	/^     f1c:	ff3918e3          	bne	s2,s3,f0c <printint+0x80>$/;"	l
f1c	usertests.asm	/^     f1c:	30050513          	addi	a0,a0,768 # 6218 <malloc+0xa6a>$/;"	l
f1e	grind.asm	/^     f1e:	8082                	ret$/;"	l
f2	echo.asm	/^  f2:	4501                	li	a0,0$/;"	l
f2	forktest.asm	/^  f2:	00000097          	auipc	ra,0x0$/;"	l
f2	kill.asm	/^  f2:	fee79de3          	bne	a5,a4,ec <memset+0x16>$/;"	l
f2	ln.asm	/^  f2:	6422                	ld	s0,8(sp)$/;"	l
f2	mkdir.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	rm.asm	/^  f2:	87aa                	mv	a5,a0$/;"	l
f2	sh.asm	/^      f2:	00848593          	addi	a1,s1,8$/;"	l
f2	usertests.asm	/^      f2:	602080e7          	jalr	1538(ra) # 56f0 <printf>$/;"	l
f2	zombie.asm	/^  f2:	f852                	sd	s4,48(sp)$/;"	l
f20	grind.asm	/^     f20:	7139                	addi	sp,sp,-64$/;"	l
f20	sh.asm	/^     f20:	70e2                	ld	ra,56(sp)$/;"	l
f20	usertests.asm	/^     f20:	00004097          	auipc	ra,0x4$/;"	l
f22	grind.asm	/^     f22:	fc06                	sd	ra,56(sp)$/;"	l
f22	sh.asm	/^     f22:	7442                	ld	s0,48(sp)$/;"	l
f24	grind.asm	/^     f24:	f822                	sd	s0,48(sp)$/;"	l
f24	sh.asm	/^     f24:	74a2                	ld	s1,40(sp)$/;"	l
f24	usertests.asm	/^     f24:	7d0080e7          	jalr	2000(ra) # 56f0 <printf>$/;"	l
f26	grind.asm	/^     f26:	f426                	sd	s1,40(sp)$/;"	l
f26	sh.asm	/^     f26:	7902                	ld	s2,32(sp)$/;"	l
f28	grind.asm	/^     f28:	f04a                	sd	s2,32(sp)$/;"	l
f28	sh.asm	/^     f28:	69e2                	ld	s3,24(sp)$/;"	l
f28	usertests.asm	/^     f28:	4505                	li	a0,1$/;"	l
f2a	grind.asm	/^     f2a:	ec4e                	sd	s3,24(sp)$/;"	l
f2a	sh.asm	/^     f2a:	6121                	addi	sp,sp,64$/;"	l
f2a	usertests.asm	/^     f2a:	00004097          	auipc	ra,0x4$/;"	l
f2c	grind.asm	/^     f2c:	0080                	addi	s0,sp,64$/;"	l
f2c	sh.asm	/^     f2c:	8082                	ret$/;"	l
f2e	grind.asm	/^     f2e:	84aa                	mv	s1,a0$/;"	l
f2e	sh.asm	/^     f2e:	40b005bb          	negw	a1,a1$/;"	l
f2e	usertests.asm	/^     f2e:	44e080e7          	jalr	1102(ra) # 5378 <exit>$/;"	l
f30	grind.asm	/^     f30:	c299                	beqz	a3,f36 <printint+0x16>$/;"	l
f32	grind.asm	/^     f32:	0805c863          	bltz	a1,fc2 <printint+0xa2>$/;"	l
f32	sh.asm	/^     f32:	4885                	li	a7,1$/;"	l
f32	usertests.asm	/^     f32:	85ca                	mv	a1,s2$/;"	l
f34	sh.asm	/^     f34:	bf8d                	j	ea6 <printint+0x1a>$/;"	l
f34	usertests.asm	/^     f34:	00005517          	auipc	a0,0x5$/;"	l
f36	grind.asm	/^     f36:	2581                	sext.w	a1,a1$/;"	l
f36	sh.asm	/^     f36:	7119                	addi	sp,sp,-128$/;"	l
f38	grind.asm	/^     f38:	4881                	li	a7,0$/;"	l
f38	sh.asm	/^     f38:	fc86                	sd	ra,120(sp)$/;"	l
f38	usertests.asm	/^     f38:	30c50513          	addi	a0,a0,780 # 6240 <malloc+0xa92>$/;"	l
f3a	grind.asm	/^     f3a:	fc040693          	addi	a3,s0,-64$/;"	l
f3a	sh.asm	/^     f3a:	f8a2                	sd	s0,112(sp)$/;"	l
f3c	sh.asm	/^     f3c:	f4a6                	sd	s1,104(sp)$/;"	l
f3c	usertests.asm	/^     f3c:	00004097          	auipc	ra,0x4$/;"	l
f3e	grind.asm	/^     f3e:	4701                	li	a4,0$/;"	l
f3e	sh.asm	/^     f3e:	f0ca                	sd	s2,96(sp)$/;"	l
f4	cat.asm	/^  f4:	4501                	li	a0,0$/;"	l
f4	echo.asm	/^  f4:	bfe5                	j	ec <strlen+0x20>$/;"	l
f4	grep.asm	/^  f4:	ed01                	bnez	a0,10c <match+0x40>$/;"	l
f4	grind.asm	/^      f4:	2b098993          	addi	s3,s3,688 # 13a0 <malloc+0x10c>$/;"	l
f4	init.asm	/^  f4:	27e080e7          	jalr	638(ra) # 36e <exit>$/;"	l
f4	ln.asm	/^  f4:	0141                	addi	sp,sp,16$/;"	l
f4	ls.asm	/^  f4:	08054163          	bltz	a0,176 <ls+0xc2>$/;"	l
f4	mkdir.asm	/^  f4:	fff6071b          	addiw	a4,a2,-1$/;"	l
f4	rm.asm	/^  f4:	fff6071b          	addiw	a4,a2,-1$/;"	l
f4	stressfs.asm	/^  f4:	2ba080e7          	jalr	698(ra) # 3aa <close>$/;"	l
f4	wc.asm	/^  f4:	4505                	li	a0,1$/;"	l
f4	zombie.asm	/^  f4:	f456                	sd	s5,40(sp)$/;"	l
f40	grind.asm	/^     f40:	2601                	sext.w	a2,a2$/;"	l
f40	sh.asm	/^     f40:	ecce                	sd	s3,88(sp)$/;"	l
f40	usertests.asm	/^     f40:	7b4080e7          	jalr	1972(ra) # 56f0 <printf>$/;"	l
f42	grind.asm	/^     f42:	00000517          	auipc	a0,0x0$/;"	l
f42	sh.asm	/^     f42:	e8d2                	sd	s4,80(sp)$/;"	l
f44	sh.asm	/^     f44:	e4d6                	sd	s5,72(sp)$/;"	l
f44	usertests.asm	/^     f44:	4505                	li	a0,1$/;"	l
f46	grind.asm	/^     f46:	70650513          	addi	a0,a0,1798 # 1648 <digits>$/;"	l
f46	sh.asm	/^     f46:	e0da                	sd	s6,64(sp)$/;"	l
f46	usertests.asm	/^     f46:	00004097          	auipc	ra,0x4$/;"	l
f48	sh.asm	/^     f48:	fc5e                	sd	s7,56(sp)$/;"	l
f4a	grind.asm	/^     f4a:	883a                	mv	a6,a4$/;"	l
f4a	sh.asm	/^     f4a:	f862                	sd	s8,48(sp)$/;"	l
f4a	usertests.asm	/^     f4a:	432080e7          	jalr	1074(ra) # 5378 <exit>$/;"	l
f4c	grind.asm	/^     f4c:	2705                	addiw	a4,a4,1$/;"	l
f4c	sh.asm	/^     f4c:	f466                	sd	s9,40(sp)$/;"	l
f4e	grind.asm	/^     f4e:	02c5f7bb          	remuw	a5,a1,a2$/;"	l
f4e	sh.asm	/^     f4e:	f06a                	sd	s10,32(sp)$/;"	l
f4e	usertests.asm	/^     f4e:	85ca                	mv	a1,s2$/;"	l
f50	sh.asm	/^     f50:	ec6e                	sd	s11,24(sp)$/;"	l
f50	usertests.asm	/^     f50:	00005517          	auipc	a0,0x5$/;"	l
f52	grind.asm	/^     f52:	1782                	slli	a5,a5,0x20$/;"	l
f52	sh.asm	/^     f52:	0100                	addi	s0,sp,128$/;"	l
f54	grind.asm	/^     f54:	9381                	srli	a5,a5,0x20$/;"	l
f54	sh.asm	/^     f54:	0005c903          	lbu	s2,0(a1)$/;"	l
f54	usertests.asm	/^     f54:	32050513          	addi	a0,a0,800 # 6270 <malloc+0xac2>$/;"	l
f56	grind.asm	/^     f56:	97aa                	add	a5,a5,a0$/;"	l
f58	grind.asm	/^     f58:	0007c783          	lbu	a5,0(a5)$/;"	l
f58	sh.asm	/^     f58:	18090f63          	beqz	s2,10f6 <vprintf+0x1c0>$/;"	l
f58	usertests.asm	/^     f58:	00004097          	auipc	ra,0x4$/;"	l
f5c	grind.asm	/^     f5c:	00f68023          	sb	a5,0(a3)$/;"	l
f5c	sh.asm	/^     f5c:	8aaa                	mv	s5,a0$/;"	l
f5c	usertests.asm	/^     f5c:	798080e7          	jalr	1944(ra) # 56f0 <printf>$/;"	l
f5e	sh.asm	/^     f5e:	8b32                	mv	s6,a2$/;"	l
f6	cat.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	echo.asm	/^  f6:	1141                	addi	sp,sp,-16$/;"	l
f6	forktest.asm	/^  f6:	f0e080e7          	jalr	-242(ra) # 0 <print>$/;"	l
f6	grep.asm	/^  f6:	0485                	addi	s1,s1,1$/;"	l
f6	kill.asm	/^  f6:	6422                	ld	s0,8(sp)$/;"	l
f6	ln.asm	/^  f6:	8082                	ret$/;"	l
f6	sh.asm	/^      f6:	00001097          	auipc	ra,0x1$/;"	l
f6	usertests.asm	/^      f6:	4505                	li	a0,1$/;"	l
f6	wc.asm	/^  f6:	00000097          	auipc	ra,0x0$/;"	l
f6	zombie.asm	/^  f6:	f05a                	sd	s6,32(sp)$/;"	l
f60	grind.asm	/^     f60:	0005879b          	sext.w	a5,a1$/;"	l
f60	sh.asm	/^     f60:	00158493          	addi	s1,a1,1$/;"	l
f60	usertests.asm	/^     f60:	4505                	li	a0,1$/;"	l
f62	usertests.asm	/^     f62:	00004097          	auipc	ra,0x4$/;"	l
f64	grind.asm	/^     f64:	02c5d5bb          	divuw	a1,a1,a2$/;"	l
f64	sh.asm	/^     f64:	4981                	li	s3,0$/;"	l
f66	sh.asm	/^     f66:	02500a13          	li	s4,37$/;"	l
f66	usertests.asm	/^     f66:	416080e7          	jalr	1046(ra) # 5378 <exit>$/;"	l
f68	grind.asm	/^     f68:	0685                	addi	a3,a3,1$/;"	l
f6a	grind.asm	/^     f6a:	fec7f0e3          	bgeu	a5,a2,f4a <printint+0x2a>$/;"	l
f6a	sh.asm	/^     f6a:	06400c13          	li	s8,100$/;"	l
f6a	usertests.asm	/^     f6a:	715d                	addi	sp,sp,-80$/;"	l
f6c	usertests.asm	/^     f6c:	e486                	sd	ra,72(sp)$/;"	l
f6e	grind.asm	/^     f6e:	00088b63          	beqz	a7,f84 <printint+0x64>$/;"	l
f6e	sh.asm	/^     f6e:	06c00c93          	li	s9,108$/;"	l
f6e	usertests.asm	/^     f6e:	e0a2                	sd	s0,64(sp)$/;"	l
f70	usertests.asm	/^     f70:	fc26                	sd	s1,56(sp)$/;"	l
f72	grind.asm	/^     f72:	fd040793          	addi	a5,s0,-48$/;"	l
f72	sh.asm	/^     f72:	07800d13          	li	s10,120$/;"	l
f72	usertests.asm	/^     f72:	f84a                	sd	s2,48(sp)$/;"	l
f74	usertests.asm	/^     f74:	f44e                	sd	s3,40(sp)$/;"	l
f76	grind.asm	/^     f76:	973e                	add	a4,a4,a5$/;"	l
f76	sh.asm	/^     f76:	07000d93          	li	s11,112$/;"	l
f76	usertests.asm	/^     f76:	f052                	sd	s4,32(sp)$/;"	l
f78	grind.asm	/^     f78:	02d00793          	li	a5,45$/;"	l
f78	usertests.asm	/^     f78:	ec56                	sd	s5,24(sp)$/;"	l
f7a	sh.asm	/^     f7a:	00000b97          	auipc	s7,0x0$/;"	l
f7a	usertests.asm	/^     f7a:	e85a                	sd	s6,16(sp)$/;"	l
f7c	grind.asm	/^     f7c:	fef70823          	sb	a5,-16(a4)$/;"	l
f7c	usertests.asm	/^     f7c:	0880                	addi	s0,sp,80$/;"	l
f7e	sh.asm	/^     f7e:	4b6b8b93          	addi	s7,s7,1206 # 1430 <digits>$/;"	l
f7e	usertests.asm	/^     f7e:	89aa                	mv	s3,a0$/;"	l
f8	echo.asm	/^  f8:	e422                	sd	s0,8(sp)$/;"	l
f8	grep.asm	/^  f8:	fff4c783          	lbu	a5,-1(s1)$/;"	l
f8	grind.asm	/^      f8:	4485                	li	s1,1$/;"	l
f8	init.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	kill.asm	/^  f8:	0141                	addi	sp,sp,16$/;"	l
f8	ln.asm	/^  f8:	1141                	addi	sp,sp,-16$/;"	l
f8	ls.asm	/^  f8:	da041783          	lh	a5,-608(s0)$/;"	l
f8	mkdir.asm	/^  f8:	1702                	slli	a4,a4,0x20$/;"	l
f8	rm.asm	/^  f8:	1702                	slli	a4,a4,0x20$/;"	l
f8	stressfs.asm	/^  f8:	4501                	li	a0,0$/;"	l
f8	usertests.asm	/^      f8:	00005097          	auipc	ra,0x5$/;"	l
f8	zombie.asm	/^  f8:	ec5e                	sd	s7,24(sp)$/;"	l
f80	grind.asm	/^     f80:	0028071b          	addiw	a4,a6,2$/;"	l
f80	usertests.asm	/^     f80:	00005517          	auipc	a0,0x5$/;"	l
f82	sh.asm	/^     f82:	a839                	j	fa0 <vprintf+0x6a>$/;"	l
f84	grind.asm	/^     f84:	02e05863          	blez	a4,fb4 <printint+0x94>$/;"	l
f84	sh.asm	/^     f84:	85ca                	mv	a1,s2$/;"	l
f84	usertests.asm	/^     f84:	31050513          	addi	a0,a0,784 # 6290 <malloc+0xae2>$/;"	l
f86	sh.asm	/^     f86:	8556                	mv	a0,s5$/;"	l
f88	grind.asm	/^     f88:	fc040793          	addi	a5,s0,-64$/;"	l
f88	sh.asm	/^     f88:	00000097          	auipc	ra,0x0$/;"	l
f88	usertests.asm	/^     f88:	00004097          	auipc	ra,0x4$/;"	l
f8c	grind.asm	/^     f8c:	00e78933          	add	s2,a5,a4$/;"	l
f8c	sh.asm	/^     f8c:	ee2080e7          	jalr	-286(ra) # e6a <putc>$/;"	l
f8c	usertests.asm	/^     f8c:	440080e7          	jalr	1088(ra) # 53c8 <unlink>$/;"	l
f90	grind.asm	/^     f90:	fff78993          	addi	s3,a5,-1$/;"	l
f90	sh.asm	/^     f90:	a019                	j	f96 <vprintf+0x60>$/;"	l
f90	usertests.asm	/^     f90:	20000593          	li	a1,512$/;"	l
f92	sh.asm	/^     f92:	01498f63          	beq	s3,s4,fb0 <vprintf+0x7a>$/;"	l
f94	grind.asm	/^     f94:	99ba                	add	s3,s3,a4$/;"	l
f94	usertests.asm	/^     f94:	00005517          	auipc	a0,0x5$/;"	l
f96	grind.asm	/^     f96:	377d                	addiw	a4,a4,-1$/;"	l
f96	sh.asm	/^     f96:	0485                	addi	s1,s1,1$/;"	l
f98	grind.asm	/^     f98:	1702                	slli	a4,a4,0x20$/;"	l
f98	sh.asm	/^     f98:	fff4c903          	lbu	s2,-1(s1)$/;"	l
f98	usertests.asm	/^     f98:	2fc50513          	addi	a0,a0,764 # 6290 <malloc+0xae2>$/;"	l
f9a	grind.asm	/^     f9a:	9301                	srli	a4,a4,0x20$/;"	l
f9c	grind.asm	/^     f9c:	40e989b3          	sub	s3,s3,a4$/;"	l
f9c	sh.asm	/^     f9c:	14090d63          	beqz	s2,10f6 <vprintf+0x1c0>$/;"	l
f9c	usertests.asm	/^     f9c:	00004097          	auipc	ra,0x4$/;"	l
fa	cat.asm	/^  fa:	29e080e7          	jalr	670(ra) # 394 <exit>$/;"	l
fa	echo.asm	/^  fa:	0800                	addi	s0,sp,16$/;"	l
fa	forktest.asm	/^  fa:	4505                	li	a0,1$/;"	l
fa	grind.asm	/^      fa:	597d                	li	s2,-1$/;"	l
fa	init.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	kill.asm	/^  fa:	8082                	ret$/;"	l
fa	ln.asm	/^  fa:	e422                	sd	s0,8(sp)$/;"	l
fa	mkdir.asm	/^  fa:	9301                	srli	a4,a4,0x20$/;"	l
fa	rm.asm	/^  fa:	9301                	srli	a4,a4,0x20$/;"	l
fa	sh.asm	/^      fa:	d0c080e7          	jalr	-756(ra) # e02 <exec>$/;"	l
fa	stressfs.asm	/^  fa:	00000097          	auipc	ra,0x0$/;"	l
fa	wc.asm	/^  fa:	316080e7          	jalr	790(ra) # 40c <exit>$/;"	l
fa	zombie.asm	/^  fa:	1080                	addi	s0,sp,96$/;"	l
fa0	grind.asm	/^     fa0:	fff94583          	lbu	a1,-1(s2)$/;"	l
fa0	sh.asm	/^     fa0:	0009079b          	sext.w	a5,s2$/;"	l
fa0	usertests.asm	/^     fa0:	41c080e7          	jalr	1052(ra) # 53b8 <open>$/;"	l
fa4	grind.asm	/^     fa4:	8526                	mv	a0,s1$/;"	l
fa4	sh.asm	/^     fa4:	fe0997e3          	bnez	s3,f92 <vprintf+0x5c>$/;"	l
fa4	usertests.asm	/^     fa4:	0c054963          	bltz	a0,1076 <bigdir+0x10c>$/;"	l
fa6	grind.asm	/^     fa6:	00000097          	auipc	ra,0x0$/;"	l
fa8	sh.asm	/^     fa8:	fd479ee3          	bne	a5,s4,f84 <vprintf+0x4e>$/;"	l
fa8	usertests.asm	/^     fa8:	00004097          	auipc	ra,0x4$/;"	l
faa	grind.asm	/^     faa:	f58080e7          	jalr	-168(ra) # efe <putc>$/;"	l
fac	sh.asm	/^     fac:	89be                	mv	s3,a5$/;"	l
fac	usertests.asm	/^     fac:	3f8080e7          	jalr	1016(ra) # 53a0 <close>$/;"	l
fae	grind.asm	/^     fae:	197d                	addi	s2,s2,-1$/;"	l
fae	sh.asm	/^     fae:	b7e5                	j	f96 <vprintf+0x60>$/;"	l
fail	usertests.asm	/^        fail = 1;$/;"	d
fb0	grind.asm	/^     fb0:	ff3918e3          	bne	s2,s3,fa0 <printint+0x80>$/;"	l
fb0	sh.asm	/^     fb0:	05878063          	beq	a5,s8,ff0 <vprintf+0xba>$/;"	l
fb0	usertests.asm	/^     fb0:	4901                	li	s2,0$/;"	l
fb2	usertests.asm	/^     fb2:	07800a93          	li	s5,120$/;"	l
fb4	grind.asm	/^     fb4:	70e2                	ld	ra,56(sp)$/;"	l
fb4	sh.asm	/^     fb4:	05978c63          	beq	a5,s9,100c <vprintf+0xd6>$/;"	l
fb6	grind.asm	/^     fb6:	7442                	ld	s0,48(sp)$/;"	l
fb6	usertests.asm	/^     fb6:	00005a17          	auipc	s4,0x5$/;"	l
fb8	grind.asm	/^     fb8:	74a2                	ld	s1,40(sp)$/;"	l
fb8	sh.asm	/^     fb8:	07a78863          	beq	a5,s10,1028 <vprintf+0xf2>$/;"	l
fba	grind.asm	/^     fba:	7902                	ld	s2,32(sp)$/;"	l
fba	usertests.asm	/^     fba:	2daa0a13          	addi	s4,s4,730 # 6290 <malloc+0xae2>$/;"	l
fbc	grind.asm	/^     fbc:	69e2                	ld	s3,24(sp)$/;"	l
fbc	sh.asm	/^     fbc:	09b78463          	beq	a5,s11,1044 <vprintf+0x10e>$/;"	l
fbe	grind.asm	/^     fbe:	6121                	addi	sp,sp,64$/;"	l
fbe	usertests.asm	/^     fbe:	1f400b13          	li	s6,500$/;"	l
fc	echo.asm	/^  fc:	ce09                	beqz	a2,116 <memset+0x20>$/;"	l
fc	forktest.asm	/^  fc:	00000097          	auipc	ra,0x0$/;"	l
fc	grep.asm	/^  fc:	f7f5                	bnez	a5,e8 <match+0x1c>$/;"	l
fc	grind.asm	/^      fc:	6a85                	lui	s5,0x1$/;"	l
fc	init.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	kill.asm	/^  fc:	1141                	addi	sp,sp,-16$/;"	l
fc	ln.asm	/^  fc:	0800                	addi	s0,sp,16$/;"	l
fc	ls.asm	/^  fc:	0007869b          	sext.w	a3,a5$/;"	l
fc	mkdir.asm	/^  fc:	0705                	addi	a4,a4,1$/;"	l
fc	rm.asm	/^  fc:	0705                	addi	a4,a4,1$/;"	l
fc	usertests.asm	/^      fc:	280080e7          	jalr	640(ra) # 5378 <exit>$/;"	l
fc	zombie.asm	/^  fc:	8baa                	mv	s7,a0$/;"	l
fc0	grind.asm	/^     fc0:	8082                	ret$/;"	l
fc0	sh.asm	/^     fc0:	07300713          	li	a4,115$/;"	l
fc2	grind.asm	/^     fc2:	40b005bb          	negw	a1,a1$/;"	l
fc2	usertests.asm	/^     fc2:	fb540823          	sb	s5,-80(s0)$/;"	l
fc4	sh.asm	/^     fc4:	0ce78663          	beq	a5,a4,1090 <vprintf+0x15a>$/;"	l
fc6	grind.asm	/^     fc6:	4885                	li	a7,1$/;"	l
fc6	usertests.asm	/^     fc6:	41f9579b          	sraiw	a5,s2,0x1f$/;"	l
fc8	grind.asm	/^     fc8:	bf8d                	j	f3a <printint+0x1a>$/;"	l
fc8	sh.asm	/^     fc8:	06300713          	li	a4,99$/;"	l
fca	grind.asm	/^     fca:	7119                	addi	sp,sp,-128$/;"	l
fca	usertests.asm	/^     fca:	01a7d71b          	srliw	a4,a5,0x1a$/;"	l
fcc	grind.asm	/^     fcc:	fc86                	sd	ra,120(sp)$/;"	l
fcc	sh.asm	/^     fcc:	0ee78e63          	beq	a5,a4,10c8 <vprintf+0x192>$/;"	l
fce	grind.asm	/^     fce:	f8a2                	sd	s0,112(sp)$/;"	l
fce	usertests.asm	/^     fce:	012707bb          	addw	a5,a4,s2$/;"	l
fd	cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	grind.asm	/^        fd = open("x", O_CREATE|O_RDWR);$/;"	d
fd	grind.asm	/^      fd = open("\/.\/grindir\/.\/..\/b", O_CREATE|O_RDWR);$/;"	d
fd	grind.asm	/^      fd = open("\/grindir\/..\/a", O_CREATE|O_RDWR);$/;"	d
fd	grind.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd	stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open("truncfile", O_RDONLY);$/;"	d
fd	usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^    fd = open("echo-ok", O_CREATE|O_WRONLY);$/;"	d
fd	usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile.dat", 0);$/;"	d
fd	usertests.asm	/^  fd = open("bigfile.dat", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	usertests.asm	/^  fd = open("echo-ok", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	usertests.asm	/^  fd = open("sbrk", O_CREATE|O_WRONLY);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd0	grind.asm	/^     fd0:	f4a6                	sd	s1,104(sp)$/;"	l
fd0	sh.asm	/^     fd0:	11478863          	beq	a5,s4,10e0 <vprintf+0x1aa>$/;"	l
fd1	usertests.asm	/^  fd1 = open("truncfile", O_WRONLY|O_TRUNC);$/;"	d
fd1	usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd2	grind.asm	/^     fd2:	f0ca                	sd	s2,96(sp)$/;"	l
fd2	usertests.asm	/^     fd2:	4067d69b          	sraiw	a3,a5,0x6$/;"	l
fd4	grind.asm	/^     fd4:	ecce                	sd	s3,88(sp)$/;"	l
fd4	sh.asm	/^     fd4:	85d2                	mv	a1,s4$/;"	l
fd6	grind.asm	/^     fd6:	e8d2                	sd	s4,80(sp)$/;"	l
fd6	sh.asm	/^     fd6:	8556                	mv	a0,s5$/;"	l
fd6	usertests.asm	/^     fd6:	0306869b          	addiw	a3,a3,48$/;"	l
fd8	grind.asm	/^     fd8:	e4d6                	sd	s5,72(sp)$/;"	l
fd8	sh.asm	/^     fd8:	00000097          	auipc	ra,0x0$/;"	l
fda	grind.asm	/^     fda:	e0da                	sd	s6,64(sp)$/;"	l
fda	usertests.asm	/^     fda:	fad408a3          	sb	a3,-79(s0)$/;"	l
fdc	grind.asm	/^     fdc:	fc5e                	sd	s7,56(sp)$/;"	l
fdc	sh.asm	/^     fdc:	e92080e7          	jalr	-366(ra) # e6a <putc>$/;"	l
fde	grind.asm	/^     fde:	f862                	sd	s8,48(sp)$/;"	l
fde	usertests.asm	/^     fde:	03f7f793          	andi	a5,a5,63$/;"	l
fe	cat.asm	/^  fe:	00093603          	ld	a2,0(s2)$/;"	l
fe	echo.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	grep.asm	/^  fe:	a801                	j	10e <match+0x42>$/;"	l
fe	grind.asm	/^      fe:	77ba8a93          	addi	s5,s5,1915 # 177b <buf.1231+0x10b>$/;"	l
fe	init.asm	/^  fe:	87aa                	mv	a5,a0$/;"	l
fe	kill.asm	/^  fe:	e422                	sd	s0,8(sp)$/;"	l
fe	ln.asm	/^  fe:	00054783          	lbu	a5,0(a0)$/;"	l
fe	mkdir.asm	/^  fe:	972a                	add	a4,a4,a0$/;"	l
fe	rm.asm	/^  fe:	972a                	add	a4,a4,a0$/;"	l
fe	sh.asm	/^      fe:	6490                	ld	a2,8(s1)$/;"	l
fe	stressfs.asm	/^  fe:	290080e7          	jalr	656(ra) # 38a <wait>$/;"	l
fe	wc.asm	/^  fe:	7179                	addi	sp,sp,-48$/;"	l
fe	zombie.asm	/^  fe:	8a2e                	mv	s4,a1$/;"	l
fe0	grind.asm	/^     fe0:	f466                	sd	s9,40(sp)$/;"	l
fe0	sh.asm	/^     fe0:	85ca                	mv	a1,s2$/;"	l
fe2	grind.asm	/^     fe2:	f06a                	sd	s10,32(sp)$/;"	l
fe2	sh.asm	/^     fe2:	8556                	mv	a0,s5$/;"	l
fe2	usertests.asm	/^     fe2:	9f99                	subw	a5,a5,a4$/;"	l
fe4	grind.asm	/^     fe4:	ec6e                	sd	s11,24(sp)$/;"	l
fe4	sh.asm	/^     fe4:	00000097          	auipc	ra,0x0$/;"	l
fe4	usertests.asm	/^     fe4:	0307879b          	addiw	a5,a5,48$/;"	l
fe6	grind.asm	/^     fe6:	0100                	addi	s0,sp,128$/;"	l
fe8	grind.asm	/^     fe8:	0005c903          	lbu	s2,0(a1)$/;"	l
fe8	sh.asm	/^     fe8:	e86080e7          	jalr	-378(ra) # e6a <putc>$/;"	l
fe8	usertests.asm	/^     fe8:	faf40923          	sb	a5,-78(s0)$/;"	l
fec	grind.asm	/^     fec:	18090f63          	beqz	s2,118a <vprintf+0x1c0>$/;"	l
fec	sh.asm	/^     fec:	4981                	li	s3,0$/;"	l
fec	usertests.asm	/^     fec:	fa0409a3          	sb	zero,-77(s0)$/;"	l
fee	sh.asm	/^     fee:	b765                	j	f96 <vprintf+0x60>$/;"	l
ff0	grind.asm	/^     ff0:	8aaa                	mv	s5,a0$/;"	l
ff0	sh.asm	/^     ff0:	008b0913          	addi	s2,s6,8$/;"	l
ff0	usertests.asm	/^     ff0:	fb040593          	addi	a1,s0,-80$/;"	l
ff2	grind.asm	/^     ff2:	8b32                	mv	s6,a2$/;"	l
ff4	grind.asm	/^     ff4:	00158493          	addi	s1,a1,1$/;"	l
ff4	sh.asm	/^     ff4:	4685                	li	a3,1$/;"	l
ff4	usertests.asm	/^     ff4:	8552                	mv	a0,s4$/;"	l
ff6	sh.asm	/^     ff6:	4629                	li	a2,10$/;"	l
ff6	usertests.asm	/^     ff6:	00004097          	auipc	ra,0x4$/;"	l
ff8	grind.asm	/^     ff8:	4981                	li	s3,0$/;"	l
ff8	sh.asm	/^     ff8:	000b2583          	lw	a1,0(s6)$/;"	l
ffa	grind.asm	/^     ffa:	02500a13          	li	s4,37$/;"	l
ffa	usertests.asm	/^     ffa:	3e2080e7          	jalr	994(ra) # 53d8 <link>$/;"	l
ffc	sh.asm	/^     ffc:	8556                	mv	a0,s5$/;"	l
ffe	grind.asm	/^     ffe:	06400c13          	li	s8,100$/;"	l
ffe	sh.asm	/^     ffe:	00000097          	auipc	ra,0x0$/;"	l
ffe	usertests.asm	/^     ffe:	84aa                	mv	s1,a0$/;"	l
file	sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
fmtname	ls.c	/^fmtname(char *path)$/;"	f
fname	usertests.asm	/^    fname = names[i];$/;"	d
fname	usertests.asm	/^    fname = names[pi];$/;"	d
fork	cat.asm	/^fork:$/;"	l
fork	echo.asm	/^fork:$/;"	l
fork	forktest.asm	/^fork:$/;"	l
fork	grep.asm	/^fork:$/;"	l
fork	grind.asm	/^fork:$/;"	l
fork	init.asm	/^fork:$/;"	l
fork	kill.asm	/^fork:$/;"	l
fork	ln.asm	/^fork:$/;"	l
fork	ls.asm	/^fork:$/;"	l
fork	mkdir.asm	/^fork:$/;"	l
fork	rm.asm	/^fork:$/;"	l
fork	sh.asm	/^fork:$/;"	l
fork	stressfs.asm	/^fork:$/;"	l
fork	usertests.asm	/^fork:$/;"	l
fork	usys.S	/^fork:$/;"	l
fork	wc.asm	/^fork:$/;"	l
fork	zombie.asm	/^fork:$/;"	l
fork1	sh.c	/^fork1(void)$/;"	f
forkfork	usertests.c	/^forkfork(char *s)$/;"	f
forkforkfork	usertests.c	/^forkforkfork(char *s)$/;"	f
forktest	forktest.c	/^forktest(void)$/;"	f
forktest	usertests.c	/^forktest(char *s)$/;"	f
fourfiles	usertests.c	/^fourfiles(char *s)$/;"	f
fourteen	usertests.c	/^fourteen(char *s)$/;"	f
fprintf	printf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free	umalloc.c	/^free(void *ap)$/;"	f
freep	cat.asm	/^      freep = prevp;$/;"	d
freep	cat.asm	/^  freep = p;$/;"	d
freep	echo.asm	/^      freep = prevp;$/;"	d
freep	echo.asm	/^  freep = p;$/;"	d
freep	grep.asm	/^      freep = prevp;$/;"	d
freep	grep.asm	/^  freep = p;$/;"	d
freep	grind.asm	/^      freep = prevp;$/;"	d
freep	grind.asm	/^  freep = p;$/;"	d
freep	init.asm	/^      freep = prevp;$/;"	d
freep	init.asm	/^  freep = p;$/;"	d
freep	kill.asm	/^      freep = prevp;$/;"	d
freep	kill.asm	/^  freep = p;$/;"	d
freep	ln.asm	/^      freep = prevp;$/;"	d
freep	ln.asm	/^  freep = p;$/;"	d
freep	ls.asm	/^      freep = prevp;$/;"	d
freep	ls.asm	/^  freep = p;$/;"	d
freep	mkdir.asm	/^      freep = prevp;$/;"	d
freep	mkdir.asm	/^  freep = p;$/;"	d
freep	rm.asm	/^      freep = prevp;$/;"	d
freep	rm.asm	/^  freep = p;$/;"	d
freep	sh.asm	/^      freep = prevp;$/;"	d
freep	sh.asm	/^  freep = p;$/;"	d
freep	stressfs.asm	/^      freep = prevp;$/;"	d
freep	stressfs.asm	/^  freep = p;$/;"	d
freep	umalloc.c	/^static Header *freep;$/;"	v	file:
freep	usertests.asm	/^      freep = prevp;$/;"	d
freep	usertests.asm	/^  freep = p;$/;"	d
freep	wc.asm	/^      freep = prevp;$/;"	d
freep	wc.asm	/^  freep = p;$/;"	d
freep	zombie.asm	/^      freep = prevp;$/;"	d
freep	zombie.asm	/^  freep = p;$/;"	d
fsfull	usertests.c	/^fsfull()$/;"	f
fstat	cat.asm	/^fstat:$/;"	l
fstat	echo.asm	/^fstat:$/;"	l
fstat	forktest.asm	/^fstat:$/;"	l
fstat	grep.asm	/^fstat:$/;"	l
fstat	grind.asm	/^fstat:$/;"	l
fstat	init.asm	/^fstat:$/;"	l
fstat	kill.asm	/^fstat:$/;"	l
fstat	ln.asm	/^fstat:$/;"	l
fstat	ls.asm	/^fstat:$/;"	l
fstat	mkdir.asm	/^fstat:$/;"	l
fstat	rm.asm	/^fstat:$/;"	l
fstat	sh.asm	/^fstat:$/;"	l
fstat	stressfs.asm	/^fstat:$/;"	l
fstat	usertests.asm	/^fstat:$/;"	l
fstat	usys.S	/^fstat:$/;"	l
fstat	wc.asm	/^fstat:$/;"	l
fstat	zombie.asm	/^fstat:$/;"	l
getcmd	sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
getpid	cat.asm	/^getpid:$/;"	l
getpid	echo.asm	/^getpid:$/;"	l
getpid	forktest.asm	/^getpid:$/;"	l
getpid	grep.asm	/^getpid:$/;"	l
getpid	grind.asm	/^getpid:$/;"	l
getpid	init.asm	/^getpid:$/;"	l
getpid	kill.asm	/^getpid:$/;"	l
getpid	ln.asm	/^getpid:$/;"	l
getpid	ls.asm	/^getpid:$/;"	l
getpid	mkdir.asm	/^getpid:$/;"	l
getpid	rm.asm	/^getpid:$/;"	l
getpid	sh.asm	/^getpid:$/;"	l
getpid	stressfs.asm	/^getpid:$/;"	l
getpid	usertests.asm	/^getpid:$/;"	l
getpid	usys.S	/^getpid:$/;"	l
getpid	wc.asm	/^getpid:$/;"	l
getpid	zombie.asm	/^getpid:$/;"	l
gets	ulib.c	/^gets(char *buf, int max)$/;"	f
gettoken	sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
go	grind.c	/^go(int which_child)$/;"	f
grep	grep.c	/^grep(char *pattern, int fd)$/;"	f
header	umalloc.c	/^union header {$/;"	u	file:
hi	grind.asm	/^    hi = x \/ 127773;$/;"	d
i	cat.asm	/^  i = 0;$/;"	d
i	echo.asm	/^  i = 0;$/;"	d
i	grep.asm	/^  i = 0;$/;"	d
i	grind.asm	/^  i = 0;$/;"	d
i	init.asm	/^  i = 0;$/;"	d
i	kill.asm	/^  i = 0;$/;"	d
i	ln.asm	/^  i = 0;$/;"	d
i	ls.asm	/^  i = 0;$/;"	d
i	mkdir.asm	/^  i = 0;$/;"	d
i	rm.asm	/^  i = 0;$/;"	d
i	sh.asm	/^  i = 0;$/;"	d
i	stressfs.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	usertests.asm	/^    i = read(fd, buf, BSIZE);$/;"	d
i	usertests.asm	/^  i = 0;$/;"	d
i	usertests.asm	/^  i = read(fd, buf, N*SZ*2);$/;"	d
i	wc.asm	/^  i = 0;$/;"	d
i	zombie.asm	/^  i = 0;$/;"	d
init	initcode.S	/^init:$/;"	l
int	cat.asm	/^int$/;"	l
int	echo.asm	/^int$/;"	l
int	forktest.asm	/^int$/;"	l
int	grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	grep.asm	/^int$/;"	l
int	grind.asm	/^int$/;"	l
int	init.asm	/^int$/;"	l
int	kill.asm	/^int$/;"	l
int	ln.asm	/^int$/;"	l
int	ls.asm	/^int$/;"	l
int	mkdir.asm	/^int$/;"	l
int	rm.asm	/^int$/;"	l
int	sh.asm	/^int$/;"	l
int	stressfs.asm	/^int$/;"	l
int	usertests.asm	/^int$/;"	l
int	wc.asm	/^int$/;"	l
int	zombie.asm	/^int$/;"	l
inword	wc.asm	/^        inword = 0;$/;"	d
inword	wc.asm	/^        inword = 1;$/;"	d
inword	wc.asm	/^  inword = 0;$/;"	d
iputtest	usertests.c	/^iputtest(char *s)$/;"	f
iref	usertests.c	/^iref(char *s)$/;"	f
iter	grind.c	/^iter()$/;"	f
justone	usertests.asm	/^    justone = argv[1];$/;"	d
kernmem	usertests.c	/^kernmem(char *s)$/;"	f
kill	cat.asm	/^kill:$/;"	l
kill	echo.asm	/^kill:$/;"	l
kill	forktest.asm	/^kill:$/;"	l
kill	grep.asm	/^kill:$/;"	l
kill	grind.asm	/^kill:$/;"	l
kill	init.asm	/^kill:$/;"	l
kill	kill.asm	/^kill:$/;"	l
kill	ln.asm	/^kill:$/;"	l
kill	ls.asm	/^kill:$/;"	l
kill	mkdir.asm	/^kill:$/;"	l
kill	rm.asm	/^kill:$/;"	l
kill	sh.asm	/^kill:$/;"	l
kill	stressfs.asm	/^kill:$/;"	l
kill	usertests.asm	/^kill:$/;"	l
kill	usys.S	/^kill:$/;"	l
kill	wc.asm	/^kill:$/;"	l
kill	zombie.asm	/^kill:$/;"	l
l	wc.asm	/^  l = w = c = 0;$/;"	d
left	sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
link	cat.asm	/^link:$/;"	l
link	echo.asm	/^link:$/;"	l
link	forktest.asm	/^link:$/;"	l
link	grep.asm	/^link:$/;"	l
link	grind.asm	/^link:$/;"	l
link	init.asm	/^link:$/;"	l
link	kill.asm	/^link:$/;"	l
link	ln.asm	/^link:$/;"	l
link	ls.asm	/^link:$/;"	l
link	mkdir.asm	/^link:$/;"	l
link	rm.asm	/^link:$/;"	l
link	sh.asm	/^link:$/;"	l
link	stressfs.asm	/^link:$/;"	l
link	usertests.asm	/^link:$/;"	l
link	usys.S	/^link:$/;"	l
link	wc.asm	/^link:$/;"	l
link	zombie.asm	/^link:$/;"	l
linktest	usertests.c	/^linktest(char *s)$/;"	f
linkunlink	usertests.c	/^linkunlink(char *s)$/;"	f
listcmd	sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f
listcmd	sh.c	/^struct listcmd {$/;"	s	file:
lo	grind.asm	/^    lo = x % 127773;$/;"	d
ls	ls.c	/^ls(char *path)$/;"	f
m	grep.asm	/^  m = 0;$/;"	d
m1	usertests.asm	/^      m1 = m2;$/;"	d
m1	usertests.asm	/^    m1 = 0;$/;"	d
m1	usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	usertests.asm	/^      m2 = *(char**)m1;$/;"	d
main	cat.c	/^main(int argc, char *argv[])$/;"	f
main	echo.c	/^main(int argc, char *argv[])$/;"	f
main	forktest.c	/^main(void)$/;"	f
main	grep.c	/^main(int argc, char *argv[])$/;"	f
main	grind.c	/^main()$/;"	f
main	init.c	/^main(void)$/;"	f
main	kill.c	/^main(int argc, char **argv)$/;"	f
main	ln.c	/^main(int argc, char *argv[])$/;"	f
main	ls.c	/^main(int argc, char *argv[])$/;"	f
main	mkdir.c	/^main(int argc, char *argv[])$/;"	f
main	rm.c	/^main(int argc, char *argv[])$/;"	f
main	sh.c	/^main(void)$/;"	f
main	stressfs.c	/^main(int argc, char *argv[])$/;"	f
main	usertests.c	/^main(int argc, char *argv[])$/;"	f
main	wc.c	/^main(int argc, char *argv[])$/;"	f
main	zombie.c	/^main(void)$/;"	f
malloc	umalloc.c	/^malloc(uint nbytes)$/;"	f
match	grep.c	/^match(char *re, char *text)$/;"	f
matchhere	grep.c	/^int matchhere(char *re, char *text)$/;"	f
matchstar	grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f
mem	usertests.c	/^mem(char *s)$/;"	f
memcmp	ulib.c	/^memcmp(const void *s1, const void *s2, uint n)$/;"	f
memcpy	ulib.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memmove	ulib.c	/^memmove(void *vdst, const void *vsrc, int n)$/;"	f
memset	ulib.c	/^memset(void *dst, int c, uint n)$/;"	f
mkdir	cat.asm	/^mkdir:$/;"	l
mkdir	echo.asm	/^mkdir:$/;"	l
mkdir	forktest.asm	/^mkdir:$/;"	l
mkdir	grep.asm	/^mkdir:$/;"	l
mkdir	grind.asm	/^mkdir:$/;"	l
mkdir	init.asm	/^mkdir:$/;"	l
mkdir	kill.asm	/^mkdir:$/;"	l
mkdir	ln.asm	/^mkdir:$/;"	l
mkdir	ls.asm	/^mkdir:$/;"	l
mkdir	mkdir.asm	/^mkdir:$/;"	l
mkdir	rm.asm	/^mkdir:$/;"	l
mkdir	sh.asm	/^mkdir:$/;"	l
mkdir	stressfs.asm	/^mkdir:$/;"	l
mkdir	usertests.asm	/^mkdir:$/;"	l
mkdir	usys.S	/^mkdir:$/;"	l
mkdir	wc.asm	/^mkdir:$/;"	l
mkdir	zombie.asm	/^mkdir:$/;"	l
mknod	cat.asm	/^mknod:$/;"	l
mknod	echo.asm	/^mknod:$/;"	l
mknod	forktest.asm	/^mknod:$/;"	l
mknod	grep.asm	/^mknod:$/;"	l
mknod	grind.asm	/^mknod:$/;"	l
mknod	init.asm	/^mknod:$/;"	l
mknod	kill.asm	/^mknod:$/;"	l
mknod	ln.asm	/^mknod:$/;"	l
mknod	ls.asm	/^mknod:$/;"	l
mknod	mkdir.asm	/^mknod:$/;"	l
mknod	rm.asm	/^mknod:$/;"	l
mknod	sh.asm	/^mknod:$/;"	l
mknod	stressfs.asm	/^mknod:$/;"	l
mknod	usertests.asm	/^mknod:$/;"	l
mknod	usys.S	/^mknod:$/;"	l
mknod	wc.asm	/^mknod:$/;"	l
mknod	zombie.asm	/^mknod:$/;"	l
mode	sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
morecore	umalloc.c	/^morecore(uint nu)$/;"	f	file:
n	cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	cat.asm	/^  n = 0;$/;"	d
n	echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	echo.asm	/^  n = 0;$/;"	d
n	forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	forktest.asm	/^  n = 0;$/;"	d
n	grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	grep.asm	/^  n = 0;$/;"	d
n	grind.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	grind.asm	/^  n = 0;$/;"	d
n	init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	init.asm	/^  n = 0;$/;"	d
n	kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	kill.asm	/^  n = 0;$/;"	d
n	ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ln.asm	/^  n = 0;$/;"	d
n	ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	ls.asm	/^  n = 0;$/;"	d
n	mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	mkdir.asm	/^  n = 0;$/;"	d
n	rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	rm.asm	/^  n = 0;$/;"	d
n	sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	sh.asm	/^  n = 0;$/;"	d
n	stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	stressfs.asm	/^  n = 0;$/;"	d
n	usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	usertests.asm	/^    n = read(fds[0], (void*)addr, 8192);$/;"	d
n	usertests.asm	/^    n = write(1, (char*)addr, 8192);$/;"	d
n	usertests.asm	/^    n = write(fds[1], "x", 1);$/;"	d
n	usertests.asm	/^    n = write(fds[1], (char*)addr, 8192);$/;"	d
n	usertests.asm	/^  n = 0;$/;"	d
n	usertests.asm	/^  n = read(fd2, buf, sizeof(buf));$/;"	d
n	usertests.asm	/^  n = read(fd3, buf, sizeof(buf));$/;"	d
n	wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	wc.asm	/^  n = 0;$/;"	d
n	zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	zombie.asm	/^  n = 0;$/;"	d
name	usertests.c	/^char name[3];$/;"	v
nc	usertests.asm	/^  nc = np = 0;$/;"	d
neg	cat.asm	/^    neg = 1;$/;"	d
neg	cat.asm	/^  neg = 0;$/;"	d
neg	echo.asm	/^    neg = 1;$/;"	d
neg	echo.asm	/^  neg = 0;$/;"	d
neg	grep.asm	/^    neg = 1;$/;"	d
neg	grep.asm	/^  neg = 0;$/;"	d
neg	grind.asm	/^    neg = 1;$/;"	d
neg	grind.asm	/^  neg = 0;$/;"	d
neg	init.asm	/^    neg = 1;$/;"	d
neg	init.asm	/^  neg = 0;$/;"	d
neg	kill.asm	/^    neg = 1;$/;"	d
neg	kill.asm	/^  neg = 0;$/;"	d
neg	ln.asm	/^    neg = 1;$/;"	d
neg	ln.asm	/^  neg = 0;$/;"	d
neg	ls.asm	/^    neg = 1;$/;"	d
neg	ls.asm	/^  neg = 0;$/;"	d
neg	mkdir.asm	/^    neg = 1;$/;"	d
neg	mkdir.asm	/^  neg = 0;$/;"	d
neg	rm.asm	/^    neg = 1;$/;"	d
neg	rm.asm	/^  neg = 0;$/;"	d
neg	sh.asm	/^    neg = 1;$/;"	d
neg	sh.asm	/^  neg = 0;$/;"	d
neg	stressfs.asm	/^    neg = 1;$/;"	d
neg	stressfs.asm	/^  neg = 0;$/;"	d
neg	usertests.asm	/^    neg = 1;$/;"	d
neg	usertests.asm	/^  neg = 0;$/;"	d
neg	wc.asm	/^    neg = 1;$/;"	d
neg	wc.asm	/^  neg = 0;$/;"	d
neg	zombie.asm	/^    neg = 1;$/;"	d
neg	zombie.asm	/^  neg = 0;$/;"	d
nulterminate	sh.c	/^nulterminate(struct cmd *cmd)$/;"	f
nunits	cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	grind.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
oldbrk	usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
open	cat.asm	/^open:$/;"	l
open	echo.asm	/^open:$/;"	l
open	forktest.asm	/^open:$/;"	l
open	grep.asm	/^open:$/;"	l
open	grind.asm	/^open:$/;"	l
open	init.asm	/^open:$/;"	l
open	kill.asm	/^open:$/;"	l
open	ln.asm	/^open:$/;"	l
open	ls.asm	/^open:$/;"	l
open	mkdir.asm	/^open:$/;"	l
open	rm.asm	/^open:$/;"	l
open	sh.asm	/^open:$/;"	l
open	stressfs.asm	/^open:$/;"	l
open	usertests.asm	/^open:$/;"	l
open	usys.S	/^open:$/;"	l
open	wc.asm	/^open:$/;"	l
open	zombie.asm	/^open:$/;"	l
openiputtest	usertests.c	/^openiputtest(char *s)$/;"	f
opentest	usertests.c	/^opentest(char *s)$/;"	f
os	cat.asm	/^  os = s;$/;"	d
os	echo.asm	/^  os = s;$/;"	d
os	forktest.asm	/^  os = s;$/;"	d
os	grep.asm	/^  os = s;$/;"	d
os	grind.asm	/^  os = s;$/;"	d
os	init.asm	/^  os = s;$/;"	d
os	kill.asm	/^  os = s;$/;"	d
os	ln.asm	/^  os = s;$/;"	d
os	ls.asm	/^  os = s;$/;"	d
os	mkdir.asm	/^  os = s;$/;"	d
os	rm.asm	/^  os = s;$/;"	d
os	sh.asm	/^  os = s;$/;"	d
os	stressfs.asm	/^  os = s;$/;"	d
os	usertests.asm	/^  os = s;$/;"	d
os	wc.asm	/^  os = s;$/;"	d
os	zombie.asm	/^  os = s;$/;"	d
p	cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	grep.asm	/^      p = q+1;$/;"	d
p	grep.asm	/^    p = buf;$/;"	d
p	grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	grind.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	usertests.asm	/^  p = sbrk(amt);$/;"	d
p	usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
panic	sh.c	/^panic(char *s)$/;"	f
parseblock	sh.c	/^parseblock(char **ps, char *es)$/;"	f
parsecmd	sh.c	/^parsecmd(char *s)$/;"	f
parseexec	sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
pattern	grep.asm	/^  pattern = argv[1];$/;"	d
peek	sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
pgbug	usertests.c	/^pgbug(char *s)$/;"	f
pid	forktest.asm	/^    pid = fork();$/;"	d
pid	init.asm	/^    pid = fork();$/;"	d
pid	sh.asm	/^  pid = fork();$/;"	d
pid	usertests.asm	/^    pid = fork();$/;"	d
pid	usertests.asm	/^  pid = fork();$/;"	d
pid1	usertests.asm	/^  pid1 = fork();$/;"	d
pid2	usertests.asm	/^  pid2 = fork();$/;"	d
pid3	usertests.asm	/^  pid3 = fork();$/;"	d
pipe	cat.asm	/^pipe:$/;"	l
pipe	echo.asm	/^pipe:$/;"	l
pipe	forktest.asm	/^pipe:$/;"	l
pipe	grep.asm	/^pipe:$/;"	l
pipe	grind.asm	/^pipe:$/;"	l
pipe	init.asm	/^pipe:$/;"	l
pipe	kill.asm	/^pipe:$/;"	l
pipe	ln.asm	/^pipe:$/;"	l
pipe	ls.asm	/^pipe:$/;"	l
pipe	mkdir.asm	/^pipe:$/;"	l
pipe	rm.asm	/^pipe:$/;"	l
pipe	sh.asm	/^pipe:$/;"	l
pipe	stressfs.asm	/^pipe:$/;"	l
pipe	usertests.asm	/^pipe:$/;"	l
pipe	usys.S	/^pipe:$/;"	l
pipe	wc.asm	/^pipe:$/;"	l
pipe	zombie.asm	/^pipe:$/;"	l
pipe1	usertests.c	/^pipe1(char *s)$/;"	f
pipecmd	sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	sh.c	/^struct pipecmd {$/;"	s	file:
preempt	usertests.c	/^preempt(char *s)$/;"	f
print	forktest.c	/^print(const char *s)$/;"	f
printf	printf.c	/^printf(const char *fmt, ...)$/;"	f
printint	printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	file:
printptr	printf.c	/^printptr(int fd, uint64 x) {$/;"	f	file:
ptr	umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon1	typeref:union:header::__anon1::header	file:
putc	printf.c	/^putc(int fd, char c)$/;"	f	file:
r	cat.asm	/^  r = fstat(fd, st);$/;"	d
r	echo.asm	/^  r = fstat(fd, st);$/;"	d
r	forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	grep.asm	/^  r = fstat(fd, st);$/;"	d
r	grind.asm	/^  r = fstat(fd, st);$/;"	d
r	init.asm	/^  r = fstat(fd, st);$/;"	d
r	kill.asm	/^  r = fstat(fd, st);$/;"	d
r	ln.asm	/^  r = fstat(fd, st);$/;"	d
r	ls.asm	/^  r = fstat(fd, st);$/;"	d
r	mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	rm.asm	/^  r = fstat(fd, st);$/;"	d
r	sh.asm	/^  r = fstat(fd, st);$/;"	d
r	stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	wc.asm	/^  r = fstat(fd, st);$/;"	d
r	zombie.asm	/^  r = fstat(fd, st);$/;"	d
rand	grind.c	/^rand(void)$/;"	f
rand	usertests.c	/^rand()$/;"	f
rand_next	grind.asm	/^    rand_next = 31;$/;"	d
rand_next	grind.asm	/^    rand_next = 7177;$/;"	d
rand_next	grind.c	/^unsigned long rand_next = 1;$/;"	v
randstate	usertests.asm	/^  randstate = randstate * 1664525 + 1013904223;$/;"	d
randstate	usertests.c	/^unsigned long randstate = 1;$/;"	v
rcmd	sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
read	cat.asm	/^read:$/;"	l
read	echo.asm	/^read:$/;"	l
read	forktest.asm	/^read:$/;"	l
read	grep.asm	/^read:$/;"	l
read	grind.asm	/^read:$/;"	l
read	init.asm	/^read:$/;"	l
read	kill.asm	/^read:$/;"	l
read	ln.asm	/^read:$/;"	l
read	ls.asm	/^read:$/;"	l
read	mkdir.asm	/^read:$/;"	l
read	rm.asm	/^read:$/;"	l
read	sh.asm	/^read:$/;"	l
read	stressfs.asm	/^read:$/;"	l
read	usertests.asm	/^read:$/;"	l
read	usys.S	/^read:$/;"	l
read	wc.asm	/^read:$/;"	l
read	zombie.asm	/^read:$/;"	l
redircmd	sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f
redircmd	sh.c	/^struct redircmd {$/;"	s	file:
reparent	usertests.c	/^reparent(char *s)$/;"	f
reparent2	usertests.c	/^reparent2(char *s)$/;"	f
ret	sh.asm	/^      ret = '+';$/;"	d
ret	sh.asm	/^    ret = 'a';$/;"	d
ret	sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	sh.asm	/^  ret = *s;$/;"	d
ret	sh.asm	/^  ret = execcmd();$/;"	d
ret	sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
ret	usertests.asm	/^    ret = exec("echo", args2);$/;"	d
ret	usertests.asm	/^  ret = exec(b, args);$/;"	d
ret	usertests.asm	/^  ret = link(b, b);$/;"	d
right	sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
rmdot	usertests.c	/^rmdot(char *s)$/;"	f
run	usertests.c	/^run(void f(char *), char *s) {$/;"	f
runcmd	sh.c	/^runcmd(struct cmd *cmd)$/;"	f
s	cat.asm	/^          s = "(null)";$/;"	d
s	cat.asm	/^        s = va_arg(ap, char*);$/;"	d
s	echo.asm	/^          s = "(null)";$/;"	d
s	echo.asm	/^        s = va_arg(ap, char*);$/;"	d
s	grep.asm	/^          s = "(null)";$/;"	d
s	grep.asm	/^        s = va_arg(ap, char*);$/;"	d
s	grind.asm	/^          s = "(null)";$/;"	d
s	grind.asm	/^        s = va_arg(ap, char*);$/;"	d
s	init.asm	/^          s = "(null)";$/;"	d
s	init.asm	/^        s = va_arg(ap, char*);$/;"	d
s	kill.asm	/^          s = "(null)";$/;"	d
s	kill.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ln.asm	/^          s = "(null)";$/;"	d
s	ln.asm	/^        s = va_arg(ap, char*);$/;"	d
s	ls.asm	/^          s = "(null)";$/;"	d
s	ls.asm	/^        s = va_arg(ap, char*);$/;"	d
s	mkdir.asm	/^          s = "(null)";$/;"	d
s	mkdir.asm	/^        s = va_arg(ap, char*);$/;"	d
s	rm.asm	/^          s = "(null)";$/;"	d
s	rm.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^          s = "(null)";$/;"	d
s	sh.asm	/^        s = va_arg(ap, char*);$/;"	d
s	sh.asm	/^  s = *ps;$/;"	d
s	stressfs.asm	/^          s = "(null)";$/;"	d
s	stressfs.asm	/^        s = va_arg(ap, char*);$/;"	d
s	umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon1	file:
s	usertests.asm	/^          s = "(null)";$/;"	d
s	usertests.asm	/^        s = va_arg(ap, char*);$/;"	d
s	wc.asm	/^          s = "(null)";$/;"	d
s	wc.asm	/^        s = va_arg(ap, char*);$/;"	d
s	zombie.asm	/^          s = "(null)";$/;"	d
s	zombie.asm	/^        s = va_arg(ap, char*);$/;"	d
sbrk	cat.asm	/^sbrk:$/;"	l
sbrk	echo.asm	/^sbrk:$/;"	l
sbrk	forktest.asm	/^sbrk:$/;"	l
sbrk	grep.asm	/^sbrk:$/;"	l
sbrk	grind.asm	/^sbrk:$/;"	l
sbrk	init.asm	/^sbrk:$/;"	l
sbrk	kill.asm	/^sbrk:$/;"	l
sbrk	ln.asm	/^sbrk:$/;"	l
sbrk	ls.asm	/^sbrk:$/;"	l
sbrk	mkdir.asm	/^sbrk:$/;"	l
sbrk	rm.asm	/^sbrk:$/;"	l
sbrk	sh.asm	/^sbrk:$/;"	l
sbrk	stressfs.asm	/^sbrk:$/;"	l
sbrk	usertests.asm	/^sbrk:$/;"	l
sbrk	usys.S	/^sbrk:$/;"	l
sbrk	wc.asm	/^sbrk:$/;"	l
sbrk	zombie.asm	/^sbrk:$/;"	l
sbrkarg	usertests.c	/^sbrkarg(char *s)$/;"	f
sbrkbasic	usertests.c	/^sbrkbasic(char *s)$/;"	f
sbrkbugs	usertests.c	/^sbrkbugs(char *s)$/;"	f
sbrkfail	usertests.c	/^sbrkfail(char *s)$/;"	f
sbrkmuch	usertests.c	/^sbrkmuch(char *s)$/;"	f
sharedfd	usertests.c	/^sharedfd(char *s)$/;"	f
size	umalloc.c	/^    uint size;$/;"	m	struct:header::__anon1	file:
sleep	cat.asm	/^sleep:$/;"	l
sleep	echo.asm	/^sleep:$/;"	l
sleep	forktest.asm	/^sleep:$/;"	l
sleep	grep.asm	/^sleep:$/;"	l
sleep	grind.asm	/^sleep:$/;"	l
sleep	init.asm	/^sleep:$/;"	l
sleep	kill.asm	/^sleep:$/;"	l
sleep	ln.asm	/^sleep:$/;"	l
sleep	ls.asm	/^sleep:$/;"	l
sleep	mkdir.asm	/^sleep:$/;"	l
sleep	rm.asm	/^sleep:$/;"	l
sleep	sh.asm	/^sleep:$/;"	l
sleep	stressfs.asm	/^sleep:$/;"	l
sleep	usertests.asm	/^sleep:$/;"	l
sleep	usys.S	/^sleep:$/;"	l
sleep	wc.asm	/^sleep:$/;"	l
sleep	zombie.asm	/^sleep:$/;"	l
src	cat.asm	/^  src = vsrc;$/;"	d
src	echo.asm	/^  src = vsrc;$/;"	d
src	forktest.asm	/^  src = vsrc;$/;"	d
src	grep.asm	/^  src = vsrc;$/;"	d
src	grind.asm	/^  src = vsrc;$/;"	d
src	init.asm	/^  src = vsrc;$/;"	d
src	kill.asm	/^  src = vsrc;$/;"	d
src	ln.asm	/^  src = vsrc;$/;"	d
src	ls.asm	/^  src = vsrc;$/;"	d
src	mkdir.asm	/^  src = vsrc;$/;"	d
src	rm.asm	/^  src = vsrc;$/;"	d
src	sh.asm	/^  src = vsrc;$/;"	d
src	stressfs.asm	/^  src = vsrc;$/;"	d
src	usertests.asm	/^  src = vsrc;$/;"	d
src	wc.asm	/^  src = vsrc;$/;"	d
src	zombie.asm	/^  src = vsrc;$/;"	d
stacktest	usertests.c	/^stacktest(char *s)$/;"	f
start	initcode.S	/^start:$/;"	l
start	initcode.asm	/^start:$/;"	l
stat	ulib.c	/^stat(const char *n, struct stat *st)$/;"	f
state	cat.asm	/^        state = '%';$/;"	d
state	cat.asm	/^      state = 0;$/;"	d
state	cat.asm	/^  state = 0;$/;"	d
state	echo.asm	/^        state = '%';$/;"	d
state	echo.asm	/^      state = 0;$/;"	d
state	echo.asm	/^  state = 0;$/;"	d
state	grep.asm	/^        state = '%';$/;"	d
state	grep.asm	/^      state = 0;$/;"	d
state	grep.asm	/^  state = 0;$/;"	d
state	grind.asm	/^        state = '%';$/;"	d
state	grind.asm	/^      state = 0;$/;"	d
state	grind.asm	/^  state = 0;$/;"	d
state	init.asm	/^        state = '%';$/;"	d
state	init.asm	/^      state = 0;$/;"	d
state	init.asm	/^  state = 0;$/;"	d
state	kill.asm	/^        state = '%';$/;"	d
state	kill.asm	/^      state = 0;$/;"	d
state	kill.asm	/^  state = 0;$/;"	d
state	ln.asm	/^        state = '%';$/;"	d
state	ln.asm	/^      state = 0;$/;"	d
state	ln.asm	/^  state = 0;$/;"	d
state	ls.asm	/^        state = '%';$/;"	d
state	ls.asm	/^      state = 0;$/;"	d
state	ls.asm	/^  state = 0;$/;"	d
state	mkdir.asm	/^        state = '%';$/;"	d
state	mkdir.asm	/^      state = 0;$/;"	d
state	mkdir.asm	/^  state = 0;$/;"	d
state	rm.asm	/^        state = '%';$/;"	d
state	rm.asm	/^      state = 0;$/;"	d
state	rm.asm	/^  state = 0;$/;"	d
state	sh.asm	/^        state = '%';$/;"	d
state	sh.asm	/^      state = 0;$/;"	d
state	sh.asm	/^  state = 0;$/;"	d
state	stressfs.asm	/^        state = '%';$/;"	d
state	stressfs.asm	/^      state = 0;$/;"	d
state	stressfs.asm	/^  state = 0;$/;"	d
state	usertests.asm	/^        state = '%';$/;"	d
state	usertests.asm	/^      state = 0;$/;"	d
state	usertests.asm	/^  state = 0;$/;"	d
state	wc.asm	/^        state = '%';$/;"	d
state	wc.asm	/^      state = 0;$/;"	d
state	wc.asm	/^  state = 0;$/;"	d
state	zombie.asm	/^        state = '%';$/;"	d
state	zombie.asm	/^      state = 0;$/;"	d
state	zombie.asm	/^  state = 0;$/;"	d
static	cat.asm	/^static Header *freep;$/;"	l
static	cat.asm	/^static Header base;$/;"	l
static	cat.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	cat.asm	/^static void$/;"	l
static	echo.asm	/^static Header *freep;$/;"	l
static	echo.asm	/^static Header base;$/;"	l
static	echo.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	echo.asm	/^static void$/;"	l
static	grep.asm	/^static Header *freep;$/;"	l
static	grep.asm	/^static Header base;$/;"	l
static	grep.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	grep.asm	/^static void$/;"	l
static	grind.asm	/^static Header *freep;$/;"	l
static	grind.asm	/^static Header base;$/;"	l
static	grind.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	grind.asm	/^static void$/;"	l
static	init.asm	/^static Header *freep;$/;"	l
static	init.asm	/^static Header base;$/;"	l
static	init.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	init.asm	/^static void$/;"	l
static	kill.asm	/^static Header *freep;$/;"	l
static	kill.asm	/^static Header base;$/;"	l
static	kill.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	kill.asm	/^static void$/;"	l
static	ln.asm	/^static Header *freep;$/;"	l
static	ln.asm	/^static Header base;$/;"	l
static	ln.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	ln.asm	/^static void$/;"	l
static	ls.asm	/^static Header *freep;$/;"	l
static	ls.asm	/^static Header base;$/;"	l
static	ls.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	ls.asm	/^static void$/;"	l
static	mkdir.asm	/^static Header *freep;$/;"	l
static	mkdir.asm	/^static Header base;$/;"	l
static	mkdir.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	mkdir.asm	/^static void$/;"	l
static	rm.asm	/^static Header *freep;$/;"	l
static	rm.asm	/^static Header base;$/;"	l
static	rm.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	rm.asm	/^static void$/;"	l
static	sh.asm	/^static Header *freep;$/;"	l
static	sh.asm	/^static Header base;$/;"	l
static	sh.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	sh.asm	/^static void$/;"	l
static	stressfs.asm	/^static Header *freep;$/;"	l
static	stressfs.asm	/^static Header base;$/;"	l
static	stressfs.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	stressfs.asm	/^static void$/;"	l
static	usertests.asm	/^static Header *freep;$/;"	l
static	usertests.asm	/^static Header base;$/;"	l
static	usertests.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	usertests.asm	/^static inline uint64$/;"	l
static	usertests.asm	/^static void$/;"	l
static	wc.asm	/^static Header *freep;$/;"	l
static	wc.asm	/^static Header base;$/;"	l
static	wc.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	wc.asm	/^static void$/;"	l
static	zombie.asm	/^static Header *freep;$/;"	l
static	zombie.asm	/^static Header base;$/;"	l
static	zombie.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	zombie.asm	/^static void$/;"	l
strchr	ulib.c	/^strchr(const char *s, char c)$/;"	f
strcmp	ulib.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	ulib.c	/^strcpy(char *s, const char *t)$/;"	f
strlen	ulib.c	/^strlen(const char *s)$/;"	f
subdir	usertests.c	/^subdir(char *s)$/;"	f
symbols	sh.c	/^char symbols[] = "<|>&;()";$/;"	v
tok	sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
top	usertests.asm	/^  top = (uint64) sbrk(0);$/;"	d
total	usertests.asm	/^    total = 0;$/;"	d
total	usertests.asm	/^  total = 0;$/;"	d
truncate1	usertests.c	/^truncate1(char *s)$/;"	f
truncate2	usertests.c	/^truncate2(char *s)$/;"	f
truncate3	usertests.c	/^truncate3(char *s)$/;"	f
twochildren	usertests.c	/^twochildren(char *s)$/;"	f
type	sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	sh.c	/^  int type;$/;"	m	struct:redircmd	file:
uint	cat.asm	/^uint$/;"	l
uint	echo.asm	/^uint$/;"	l
uint	forktest.asm	/^uint$/;"	l
uint	grep.asm	/^uint$/;"	l
uint	grind.asm	/^uint$/;"	l
uint	init.asm	/^uint$/;"	l
uint	kill.asm	/^uint$/;"	l
uint	ln.asm	/^uint$/;"	l
uint	ls.asm	/^uint$/;"	l
uint	mkdir.asm	/^uint$/;"	l
uint	rm.asm	/^uint$/;"	l
uint	sh.asm	/^uint$/;"	l
uint	stressfs.asm	/^uint$/;"	l
uint	usertests.asm	/^uint$/;"	l
uint	wc.asm	/^uint$/;"	l
uint	zombie.asm	/^uint$/;"	l
uninit	usertests.c	/^char uninit[10000];$/;"	v
unlink	cat.asm	/^unlink:$/;"	l
unlink	echo.asm	/^unlink:$/;"	l
unlink	forktest.asm	/^unlink:$/;"	l
unlink	grep.asm	/^unlink:$/;"	l
unlink	grind.asm	/^unlink:$/;"	l
unlink	init.asm	/^unlink:$/;"	l
unlink	kill.asm	/^unlink:$/;"	l
unlink	ln.asm	/^unlink:$/;"	l
unlink	ls.asm	/^unlink:$/;"	l
unlink	mkdir.asm	/^unlink:$/;"	l
unlink	rm.asm	/^unlink:$/;"	l
unlink	sh.asm	/^unlink:$/;"	l
unlink	stressfs.asm	/^unlink:$/;"	l
unlink	usertests.asm	/^unlink:$/;"	l
unlink	usys.S	/^unlink:$/;"	l
unlink	wc.asm	/^unlink:$/;"	l
unlink	zombie.asm	/^unlink:$/;"	l
unlinkread	usertests.c	/^unlinkread(char *s)$/;"	f
unsigned	grind.asm	/^unsigned long rand_next = 1;$/;"	l
uptime	cat.asm	/^uptime:$/;"	l
uptime	echo.asm	/^uptime:$/;"	l
uptime	forktest.asm	/^uptime:$/;"	l
uptime	grep.asm	/^uptime:$/;"	l
uptime	grind.asm	/^uptime:$/;"	l
uptime	init.asm	/^uptime:$/;"	l
uptime	kill.asm	/^uptime:$/;"	l
uptime	ln.asm	/^uptime:$/;"	l
uptime	ls.asm	/^uptime:$/;"	l
uptime	mkdir.asm	/^uptime:$/;"	l
uptime	rm.asm	/^uptime:$/;"	l
uptime	sh.asm	/^uptime:$/;"	l
uptime	stressfs.asm	/^uptime:$/;"	l
uptime	usertests.asm	/^uptime:$/;"	l
uptime	usys.S	/^uptime:$/;"	l
uptime	wc.asm	/^uptime:$/;"	l
uptime	zombie.asm	/^uptime:$/;"	l
validatetest	usertests.c	/^validatetest(char *s)$/;"	f
void	cat.asm	/^void *$/;"	l
void	cat.asm	/^void$/;"	l
void	echo.asm	/^void *$/;"	l
void	echo.asm	/^void$/;"	l
void	forktest.asm	/^void *$/;"	l
void	forktest.asm	/^void$/;"	l
void	grep.asm	/^void *$/;"	l
void	grep.asm	/^void$/;"	l
void	grind.asm	/^void *$/;"	l
void	grind.asm	/^void$/;"	l
void	init.asm	/^void *$/;"	l
void	init.asm	/^void$/;"	l
void	kill.asm	/^void *$/;"	l
void	kill.asm	/^void$/;"	l
void	ln.asm	/^void *$/;"	l
void	ln.asm	/^void$/;"	l
void	ls.asm	/^void *$/;"	l
void	ls.asm	/^void$/;"	l
void	mkdir.asm	/^void *$/;"	l
void	mkdir.asm	/^void$/;"	l
void	rm.asm	/^void *$/;"	l
void	rm.asm	/^void$/;"	l
void	sh.asm	/^void *$/;"	l
void	sh.asm	/^void$/;"	l
void	stressfs.asm	/^void *$/;"	l
void	stressfs.asm	/^void$/;"	l
void	usertests.asm	/^void *$/;"	l
void	usertests.asm	/^void$/;"	l
void	wc.asm	/^void *$/;"	l
void	wc.asm	/^void$/;"	l
void	zombie.asm	/^void *$/;"	l
void	zombie.asm	/^void$/;"	l
vprintf	printf.c	/^vprintf(int fd, const char *fmt, va_list ap)$/;"	f
wait	cat.asm	/^wait:$/;"	l
wait	echo.asm	/^wait:$/;"	l
wait	forktest.asm	/^wait:$/;"	l
wait	grep.asm	/^wait:$/;"	l
wait	grind.asm	/^wait:$/;"	l
wait	init.asm	/^wait:$/;"	l
wait	kill.asm	/^wait:$/;"	l
wait	ln.asm	/^wait:$/;"	l
wait	ls.asm	/^wait:$/;"	l
wait	mkdir.asm	/^wait:$/;"	l
wait	rm.asm	/^wait:$/;"	l
wait	sh.asm	/^wait:$/;"	l
wait	stressfs.asm	/^wait:$/;"	l
wait	usertests.asm	/^wait:$/;"	l
wait	usys.S	/^wait:$/;"	l
wait	wc.asm	/^wait:$/;"	l
wait	zombie.asm	/^wait:$/;"	l
wc	wc.c	/^wc(int fd, char *name)$/;"	f
whitespace	sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
wpid	init.asm	/^      wpid = wait((int *) 0);$/;"	d
write	cat.asm	/^write:$/;"	l
write	echo.asm	/^write:$/;"	l
write	forktest.asm	/^write:$/;"	l
write	grep.asm	/^write:$/;"	l
write	grind.asm	/^write:$/;"	l
write	init.asm	/^write:$/;"	l
write	kill.asm	/^write:$/;"	l
write	ln.asm	/^write:$/;"	l
write	ls.asm	/^write:$/;"	l
write	mkdir.asm	/^write:$/;"	l
write	rm.asm	/^write:$/;"	l
write	sh.asm	/^write:$/;"	l
write	stressfs.asm	/^write:$/;"	l
write	usertests.asm	/^write:$/;"	l
write	usys.S	/^write:$/;"	l
write	wc.asm	/^write:$/;"	l
write	zombie.asm	/^write:$/;"	l
writebig	usertests.c	/^writebig(char *s)$/;"	f
writetest	usertests.c	/^writetest(char *s)$/;"	f
x	cat.asm	/^    x = -xx;$/;"	d
x	cat.asm	/^    x = xx;$/;"	d
x	echo.asm	/^    x = -xx;$/;"	d
x	echo.asm	/^    x = xx;$/;"	d
x	grep.asm	/^    x = -xx;$/;"	d
x	grep.asm	/^    x = xx;$/;"	d
x	grind.asm	/^    x = (*ctx % 0x7ffffffe) + 1;$/;"	d
x	grind.asm	/^    x = -xx;$/;"	d
x	grind.asm	/^    x = 16807 * lo - 2836 * hi;$/;"	d
x	grind.asm	/^    x = xx;$/;"	d
x	init.asm	/^    x = -xx;$/;"	d
x	init.asm	/^    x = xx;$/;"	d
x	kill.asm	/^    x = -xx;$/;"	d
x	kill.asm	/^    x = xx;$/;"	d
x	ln.asm	/^    x = -xx;$/;"	d
x	ln.asm	/^    x = xx;$/;"	d
x	ls.asm	/^    x = -xx;$/;"	d
x	ls.asm	/^    x = xx;$/;"	d
x	mkdir.asm	/^    x = -xx;$/;"	d
x	mkdir.asm	/^    x = xx;$/;"	d
x	rm.asm	/^    x = -xx;$/;"	d
x	rm.asm	/^    x = xx;$/;"	d
x	sh.asm	/^    x = -xx;$/;"	d
x	sh.asm	/^    x = xx;$/;"	d
x	stressfs.asm	/^    x = -xx;$/;"	d
x	stressfs.asm	/^    x = xx;$/;"	d
x	umalloc.c	/^  Align x;$/;"	m	union:header	file:
x	usertests.asm	/^    x = -xx;$/;"	d
x	usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	usertests.asm	/^    x = xx;$/;"	d
x	wc.asm	/^    x = -xx;$/;"	d
x	wc.asm	/^    x = xx;$/;"	d
x	zombie.asm	/^    x = -xx;$/;"	d
x	zombie.asm	/^    x = xx;$/;"	d
